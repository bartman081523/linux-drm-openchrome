Repository Documentation
This document provides a comprehensive overview of the repository's structure and contents.
The first section, titled 'Directory/File Tree', displays the repository's hierarchy in a tree format.
In this section, directories and files are listed using tree branches to indicate their structure and relationships.
Following the tree representation, the 'File Content' section details the contents of each file in the repository.
Each file's content is introduced with a '[File Begins]' marker followed by the file's relative path,
and the content is displayed verbatim. The end of each file's content is marked with a '[File Ends]' marker.
This format ensures a clear and orderly presentation of both the structure and the detailed contents of the repository.

Directory/File Tree Begins -->

patch-stable/
├── drivers
│   └── gpu
│       └── drm
│           ├── Kconfig
│           ├── Makefile
│           └── via
│               ├── # Code Citations.md
│               ├── 6.12_PORTING_TODO.md
│               ├── Kconfig
│               ├── Makefile
│               ├── NOTES.md
│               ├── drmP_compat.h
│               ├── via.mod.c
│               ├── via_3d_reg.h
│               ├── via_connector.c
│               ├── via_connector.h
│               ├── via_connector_i2c.c
│               ├── via_connector_stubs.c
│               ├── via_crtc.c
│               ├── via_crtc_hw.c
│               ├── via_crtc_hw.h
│               ├── via_cursor.c
│               ├── via_cursor_regs.h
│               ├── via_dac.c
│               ├── via_dac_regs.h
│               ├── via_disp_reg.h
│               ├── via_display_port.h
│               ├── via_dmablit.c
│               ├── via_drm.h
│               ├── via_drm_uapi.h
│               ├── via_drv.c
│               ├── via_drv.h
│               ├── via_drv_main.h
│               ├── via_encoder.c
│               ├── via_encoder.h
│               ├── via_hdmi.c
│               ├── via_hdmi_regs.h
│               ├── via_i2c.c
│               ├── via_i2c.h
│               ├── via_init.c
│               ├── via_init.h
│               ├── via_ioctl.c
│               ├── via_ioctl.h
│               ├── via_irq.c
│               ├── via_lvds.c
│               ├── via_mm.c
│               ├── via_mm.h
│               ├── via_modeset.c
│               ├── via_object.c
│               ├── via_object.h
│               ├── via_pcie.c
│               ├── via_pll.c
│               ├── via_pll.h
│               ├── via_pm.c
│               ├── via_pm.h
│               ├── via_regs.h
│               ├── via_regset.c
│               ├── via_regset.h
│               ├── via_sii164.c
│               ├── via_tmds.c
│               ├── via_tmds.h
│               ├── via_tmds_regs.h
│               ├── via_ttm.c
│               ├── via_ttm_mod.h
│               ├── via_ttm_stubs.c
│               ├── via_tx.c
│               ├── via_tx_regs.h
│               ├── via_verifier.c
│               ├── via_version.h
│               ├── via_vga.h
│               ├── via_vgahw.c
│               ├── via_vgahw.h
│               └── via_vt1632.c
└── include
    └── uapi
        └── drm
            └── via_drm.h

<-- Directory/File Tree Ends

File Content Begin -->
[File Begins] drivers/gpu/drm/Kconfig
# SPDX-License-Identifier: GPL-2.0-only
#
# Drm device configuration
#
# This driver provides support for the
# Direct Rendering Infrastructure (DRI) in XFree86 4.1.0 and higher.
#
menuconfig DRM
	tristate "Direct Rendering Manager (XFree86 4.1.0 and higher DRI support)"
	depends on (AGP || AGP=n) && !EMULATED_CMPXCHG && HAS_DMA
	select DRM_PANEL_ORIENTATION_QUIRKS
	select DRM_KMS_HELPER if DRM_FBDEV_EMULATION
	select FB_CORE if DRM_FBDEV_EMULATION
	select FB_SYSMEM_HELPERS_DEFERRED if DRM_FBDEV_EMULATION
	select HDMI
	select I2C
	select DMA_SHARED_BUFFER
	select SYNC_FILE
# gallium uses SYS_kcmp for os_same_file_description() to de-duplicate
# device and dmabuf fd. Let's make sure that is available for our userspace.
	select KCMP
	select VIDEO
	help
	  Kernel-level support for the Direct Rendering Infrastructure (DRI)
	  introduced in XFree86 4.0. If you say Y here, you need to select
	  the module that's right for your graphics card from the list below.
	  These modules provide support for synchronization, security, and
	  DMA transfers. Please see <http://dri.sourceforge.net/> for more
	  details.  You should also select and configure AGP
	  (/dev/agpgart) support if it is available for your platform.

if DRM

config DRM_MIPI_DBI
	tristate
	depends on DRM
	select DRM_KMS_HELPER

config DRM_MIPI_DSI
	bool
	depends on DRM

config DRM_DEBUG_MM
	bool "Insert extra checks and debug info into the DRM range managers"
	default n
	depends on DRM
	depends on STACKTRACE_SUPPORT
	select STACKDEPOT
	help
	  Enable allocation tracking of memory manager and leak detection on
	  shutdown.

	  Recommended for driver developers only.

	  If in doubt, say "N".

config DRM_USE_DYNAMIC_DEBUG
	bool "use dynamic debug to implement drm.debug"
	default n
	depends on BROKEN
	depends on DRM
	depends on DYNAMIC_DEBUG || DYNAMIC_DEBUG_CORE
	depends on JUMP_LABEL
	help
	  Use dynamic-debug to avoid drm_debug_enabled() runtime overheads.
	  Due to callsite counts in DRM drivers (~4k in amdgpu) and 56
	  bytes per callsite, the .data costs can be substantial, and
	  are therefore configurable.

config DRM_KUNIT_TEST_HELPERS
	tristate
	depends on DRM && KUNIT
	select DRM_KMS_HELPER
	help
	  KUnit Helpers for KMS drivers.

config DRM_KUNIT_TEST
	tristate "KUnit tests for DRM" if !KUNIT_ALL_TESTS
	depends on DRM && KUNIT && MMU
	select DRM_BUDDY
	select DRM_DISPLAY_DP_HELPER
	select DRM_DISPLAY_HDMI_STATE_HELPER
	select DRM_DISPLAY_HELPER
	select DRM_EXEC
	select DRM_EXPORT_FOR_TESTS if m
	select DRM_GEM_SHMEM_HELPER
	select DRM_KUNIT_TEST_HELPERS
	select DRM_LIB_RANDOM
	select PRIME_NUMBERS
	default KUNIT_ALL_TESTS
	help
	  This builds unit tests for DRM. This option is not useful for
	  distributions or general kernels, but only for kernel
	  developers working on DRM and associated drivers.

	  For more information on KUnit and unit tests in general,
	  please refer to the KUnit documentation in
	  Documentation/dev-tools/kunit/.

	  If in doubt, say "N".

config DRM_KMS_HELPER
	tristate
	depends on DRM
	help
	  CRTC helpers for KMS drivers.

config DRM_PANIC
	bool "Display a user-friendly message when a kernel panic occurs"
	depends on DRM
	select FONT_SUPPORT
	help
	  Enable a drm panic handler, which will display a user-friendly message
	  when a kernel panic occurs. It's useful when using a user-space
	  console instead of fbcon.
	  It will only work if your graphic driver supports this feature.
	  To support Hi-DPI Display, you can enable bigger fonts like
	  FONT_TER16x32

config DRM_PANIC_FOREGROUND_COLOR
	hex "Drm panic screen foreground color, in RGB"
	depends on DRM_PANIC
	default 0xffffff

config DRM_PANIC_BACKGROUND_COLOR
	hex "Drm panic screen background color, in RGB"
	depends on DRM_PANIC
	default 0x000000

config DRM_PANIC_DEBUG
	bool "Add a debug fs entry to trigger drm_panic"
	depends on DRM_PANIC && DEBUG_FS
	help
	  Add dri/[device]/drm_panic_plane_x in the kernel debugfs, to force the
	  panic handler to write the panic message to this plane scanout buffer.
	  This is unsafe and should not be enabled on a production build.
	  If in doubt, say "N".

config DRM_PANIC_SCREEN
	string "Panic screen formatter"
	default "user"
	depends on DRM_PANIC
	help
	  This option enable to choose what will be displayed when a kernel
	  panic occurs. You can choose between "user", a short message telling
	  the user to reboot the system, or "kmsg" which will display the last
	  lines of kmsg.
	  This can also be overridden by drm.panic_screen=xxxx kernel parameter
	  or by writing to /sys/module/drm/parameters/panic_screen sysfs entry
	  Default is "user"

config DRM_PANIC_SCREEN_QR_CODE
	bool "Add a panic screen with a QR code"
	depends on DRM_PANIC && RUST
	select ZLIB_DEFLATE
	help
	  This option adds a QR code generator, and a panic screen with a QR
	  code. The QR code will contain the last lines of kmsg and other debug
	  information. This should be easier for the user to report a kernel
	  panic, with all debug information available.
	  To use this panic screen, also set DRM_PANIC_SCREEN to "qr_code"

config DRM_PANIC_SCREEN_QR_CODE_URL
	string "Base URL of the QR code in the panic screen"
	depends on DRM_PANIC_SCREEN_QR_CODE
	help
	  This option sets the base URL to report the kernel panic. If it's set
	  the QR code will contain the URL and the kmsg compressed with zlib as
	  a URL parameter. If it's empty, the QR code will contain the kmsg as
	  uncompressed text only.
	  There is a demo code in javascript, to decode and uncompress the kmsg
	  data from the URL parameter at https://github.com/kdj0c/panic_report

config DRM_PANIC_SCREEN_QR_VERSION
	int "Maximum version (size) of the QR code."
	depends on DRM_PANIC_SCREEN_QR_CODE
	default 40
	help
	  This option limits the version (or size) of the QR code. QR code
	  version ranges from Version 1 (21x21) to Version 40 (177x177).
	  Smaller QR code are easier to read, but will contain less debugging
	  data. Default is 40.

config DRM_DEBUG_DP_MST_TOPOLOGY_REFS
        bool "Enable refcount backtrace history in the DP MST helpers"
	depends on STACKTRACE_SUPPORT
        select STACKDEPOT
        depends on DRM_KMS_HELPER
        depends on DEBUG_KERNEL
        depends on EXPERT
        help
          Enables debug tracing for topology refs in DRM's DP MST helpers. A
          history of each topology reference/dereference will be printed to the
          kernel log once a port or branch device's topology refcount reaches 0.

          This has the potential to use a lot of memory and print some very
          large kernel messages. If in doubt, say "N".

config DRM_DEBUG_MODESET_LOCK
	bool "Enable backtrace history for lock contention"
	depends on STACKTRACE_SUPPORT
	depends on DEBUG_KERNEL
	depends on EXPERT
	select STACKDEPOT
	default y if DEBUG_WW_MUTEX_SLOWPATH
	help
	  Enable debug tracing of failures to gracefully handle drm modeset lock
	  contention. A history of each drm modeset lock path hitting -EDEADLK
	  will be saved until gracefully handled, and the backtrace will be
	  printed when attempting to lock a contended lock.

	  If in doubt, say "N".

config DRM_FBDEV_EMULATION
	bool "Enable legacy fbdev support for your modesetting driver"
	depends on DRM
	select FRAMEBUFFER_CONSOLE_DETECT_PRIMARY if FRAMEBUFFER_CONSOLE
	default FB
	help
	  Choose this option if you have a need for the legacy fbdev
	  support. Note that this support also provides the linux console
	  support on top of your modesetting driver.

	  If in doubt, say "Y".

config DRM_FBDEV_OVERALLOC
	int "Overallocation of the fbdev buffer"
	depends on DRM_FBDEV_EMULATION
	default 100
	help
	  Defines the fbdev buffer overallocation in percent. Default
	  is 100. Typical values for double buffering will be 200,
	  triple buffering 300.

config DRM_FBDEV_LEAK_PHYS_SMEM
	bool "Shamelessly allow leaking of fbdev physical address (DANGEROUS)"
	depends on DRM_FBDEV_EMULATION && EXPERT
	default n
	help
	  In order to keep user-space compatibility, we want in certain
	  use-cases to keep leaking the fbdev physical address to the
	  user-space program handling the fbdev buffer.
	  This affects, not only, Amlogic, Allwinner or Rockchip devices
	  with ARM Mali GPUs using an userspace Blob.
	  This option is not supported by upstream developers and should be
	  removed as soon as possible and be considered as a broken and
	  legacy behaviour from a modern fbdev device driver.

	  Please send any bug reports when using this to your proprietary
	  software vendor that requires this.

	  If in doubt, say "N" or spread the word to your closed source
	  library vendor.

config DRM_LOAD_EDID_FIRMWARE
	bool "Allow to specify an EDID data set instead of probing for it"
	depends on DRM
	help
	  Say Y here, if you want to use EDID data to be loaded from the
	  /lib/firmware directory or one of the provided built-in
	  data sets. This may be necessary, if the graphics adapter or
	  monitor are unable to provide appropriate EDID data. Since this
	  feature is provided as a workaround for broken hardware, the
	  default case is N. Details and instructions how to build your own
	  EDID data are given in Documentation/admin-guide/edid.rst.

source "drivers/gpu/drm/display/Kconfig"

config DRM_TTM
	tristate
	depends on DRM && MMU
	help
	  GPU memory management subsystem for devices with multiple
	  GPU memory types. Will be enabled automatically if a device driver
	  uses it.

config DRM_TTM_KUNIT_TEST
        tristate "KUnit tests for TTM" if !KUNIT_ALL_TESTS
        default n
        depends on DRM && KUNIT && MMU && (UML || COMPILE_TEST)
        select DRM_TTM
        select DRM_BUDDY
        select DRM_EXPORT_FOR_TESTS if m
        select DRM_KUNIT_TEST_HELPERS
        default KUNIT_ALL_TESTS
        help
          Enables unit tests for TTM, a GPU memory manager subsystem used
          to manage memory buffers. This option is mostly useful for kernel
          developers. It depends on (UML || COMPILE_TEST) since no other driver
          which uses TTM can be loaded while running the tests.

          If in doubt, say "N".

config DRM_EXEC
	tristate
	depends on DRM
	help
	  Execution context for command submissions

config DRM_GPUVM
	tristate
	depends on DRM
	select DRM_EXEC
	help
	  GPU-VM representation providing helpers to manage a GPUs virtual
	  address space

config DRM_BUDDY
	tristate
	depends on DRM
	help
	  A page based buddy allocator

config DRM_VRAM_HELPER
	tristate
	depends on DRM
	help
	  Helpers for VRAM memory management

config DRM_TTM_HELPER
	tristate
	depends on DRM
	select DRM_TTM
	help
	  Helpers for ttm-based gem objects

config DRM_GEM_DMA_HELPER
	tristate
	depends on DRM
	select FB_DMAMEM_HELPERS_DEFERRED if DRM_FBDEV_EMULATION
	help
	  Choose this if you need the GEM DMA helper functions

config DRM_GEM_SHMEM_HELPER
	tristate
	depends on DRM && MMU
	help
	  Choose this if you need the GEM shmem helper functions

config DRM_SUBALLOC_HELPER
	tristate
	depends on DRM

config DRM_SCHED
	tristate
	depends on DRM

source "drivers/gpu/drm/i2c/Kconfig"

source "drivers/gpu/drm/arm/Kconfig"

source "drivers/gpu/drm/radeon/Kconfig"

source "drivers/gpu/drm/amd/amdgpu/Kconfig"

source "drivers/gpu/drm/nouveau/Kconfig"

source "drivers/gpu/drm/i915/Kconfig"

source "drivers/gpu/drm/xe/Kconfig"

source "drivers/gpu/drm/kmb/Kconfig"

config DRM_VGEM
	tristate "Virtual GEM provider"
	depends on DRM && MMU
	select DRM_GEM_SHMEM_HELPER
	help
	  Choose this option to get a virtual graphics memory manager,
	  as used by Mesa's software renderer for enhanced performance.
	  If M is selected the module will be called vgem.

source "drivers/gpu/drm/vkms/Kconfig"

source "drivers/gpu/drm/exynos/Kconfig"

source "drivers/gpu/drm/rockchip/Kconfig"

source "drivers/gpu/drm/vmwgfx/Kconfig"

source "drivers/gpu/drm/gma500/Kconfig"

source "drivers/gpu/drm/udl/Kconfig"

source "drivers/gpu/drm/ast/Kconfig"

source "drivers/gpu/drm/mgag200/Kconfig"

source "drivers/gpu/drm/armada/Kconfig"

source "drivers/gpu/drm/atmel-hlcdc/Kconfig"

source "drivers/gpu/drm/renesas/Kconfig"

source "drivers/gpu/drm/sun4i/Kconfig"

source "drivers/gpu/drm/omapdrm/Kconfig"

source "drivers/gpu/drm/tilcdc/Kconfig"

source "drivers/gpu/drm/qxl/Kconfig"

source "drivers/gpu/drm/virtio/Kconfig"

source "drivers/gpu/drm/msm/Kconfig"

source "drivers/gpu/drm/fsl-dcu/Kconfig"

source "drivers/gpu/drm/tegra/Kconfig"

source "drivers/gpu/drm/stm/Kconfig"

source "drivers/gpu/drm/panel/Kconfig"

source "drivers/gpu/drm/bridge/Kconfig"

source "drivers/gpu/drm/sti/Kconfig"

source "drivers/gpu/drm/imx/Kconfig"

source "drivers/gpu/drm/ingenic/Kconfig"

source "drivers/gpu/drm/v3d/Kconfig"

source "drivers/gpu/drm/vc4/Kconfig"

source "drivers/gpu/drm/loongson/Kconfig"

source "drivers/gpu/drm/etnaviv/Kconfig"

source "drivers/gpu/drm/hisilicon/Kconfig"

source "drivers/gpu/drm/logicvc/Kconfig"

source "drivers/gpu/drm/mediatek/Kconfig"

source "drivers/gpu/drm/mxsfb/Kconfig"

source "drivers/gpu/drm/meson/Kconfig"

source "drivers/gpu/drm/tiny/Kconfig"

source "drivers/gpu/drm/pl111/Kconfig"

source "drivers/gpu/drm/tve200/Kconfig"

source "drivers/gpu/drm/xen/Kconfig"

source "drivers/gpu/drm/vboxvideo/Kconfig"

source "drivers/gpu/drm/lima/Kconfig"

source "drivers/gpu/drm/panfrost/Kconfig"

source "drivers/gpu/drm/panthor/Kconfig"

source "drivers/gpu/drm/aspeed/Kconfig"

source "drivers/gpu/drm/mcde/Kconfig"

source "drivers/gpu/drm/tidss/Kconfig"

source "drivers/gpu/drm/xlnx/Kconfig"

source "drivers/gpu/drm/gud/Kconfig"

source "drivers/gpu/drm/solomon/Kconfig"

source "drivers/gpu/drm/sprd/Kconfig"

source "drivers/gpu/drm/imagination/Kconfig"

config DRM_HYPERV
	tristate "DRM Support for Hyper-V synthetic video device"
	depends on DRM && PCI && MMU && HYPERV
	select DRM_KMS_HELPER
	select DRM_GEM_SHMEM_HELPER
	help
	 This is a KMS driver for Hyper-V synthetic video device. Choose this
	 option if you would like to enable drm driver for Hyper-V virtual
	 machine. Unselect Hyper-V framebuffer driver (CONFIG_FB_HYPERV) so
	 that DRM driver is used by default.

	 If M is selected the module will be called hyperv_drm.

source "drivers/gpu/drm/via/Kconfig"

config DRM_EXPORT_FOR_TESTS
	bool

# Separate option as not all DRM drivers use it
config DRM_PANEL_BACKLIGHT_QUIRKS
	tristate

config DRM_LIB_RANDOM
	bool
	default n

config DRM_PRIVACY_SCREEN
	bool
	default n

config DRM_WERROR
	bool "Compile the drm subsystem with warnings as errors"
	depends on DRM && EXPERT
	depends on !WERROR
	default n
	help
	  A kernel build should not cause any compiler warnings, and this
	  enables the '-Werror' flag to enforce that rule in the drm subsystem.

	  The drm subsystem enables more warnings than the kernel default, so
	  this config option is disabled by default.

	  If in doubt, say N.

endif

# Separate option because drm_panel_orientation_quirks.c is shared with fbdev
config DRM_PANEL_ORIENTATION_QUIRKS
	tristate

[File Ends] drivers/gpu/drm/Kconfig

[File Begins] drivers/gpu/drm/Makefile
# SPDX-License-Identifier: GPL-2.0

# Makefile for the drm device driver.  This driver provides support for the
# Direct Rendering Infrastructure (DRI) in XFree86 4.1.0 and higher.

CFLAGS-$(CONFIG_DRM_USE_DYNAMIC_DEBUG)	+= -DDYNAMIC_DEBUG_MODULE

# Unconditionally enable W=1 warnings locally
# --- begin copy-paste W=1 warnings from scripts/Makefile.extrawarn
subdir-ccflags-y += -Wextra -Wunused -Wno-unused-parameter
subdir-ccflags-y += $(call cc-option, -Wrestrict)
subdir-ccflags-y += -Wmissing-format-attribute
subdir-ccflags-y += -Wold-style-definition
subdir-ccflags-y += -Wmissing-include-dirs
subdir-ccflags-y += $(call cc-option, -Wunused-but-set-variable)
subdir-ccflags-y += $(call cc-option, -Wunused-const-variable)
subdir-ccflags-y += $(call cc-option, -Wpacked-not-aligned)
subdir-ccflags-y += $(call cc-option, -Wformat-overflow)
# FIXME: fix -Wformat-truncation warnings and uncomment
#subdir-ccflags-y += $(call cc-option, -Wformat-truncation)
subdir-ccflags-y += $(call cc-option, -Wstringop-truncation)
# The following turn off the warnings enabled by -Wextra
ifeq ($(findstring 2, $(KBUILD_EXTRA_WARN)),)
subdir-ccflags-y += -Wno-missing-field-initializers
subdir-ccflags-y += -Wno-type-limits
subdir-ccflags-y += -Wno-shift-negative-value
endif
ifeq ($(findstring 3, $(KBUILD_EXTRA_WARN)),)
subdir-ccflags-y += -Wno-sign-compare
endif
# --- end copy-paste

# Enable -Werror in CI and development
subdir-ccflags-$(CONFIG_DRM_WERROR) += -Werror

drm-y := \
	drm_aperture.o \
	drm_atomic.o \
	drm_atomic_uapi.o \
	drm_auth.o \
	drm_blend.o \
	drm_bridge.o \
	drm_cache.o \
	drm_client.o \
	drm_client_modeset.o \
	drm_color_mgmt.o \
	drm_connector.o \
	drm_crtc.o \
	drm_displayid.o \
	drm_drv.o \
	drm_dumb_buffers.o \
	drm_edid.o \
	drm_eld.o \
	drm_encoder.o \
	drm_file.o \
	drm_fourcc.o \
	drm_framebuffer.o \
	drm_gem.o \
	drm_ioctl.o \
	drm_lease.o \
	drm_managed.o \
	drm_mm.o \
	drm_mode_config.o \
	drm_mode_object.o \
	drm_modes.o \
	drm_modeset_lock.o \
	drm_plane.o \
	drm_prime.o \
	drm_print.o \
	drm_property.o \
	drm_syncobj.o \
	drm_sysfs.o \
	drm_trace_points.o \
	drm_vblank.o \
	drm_vblank_work.o \
	drm_vma_manager.o \
	drm_writeback.o
drm-$(CONFIG_DRM_LIB_RANDOM) += lib/drm_random.o
drm-$(CONFIG_COMPAT) += drm_ioc32.o
drm-$(CONFIG_DRM_PANEL) += drm_panel.o
drm-$(CONFIG_OF) += drm_of.o
drm-$(CONFIG_PCI) += drm_pci.o
drm-$(CONFIG_DEBUG_FS) += \
	drm_debugfs.o \
	drm_debugfs_crc.o
drm-$(CONFIG_DRM_LOAD_EDID_FIRMWARE) += drm_edid_load.o
drm-$(CONFIG_DRM_PRIVACY_SCREEN) += \
	drm_privacy_screen.o \
	drm_privacy_screen_x86.o
drm-$(CONFIG_DRM_ACCEL) += ../../accel/drm_accel.o
drm-$(CONFIG_DRM_PANIC) += drm_panic.o
drm-$(CONFIG_DRM_PANIC_SCREEN_QR_CODE) += drm_panic_qr.o
obj-$(CONFIG_DRM)	+= drm.o

obj-$(CONFIG_DRM_PANEL_ORIENTATION_QUIRKS) += drm_panel_orientation_quirks.o
obj-$(CONFIG_DRM_PANEL_BACKLIGHT_QUIRKS) += drm_panel_backlight_quirks.o

#
# Memory-management helpers
#
#
obj-$(CONFIG_DRM_EXEC) += drm_exec.o
obj-$(CONFIG_DRM_GPUVM) += drm_gpuvm.o

obj-$(CONFIG_DRM_BUDDY) += drm_buddy.o

drm_dma_helper-y := drm_gem_dma_helper.o
drm_dma_helper-$(CONFIG_DRM_FBDEV_EMULATION) += drm_fbdev_dma.o
drm_dma_helper-$(CONFIG_DRM_KMS_HELPER) += drm_fb_dma_helper.o
obj-$(CONFIG_DRM_GEM_DMA_HELPER) += drm_dma_helper.o

drm_shmem_helper-y := drm_gem_shmem_helper.o
drm_shmem_helper-$(CONFIG_DRM_FBDEV_EMULATION) += drm_fbdev_shmem.o
obj-$(CONFIG_DRM_GEM_SHMEM_HELPER) += drm_shmem_helper.o

drm_suballoc_helper-y := drm_suballoc.o
obj-$(CONFIG_DRM_SUBALLOC_HELPER) += drm_suballoc_helper.o

drm_vram_helper-y := drm_gem_vram_helper.o
obj-$(CONFIG_DRM_VRAM_HELPER) += drm_vram_helper.o

drm_ttm_helper-y := drm_gem_ttm_helper.o
drm_ttm_helper-$(CONFIG_DRM_FBDEV_EMULATION) += drm_fbdev_ttm.o
obj-$(CONFIG_DRM_TTM_HELPER) += drm_ttm_helper.o

#
# Modesetting helpers
#

drm_kms_helper-y := \
	drm_atomic_helper.o \
	drm_atomic_state_helper.o \
	drm_crtc_helper.o \
	drm_damage_helper.o \
	drm_encoder_slave.o \
	drm_flip_work.o \
	drm_format_helper.o \
	drm_gem_atomic_helper.o \
	drm_gem_framebuffer_helper.o \
	drm_kms_helper_common.o \
	drm_modeset_helper.o \
	drm_plane_helper.o \
	drm_probe_helper.o \
	drm_rect.o \
	drm_self_refresh_helper.o \
	drm_simple_kms_helper.o
drm_kms_helper-$(CONFIG_DRM_PANEL_BRIDGE) += bridge/panel.o
drm_kms_helper-$(CONFIG_DRM_FBDEV_EMULATION) += drm_fb_helper.o
obj-$(CONFIG_DRM_KMS_HELPER) += drm_kms_helper.o

#
# Drivers and the rest
#

obj-y			+= tests/

obj-$(CONFIG_DRM_MIPI_DBI) += drm_mipi_dbi.o
obj-$(CONFIG_DRM_MIPI_DSI) += drm_mipi_dsi.o
obj-y			+= arm/
obj-y			+= display/
obj-$(CONFIG_DRM_TTM)	+= ttm/
obj-$(CONFIG_DRM_SCHED)	+= scheduler/
obj-$(CONFIG_DRM_RADEON)+= radeon/
obj-$(CONFIG_DRM_AMDGPU)+= amd/amdgpu/
obj-$(CONFIG_DRM_AMDGPU)+= amd/amdxcp/
obj-$(CONFIG_DRM_I915)	+= i915/
obj-$(CONFIG_DRM_XE)	+= xe/
obj-$(CONFIG_DRM_KMB_DISPLAY)  += kmb/
obj-$(CONFIG_DRM_MGAG200) += mgag200/
obj-$(CONFIG_DRM_V3D)  += v3d/
obj-$(CONFIG_DRM_VC4)  += vc4/
obj-$(CONFIG_DRM_VMWGFX)+= vmwgfx/
obj-$(CONFIG_DRM_VGEM)	+= vgem/
obj-$(CONFIG_DRM_VKMS)	+= vkms/
obj-$(CONFIG_DRM_NOUVEAU) +=nouveau/
obj-$(CONFIG_DRM_EXYNOS) +=exynos/
obj-$(CONFIG_DRM_ROCKCHIP) +=rockchip/
obj-$(CONFIG_DRM_GMA500) += gma500/
obj-$(CONFIG_DRM_UDL) += udl/
obj-$(CONFIG_DRM_AST) += ast/
obj-$(CONFIG_DRM_ARMADA) += armada/
obj-$(CONFIG_DRM_ATMEL_HLCDC)	+= atmel-hlcdc/
obj-y			+= renesas/
obj-y			+= omapdrm/
obj-$(CONFIG_DRM_SUN4I) += sun4i/
obj-y			+= tilcdc/
obj-$(CONFIG_DRM_QXL) += qxl/
obj-$(CONFIG_DRM_VIRTIO_GPU) += virtio/
obj-$(CONFIG_DRM_MSM) += msm/
obj-$(CONFIG_DRM_TEGRA) += tegra/
obj-$(CONFIG_DRM_STM) += stm/
obj-$(CONFIG_DRM_STI) += sti/
obj-y 			+= imx/
obj-$(CONFIG_DRM_INGENIC) += ingenic/
obj-$(CONFIG_DRM_LOGICVC) += logicvc/
obj-$(CONFIG_DRM_MEDIATEK) += mediatek/
obj-$(CONFIG_DRM_MESON)	+= meson/
obj-y			+= i2c/
obj-y			+= panel/
obj-y			+= bridge/
obj-$(CONFIG_DRM_FSL_DCU) += fsl-dcu/
obj-$(CONFIG_DRM_ETNAVIV) += etnaviv/
obj-y			+= hisilicon/
obj-y			+= mxsfb/
obj-y			+= tiny/
obj-$(CONFIG_DRM_PL111) += pl111/
obj-$(CONFIG_DRM_TVE200) += tve200/
obj-$(CONFIG_DRM_XEN) += xen/
obj-$(CONFIG_DRM_VBOXVIDEO) += vboxvideo/
obj-$(CONFIG_DRM_LIMA)  += lima/
obj-$(CONFIG_DRM_PANFROST) += panfrost/
obj-$(CONFIG_DRM_PANTHOR) += panthor/
obj-$(CONFIG_DRM_ASPEED_GFX) += aspeed/
obj-$(CONFIG_DRM_MCDE) += mcde/
obj-$(CONFIG_DRM_TIDSS) += tidss/
obj-y			+= xlnx/
obj-y			+= gud/
obj-$(CONFIG_DRM_HYPERV) += hyperv/
obj-y			+= solomon/
obj-$(CONFIG_DRM_SPRD) += sprd/
obj-$(CONFIG_DRM_LOONGSON) += loongson/
obj-$(CONFIG_DRM_POWERVR) += imagination/
obj-$(CONFIG_DRM_VIA) += via/

obj-$(CONFIG_DRM_EXPORT_FOR_TESTS) += exports.o

[File Ends] drivers/gpu/drm/Makefile

[File Begins] drivers/gpu/drm/via/# Code Citations.md
# Code Citations

## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
.
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associate
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associate
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 *
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 *
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 *
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 *
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to 
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to 
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be include
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be include
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be include
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED,
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED,
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED,
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NO
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NO
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NO
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NO
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NO
```


## License: unknown
https://github.com/aosp-mirror/kernel_common/blob/fe0f4e33f69f7a62a5eb657c473a8bbfb398e8b0/drivers/gpu/drm/nouveau/dispnv04/dac.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NO
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INF
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INF
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INF
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INF
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INF
```


## License: unknown
https://github.com/aosp-mirror/kernel_common/blob/fe0f4e33f69f7a62a5eb657c473a8bbfb398e8b0/drivers/gpu/drm/nouveau/dispnv04/dac.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INF
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO
```


## License: unknown
https://github.com/aosp-mirror/kernel_common/blob/fe0f4e33f69f7a62a5eb657c473a8bbfb398e8b0/drivers/gpu/drm/nouveau/dispnv04/dac.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 
```


## License: unknown
https://github.com/aosp-mirror/kernel_common/blob/fe0f4e33f69f7a62a5eb657c473a8bbfb398e8b0/drivers/gpu/drm/nouveau/dispnv04/dac.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS
```


## License: unknown
https://github.com/aosp-mirror/kernel_common/blob/fe0f4e33f69f7a62a5eb657c473a8bbfb398e8b0/drivers/gpu/drm/nouveau/dispnv04/dac.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE
```


## License: unknown
https://github.com/aosp-mirror/kernel_common/blob/fe0f4e33f69f7a62a5eb657c473a8bbfb398e8b0/drivers/gpu/drm/nouveau/dispnv04/dac.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
```


## License: unknown
https://github.com/aosp-mirror/kernel_common/blob/fe0f4e33f69f7a62a5eb657c473a8bbfb398e8b0/drivers/gpu/drm/nouveau/dispnv04/dac.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
```


## License: unknown
https://github.com/aosp-mirror/kernel_common/blob/fe0f4e33f69f7a62a5eb657c473a8bbfb398e8b0/drivers/gpu/drm/nouveau/dispnv04/dac.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *
```


## License: unknown
https://github.com/aosp-mirror/kernel_common/blob/fe0f4e33f69f7a62a5eb657c473a8bbfb398e8b0/drivers/gpu/drm/nouveau/dispnv04/dac.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN
```


## License: unknown
https://github.com/aosp-mirror/kernel_common/blob/fe0f4e33f69f7a62a5eb657c473a8bbfb398e8b0/drivers/gpu/drm/nouveau/dispnv04/dac.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT
```


## License: unknown
https://github.com/aosp-mirror/kernel_common/blob/fe0f4e33f69f7a62a5eb657c473a8bbfb398e8b0/drivers/gpu/drm/nouveau/dispnv04/dac.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE
```


## License: unknown
https://github.com/aosp-mirror/kernel_common/blob/fe0f4e33f69f7a62a5eb657c473a8bbfb398e8b0/drivers/gpu/drm/nouveau/dispnv04/dac.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 
```


## License: unknown
https://github.com/aosp-mirror/kernel_common/blob/fe0f4e33f69f7a62a5eb657c473a8bbfb398e8b0/drivers/gpu/drm/nouveau/dispnv04/dac.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT
```


## License: unknown
https://github.com/aosp-mirror/kernel_common/blob/fe0f4e33f69f7a62a5eb657c473a8bbfb398e8b0/drivers/gpu/drm/nouveau/dispnv04/dac.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION
```


## License: unknown
https://github.com/aosp-mirror/kernel_common/blob/fe0f4e33f69f7a62a5eb657c473a8bbfb398e8b0/drivers/gpu/drm/nouveau/dispnv04/dac.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
```


## License: unknown
https://github.com/aosp-mirror/kernel_common/blob/fe0f4e33f69f7a62a5eb657c473a8bbfb398e8b0/drivers/gpu/drm/nouveau/dispnv04/dac.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
```


## License: unknown
https://github.com/aosp-mirror/kernel_common/blob/fe0f4e33f69f7a62a5eb657c473a8bbfb398e8b0/drivers/gpu/drm/nouveau/dispnv04/dac.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 *
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 *
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 *
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 *
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 *
```


## License: unknown
https://github.com/aosp-mirror/kernel_common/blob/fe0f4e33f69f7a62a5eb657c473a8bbfb398e8b0/drivers/gpu/drm/nouveau/dispnv04/dac.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 *
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE
```


## License: unknown
https://github.com/aosp-mirror/kernel_common/blob/fe0f4e33f69f7a62a5eb657c473a8bbfb398e8b0/drivers/gpu/drm/nouveau/dispnv04/dac.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
```


## License: unknown
https://github.com/aosp-mirror/kernel_common/blob/fe0f4e33f69f7a62a5eb657c473a8bbfb398e8b0/drivers/gpu/drm/nouveau/dispnv04/dac.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include 
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include 
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include 
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include 
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include 
```


## License: unknown
https://github.com/aosp-mirror/kernel_common/blob/fe0f4e33f69f7a62a5eb657c473a8bbfb398e8b0/drivers/gpu/drm/nouveau/dispnv04/dac.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include 
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/dr
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/dr
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/dr
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/dr
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/dr
```


## License: unknown
https://github.com/aosp-mirror/kernel_common/blob/fe0f4e33f69f7a62a5eb657c473a8bbfb398e8b0/drivers/gpu/drm/nouveau/dispnv04/dac.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/dr
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/drm_mo
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/drm_mo
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/drm_mo
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/drm_mo
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/drm_mo
```


## License: unknown
https://github.com/aosp-mirror/kernel_common/blob/fe0f4e33f69f7a62a5eb657c473a8bbfb398e8b0/drivers/gpu/drm/nouveau/dispnv04/dac.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/drm_mo
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/drm_modeset_
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/drm_modeset_
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/drm_modeset_
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/drm_modeset_
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/drm_modeset_
```


## License: unknown
https://github.com/aosp-mirror/kernel_common/blob/fe0f4e33f69f7a62a5eb657c473a8bbfb398e8b0/drivers/gpu/drm/nouveau/dispnv04/dac.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/drm_modeset_
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/drm_modeset_helper_
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/drm_modeset_helper_
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/drm_modeset_helper_
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/drm_modeset_helper_
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/drm_modeset_helper_
```


## License: unknown
https://github.com/aosp-mirror/kernel_common/blob/fe0f4e33f69f7a62a5eb657c473a8bbfb398e8b0/drivers/gpu/drm/nouveau/dispnv04/dac.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/drm_modeset_helper_
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/drm_modeset_helper_vt
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/drm_modeset_helper_vt
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/drm_modeset_helper_vt
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/drm_modeset_helper_vt
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/drm_modeset_helper_vt
```


## License: unknown
https://github.com/aosp-mirror/kernel_common/blob/fe0f4e33f69f7a62a5eb657c473a8bbfb398e8b0/drivers/gpu/drm/nouveau/dispnv04/dac.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/drm_modeset_helper_vt
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/drm_modeset_helper_vtables
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/drm_modeset_helper_vtables
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/drm_modeset_helper_vtables
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/drm_modeset_helper_vtables
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/drm_modeset_helper_vtables
```


## License: unknown
https://github.com/aosp-mirror/kernel_common/blob/fe0f4e33f69f7a62a5eb657c473a8bbfb398e8b0/drivers/gpu/drm/nouveau/dispnv04/dac.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/drm_modeset_helper_vtables
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/drm_modeset_helper_vtables.h
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/drm_modeset_helper_vtables.h
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/drm_modeset_helper_vtables.h
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/drm_modeset_helper_vtables.h
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/drm_modeset_helper_vtables.h
```


## License: unknown
https://github.com/aosp-mirror/kernel_common/blob/fe0f4e33f69f7a62a5eb657c473a8bbfb398e8b0/drivers/gpu/drm/nouveau/dispnv04/dac.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/drm_modeset_helper_vtables.h
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
.
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
.
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software an
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software an
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy,
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy,
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge,
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge,
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute,
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute,
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, an
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, an
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnishe
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnishe
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so,
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so,
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 *
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 *
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be include
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be include
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be include
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED,
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED,
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED,
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NO
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NO
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NO
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NO
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NO
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INF
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INF
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INF
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INF
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INF
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
```


## License: unknown
https://github.com/cdcarter/io/blob/55a002aba53b4567cb873c95551a2883da923ac3/extras/win32vc2005/freeglut-2.2.0/src/freeglut_window.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#
```


## License: GPL-2.0
https://github.com/anaisbetts/yikes/blob/923b5b2a2e269fd102d984fea741029685eb9a71/ext/ffmpeg/libavcodec/nellymoserdec.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#
```


## License: GPL-2.0
https://github.com/steveicarus/iverilog/blob/ef7f0a8f38782dfc0872b1e352ccf32343c10bb8/vpi/lxt2_write.h

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#
```


## License: unknown
https://github.com/neuros/linux-davinci-2.6/blob/c7eef815abb4131b7c39fddf417aece6f7cfa4fa/drivers/char/drm/via_map.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#
```


## License: GPL-2.0
https://github.com/mcr/xorg-xvnc4/blob/0f5bc75264165f90cecb70c9615cdc4b297cd81b/xorg-server/hw/xfree86/modes/xf86EdidModes.c

```
. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#
```


## License: unknown
https://github.com/freedesktop-unofficial-mirror/openchrome__drm-openchrome/blob/d4911867a1f9374d49619d0910b21c28969d0d96/drivers/gpu/drm/via/via_display.c

```
voi
```


## License: unknown
https://github.com/freedesktop-unofficial-mirror/openchrome__drm-openchrome/blob/d4911867a1f9374d49619d0910b21c28969d0d96/drivers/gpu/drm/via/via_display.c

```
void via_connector_
```


## License: unknown
https://github.com/freedesktop-unofficial-mirror/openchrome__drm-openchrome/blob/d4911867a1f9374d49619d0910b21c28969d0d96/drivers/gpu/drm/via/via_display.c

```
void via_connector_destroy
```


## License: unknown
https://github.com/freedesktop-unofficial-mirror/openchrome__drm-openchrome/blob/d4911867a1f9374d49619d0910b21c28969d0d96/drivers/gpu/drm/via/via_display.c

```
void via_connector_destroy(struct drm
```


## License: unknown
https://github.com/freedesktop-unofficial-mirror/openchrome__drm-openchrome/blob/d4911867a1f9374d49619d0910b21c28969d0d96/drivers/gpu/drm/via/via_display.c

```
void via_connector_destroy(struct drm_connector *connector
```


## License: unknown
https://github.com/freedesktop-unofficial-mirror/openchrome__drm-openchrome/blob/d4911867a1f9374d49619d0910b21c28969d0d96/drivers/gpu/drm/via/via_display.c

```
void via_connector_destroy(struct drm_connector *connector)
```


## License: unknown
https://github.com/freedesktop-unofficial-mirror/openchrome__drm-openchrome/blob/d4911867a1f9374d49619d0910b21c28969d0d96/drivers/gpu/drm/via/via_display.c

```
void via_connector_destroy(struct drm_connector *connector)
{
	
```


## License: unknown
https://github.com/freedesktop-unofficial-mirror/openchrome__drm-openchrome/blob/d4911867a1f9374d49619d0910b21c28969d0d96/drivers/gpu/drm/via/via_display.c

```
void via_connector_destroy(struct drm_connector *connector)
{
	struct
```


## License: unknown
https://github.com/freedesktop-unofficial-mirror/openchrome__drm-openchrome/blob/d4911867a1f9374d49619d0910b21c28969d0d96/drivers/gpu/drm/via/via_display.c

```
void via_connector_destroy(struct drm_connector *connector)
{
	struct via_connector *
```


## License: unknown
https://github.com/freedesktop-unofficial-mirror/openchrome__drm-openchrome/blob/d4911867a1f9374d49619d0910b21c28969d0d96/drivers/gpu/drm/via/via_display.c

```
void via_connector_destroy(struct drm_connector *connector)
{
	struct via_connector *con
```


## License: unknown
https://github.com/freedesktop-unofficial-mirror/openchrome__drm-openchrome/blob/d4911867a1f9374d49619d0910b21c28969d0d96/drivers/gpu/drm/via/via_display.c

```
void via_connector_destroy(struct drm_connector *connector)
{
	struct via_connector *con = container
```


## License: unknown
https://github.com/freedesktop-unofficial-mirror/openchrome__drm-openchrome/blob/d4911867a1f9374d49619d0910b21c28969d0d96/drivers/gpu/drm/via/via_display.c

```
void via_connector_destroy(struct drm_connector *connector)
{
	struct via_connector *con = container_of(connector
```


## License: unknown
https://github.com/freedesktop-unofficial-mirror/openchrome__drm-openchrome/blob/d4911867a1f9374d49619d0910b21c28969d0d96/drivers/gpu/drm/via/via_display.c

```
void via_connector_destroy(struct drm_connector *connector)
{
	struct via_connector *con = container_of(connector, struct via_
```


## License: unknown
https://github.com/freedesktop-unofficial-mirror/openchrome__drm-openchrome/blob/d4911867a1f9374d49619d0910b21c28969d0d96/drivers/gpu/drm/via/via_display.c

```
void via_connector_destroy(struct drm_connector *connector)
{
	struct via_connector *con = container_of(connector, struct via_connector, base);
```


## License: unknown
https://github.com/freedesktop-unofficial-mirror/openchrome__drm-openchrome/blob/d4911867a1f9374d49619d0910b21c28969d0d96/drivers/gpu/drm/via/via_display.c

```
void via_connector_destroy(struct drm_connector *connector)
{
	struct via_connector *con = container_of(connector, struct via_connector, base);
	struct
```


## License: unknown
https://github.com/freedesktop-unofficial-mirror/openchrome__drm-openchrome/blob/d4911867a1f9374d49619d0910b21c28969d0d96/drivers/gpu/drm/via/via_display.c

```
void via_connector_destroy(struct drm_connector *connector)
{
	struct via_connector *con = container_of(connector, struct via_connector, base);
	struct dr
```


## License: unknown
https://github.com/freedesktop-unofficial-mirror/openchrome__drm-openchrome/blob/d4911867a1f9374d49619d0910b21c28969d0d96/drivers/gpu/drm/via/via_display.c

```
void via_connector_destroy(struct drm_connector *connector)
{
	struct via_connector *con = container_of(connector, struct via_connector, base);
	struct drm_property
```


## License: unknown
https://github.com/freedesktop-unofficial-mirror/openchrome__drm-openchrome/blob/d4911867a1f9374d49619d0910b21c28969d0d96/drivers/gpu/drm/via/via_display.c

```
void via_connector_destroy(struct drm_connector *connector)
{
	struct via_connector *con = container_of(connector, struct via_connector, base);
	struct drm_property *property
```


## License: unknown
https://github.com/freedesktop-unofficial-mirror/openchrome__drm-openchrome/blob/d4911867a1f9374d49619d0910b21c28969d0d96/drivers/gpu/drm/via/via_display.c

```
void via_connector_destroy(struct drm_connector *connector)
{
	struct via_connector *con = container_of(connector, struct via_connector, base);
	struct drm_property *property,
```


## License: unknown
https://github.com/freedesktop-unofficial-mirror/openchrome__drm-openchrome/blob/d4911867a1f9374d49619d0910b21c28969d0d96/drivers/gpu/drm/via/via_display.c

```
void via_connector_destroy(struct drm_connector *connector)
{
	struct via_connector *con = container_of(connector, struct via_connector, base);
	struct drm_property *property, *tmp
```


## License: unknown
https://github.com/freedesktop-unofficial-mirror/openchrome__drm-openchrome/blob/d4911867a1f9374d49619d0910b21c28969d0d96/drivers/gpu/drm/via/via_display.c

```
void via_connector_destroy(struct drm_connector *connector)
{
	struct via_connector *con = container_of(connector, struct via_connector, base);
	struct drm_property *property, *tmp;

	list
```


## License: unknown
https://github.com/freedesktop-unofficial-mirror/openchrome__drm-openchrome/blob/d4911867a1f9374d49619d0910b21c28969d0d96/drivers/gpu/drm/via/via_display.c

```
void via_connector_destroy(struct drm_connector *connector)
{
	struct via_connector *con = container_of(connector, struct via_connector, base);
	struct drm_property *property, *tmp;

	list_for_each
```


## License: unknown
https://github.com/freedesktop-unofficial-mirror/openchrome__drm-openchrome/blob/d4911867a1f9374d49619d0910b21c28969d0d96/drivers/gpu/drm/via/via_display.c

```
void via_connector_destroy(struct drm_connector *connector)
{
	struct via_connector *con = container_of(connector, struct via_connector, base);
	struct drm_property *property, *tmp;

	list_for_each_entry_safe
```


## License: unknown
https://github.com/freedesktop-unofficial-mirror/openchrome__drm-openchrome/blob/d4911867a1f9374d49619d0910b21c28969d0d96/drivers/gpu/drm/via/via_display.c

```
void via_connector_destroy(struct drm_connector *connector)
{
	struct via_connector *con = container_of(connector, struct via_connector, base);
	struct drm_property *property, *tmp;

	list_for_each_entry_safe(property, tmp
```


## License: unknown
https://github.com/freedesktop-unofficial-mirror/openchrome__drm-openchrome/blob/d4911867a1f9374d49619d0910b21c28969d0d96/drivers/gpu/drm/via/via_display.c

```
void via_connector_destroy(struct drm_connector *connector)
{
	struct via_connector *con = container_of(connector, struct via_connector, base);
	struct drm_property *property, *tmp;

	list_for_each_entry_safe(property, tmp, &con->
```


## License: unknown
https://github.com/freedesktop-unofficial-mirror/openchrome__drm-openchrome/blob/d4911867a1f9374d49619d0910b21c28969d0d96/drivers/gpu/drm/via/via_display.c

```
void via_connector_destroy(struct drm_connector *connector)
{
	struct via_connector *con = container_of(connector, struct via_connector, base);
	struct drm_property *property, *tmp;

	list_for_each_entry_safe(property, tmp, &con->props
```


## License: unknown
https://github.com/freedesktop-unofficial-mirror/openchrome__drm-openchrome/blob/d4911867a1f9374d49619d0910b21c28969d0d96/drivers/gpu/drm/via/via_display.c

```
void via_connector_destroy(struct drm_connector *connector)
{
	struct via_connector *con = container_of(connector, struct via_connector, base);
	struct drm_property *property, *tmp;

	list_for_each_entry_safe(property, tmp, &con->props, hea
```


## License: unknown
https://github.com/freedesktop-unofficial-mirror/openchrome__drm-openchrome/blob/d4911867a1f9374d49619d0910b21c28969d0d96/drivers/gpu/drm/via/via_display.c

```
void via_connector_destroy(struct drm_connector *connector)
{
	struct via_connector *con = container_of(connector, struct via_connector, base);
	struct drm_property *property, *tmp;

	list_for_each_entry_safe(property, tmp, &con->props, head)
```


## License: unknown
https://github.com/freedesktop-unofficial-mirror/openchrome__drm-openchrome/blob/d4911867a1f9374d49619d0910b21c28969d0d96/drivers/gpu/drm/via/via_display.c

```
void via_connector_destroy(struct drm_connector *connector)
{
	struct via_connector *con = container_of(connector, struct via_connector, base);
	struct drm_property *property, *tmp;

	list_for_each_entry_safe(property, tmp, &con->props, head)
		dr
```


## License: unknown
https://github.com/freedesktop-unofficial-mirror/openchrome__drm-openchrome/blob/d4911867a1f9374d49619d0910b21c28969d0d96/drivers/gpu/drm/via/via_display.c

```
void via_connector_destroy(struct drm_connector *connector)
{
	struct via_connector *con = container_of(connector, struct via_connector, base);
	struct drm_property *property, *tmp;

	list_for_each_entry_safe(property, tmp, &con->props, head)
		drm_property_
```


## License: unknown
https://github.com/freedesktop-unofficial-mirror/openchrome__drm-openchrome/blob/d4911867a1f9374d49619d0910b21c28969d0d96/drivers/gpu/drm/via/via_display.c

```
void via_connector_destroy(struct drm_connector *connector)
{
	struct via_connector *con = container_of(connector, struct via_connector, base);
	struct drm_property *property, *tmp;

	list_for_each_entry_safe(property, tmp, &con->props, head)
		drm_property_destroy
```


## License: unknown
https://github.com/freedesktop-unofficial-mirror/openchrome__drm-openchrome/blob/d4911867a1f9374d49619d0910b21c28969d0d96/drivers/gpu/drm/via/via_display.c

```
void via_connector_destroy(struct drm_connector *connector)
{
	struct via_connector *con = container_of(connector, struct via_connector, base);
	struct drm_property *property, *tmp;

	list_for_each_entry_safe(property, tmp, &con->props, head)
		drm_property_destroy(connector
```


## License: unknown
https://github.com/freedesktop-unofficial-mirror/openchrome__drm-openchrome/blob/d4911867a1f9374d49619d0910b21c28969d0d96/drivers/gpu/drm/via/via_display.c

```
void via_connector_destroy(struct drm_connector *connector)
{
	struct via_connector *con = container_of(connector, struct via_connector, base);
	struct drm_property *property, *tmp;

	list_for_each_entry_safe(property, tmp, &con->props, head)
		drm_property_destroy(connector->
```


## License: unknown
https://github.com/freedesktop-unofficial-mirror/openchrome__drm-openchrome/blob/d4911867a1f9374d49619d0910b21c28969d0d96/drivers/gpu/drm/via/via_display.c

```
void via_connector_destroy(struct drm_connector *connector)
{
	struct via_connector *con = container_of(connector, struct via_connector, base);
	struct drm_property *property, *tmp;

	list_for_each_entry_safe(property, tmp, &con->props, head)
		drm_property_destroy(connector->dev, property);
```


## License: unknown
https://github.com/freedesktop-unofficial-mirror/openchrome__drm-openchrome/blob/d4911867a1f9374d49619d0910b21c28969d0d96/drivers/gpu/drm/via/via_display.c

```
void via_connector_destroy(struct drm_connector *connector)
{
	struct via_connector *con = container_of(connector, struct via_connector, base);
	struct drm_property *property, *tmp;

	list_for_each_entry_safe(property, tmp, &con->props, head)
		drm_property_destroy(connector->dev, property);
	
```


## License: unknown
https://github.com/freedesktop-unofficial-mirror/openchrome__drm-openchrome/blob/d4911867a1f9374d49619d0910b21c28969d0d96/drivers/gpu/drm/via/via_display.c

```
void via_connector_destroy(struct drm_connector *connector)
{
	struct via_connector *con = container_of(connector, struct via_connector, base);
	struct drm_property *property, *tmp;

	list_for_each_entry_safe(property, tmp, &con->props, head)
		drm_property_destroy(connector->dev, property);
	list_del(&
```


## License: unknown
https://github.com/freedesktop-unofficial-mirror/openchrome__drm-openchrome/blob/d4911867a1f9374d49619d0910b21c28969d0d96/drivers/gpu/drm/via/via_display.c

```
void via_connector_destroy(struct drm_connector *connector)
{
	struct via_connector *con = container_of(connector, struct via_connector, base);
	struct drm_property *property, *tmp;

	list_for_each_entry_safe(property, tmp, &con->props, head)
		drm_property_destroy(connector->dev, property);
	list_del(&con->
```


[File Ends] drivers/gpu/drm/via/# Code Citations.md

[File Begins] drivers/gpu/drm/via/6.12_PORTING_TODO.md
# OpenChrome Kernel 6.12+ Porting TODO

## Critical Items

- [x] Fix NULL pointer dereference in initialization (via_quirks_init)
- [x] Update TTM memory management to use modern APIs
- [x] Add proper device fields to via_drm_priv structure
- [x] Fix connector initialization and detection
- [x] Update power management register handling
- [ ] Test on multiple hardware configurations

## Memory Management

- [x] Update TTM device initialization
- [x] Implement proper resource management for VRAM/system memory
- [ ] Add support for GTT (Translation Table) if needed
- [ ] Test memory management under high load

## Display Output

- [x] Fix DAC (VGA) output functionality
- [x] Update DVI/TMDS detection logic
- [ ] Ensure HDMI output works correctly on supported chipsets
- [ ] Test LVDS output functionality on laptop configurations
- [ ] Verify multi-monitor configuration works

## Power Management

- [x] Add missing register save/restore fields
- [ ] Test suspend/resume functionality
- [ ] Implement proper clock gating where supported
- [ ] Add runtime PM support

## Performance & Testing

- [ ] Benchmark performance against previous driver versions
- [ ] Test acceleration functionality
- [ ] Create comprehensive test suite for different hardware configurations
- [ ] Document hardware-specific quirks and workarounds

## Documentation

- [ ] Update man pages
- [ ] Create hardware compatibility list
- [ ] Document known issues and limitations
- [ ] Create troubleshooting guide

## Cleanup

- [x] Remove unused legacy code
- [x] Fix compiler warnings
- [ ] Improve naming consistency
- [ ] Add better debug logging
- [ ] Restructure code for maintainability

## Future Enhancements

- [ ] Implement modern cursor handling
- [ ] Add proper atomic modeset support
- [ ] Enable KMS pageflipping
- [ ] Improve suspend/resume stability

[File Ends] drivers/gpu/drm/via/6.12_PORTING_TODO.md

[File Begins] drivers/gpu/drm/via/Kconfig
config DRM_VIA
	tristate "OpenChrome (VIA Technologies Chrome)"
	depends on DRM && PCI && X86
	select DRM_KMS_HELPER # Ensure KMS helper is selected
	select DRM_GEM_SHMEM_HELPER
	select DRM_TTM
	help
	  Choose this option if you have VIA Technologies UniChrome or
	  Chrome9 integrated graphics. If M is selected the module will
	  be called via.

[File Ends] drivers/gpu/drm/via/Kconfig

[File Begins] drivers/gpu/drm/via/Makefile
#
# Makefile for the drm device driver.  This driver provides support for the
# Direct Rendering Infrastructure (DRI) in XFree86 4.1.0 and higher.

# Ensure proper dependencies for external module build

ifneq ($(KERNELRELEASE),)
# We're in kernel build system
include Kbuild

else
# We're being built as an external module
KDIR ?= /lib/modules/$(shell uname -r)/build
MDIR ?= /lib/modules/$(shell uname -r)/kernel/drivers/gpu/drm

all:
	$(MAKE) -C $(KDIR) M=$(PWD) modules

clean:
	$(MAKE) -C $(KDIR) M=$(PWD) clean

install:
	$(MAKE) -C $(KDIR) M=$(PWD) modules_install
	depmod -a

# Copy required symbol files from kernel directory
symvers:
	cp $(KDIR)/Module.symvers $(PWD)/
	if [ -f $(MDIR)/drm.symvers ]; then \
		cp $(MDIR)/drm.symvers $(PWD)/; \
	fi
	if [ -f $(MDIR)/ttm/ttm.symvers ]; then \
		cp $(MDIR)/ttm/ttm.symvers $(PWD)/; \
	fi

.PHONY: all clean install symvers
endif

ccflags-y := -Iinclude/drm
ccflags-y += -I$(src)
ccflags-y += -include $(src)/drmP_compat.h

# Define module object dependencies correctly
# Only list files that actually exist in the source tree
via-y := \
	via_drv.o \
	via_pcie.o \
	via_mm.o \
	via_init.o \
	via_regset.o \
	via_irq.o \
	via_verifier.o \
	via_dmablit.o \
	via_pll.o \
	via_vgahw.o \
	via_pm.o \
	via_encoder.o \
	via_crtc.o \
	via_crtc_hw.o \
	via_cursor.o \
	via_tmds.o \
	via_hdmi.o \
	via_lvds.o \
	via_dac.o \
	via_vt1632.o \
	via_sii164.o \
	via_tx.o \
	via_ioctl.o \
	via_connector.o \
	via_connector_i2c.o \
	via_i2c.o \
	via_ttm.o \
	via_ttm_stubs.o \
	via_object.o \
	via_modeset.o

# Add TTM and DRM dependencies explicitly
KBUILD_EXTRA_SYMBOLS := $(shell find /lib/modules/$(shell uname -r)/kernel/drivers/gpu/drm -name Module.symvers -print)

obj-m += via.o

# Export dependencies to modpost
ifneq ($(CONFIG_DRM),)
  ccflags-y += -DHAVE_DRM_CONFIG_H
endif

[File Ends] drivers/gpu/drm/via/Makefile

[File Begins] drivers/gpu/drm/via/NOTES.md
# OpenChrome Driver Notes

## Kernel 6.12+ Porting Notes

### Key Architecture Changes

The OpenChrome driver has undergone significant changes to support kernel 6.12+:

1. **TTM Memory Management**:
   - Updated to use modern TTM APIs with `ttm_device` structure
   - Removed legacy TTM initialization methods
   - Properly implemented TTM resource management with range managers

2. **DRM Subsystem Integration**:
   - Migrated to atomic modesetting helpers
   - Updated connector/encoder interfaces
   - Implemented modern DRM GEM/TTM helpers

3. **Hardware Initialization**:
   - Improved initialization sequence with proper timeouts
   - Added safety checks to prevent NULL pointer dereferences
   - Better error handling during device initialization

### Known Issues

- Some hardware configurations may still experience instability
- Power management functionality requires further testing
- Some video outputs may not be properly detected depending on hardware

### Development Tips

- Use `drm.debug=0x1f` and `dyndbg=+pflmt` kernel parameters for debugging
- Monitor dmesg for TTM initialization errors as these are common failure points
- When adding new hardware support, always implement proper connector detection

## Performance Considerations

The VIA/OpenChrome hardware has limitations that affect performance:

- Maximum resolution and refresh rates are limited by the hardware's capabilities
- Older chipsets (CLE266, KM400) have very limited 3D acceleration
- Memory bandwidth is significantly constrained compared to competitors

## Future Directions

- Better suspend/resume support
- Complete DRI3 integration
- Improved multi-head support
- Better handling of hotplugging

# OpenChrome VIA DRM Driver Notes

## Overview
This document describes the architecture of the OpenChrome DRM driver and the changes needed for compatibility with Linux 6.12.

## Current Status
The driver compiles but needs several fixes to function correctly. We've addressed compilation issues including missing helper functions, type mismatches, and header inclusion order.

## Fixed Issues

### Symbol Visibility Issues
Multiple function definitions and declarations were fixed to ensure proper symbol visibility:

1. Functions used in multiple files now have correct `extern` declarations in headers
2. Functions used only in one file are properly marked `static`
3. Removed duplicate function definitions that caused "multiple definition" errors

### Function Signature Mismatches
Fixed several function signatures to ensure they match across declaration and implementation:

1. Fixed `via_drm_init` to include the correct `flags` parameter
2. Updated various BO-related functions to match their usage
3. Fixed encoder and connector function signatures

### Structure and Define Issues
Added missing structure definitions and correct field sizes:

1. Added proper defines for register set sizes
2. Fixed register handling functions

## Remaining Issues

- The driver needs more testing with actual hardware
- Some display types may not be fully supported yet
- Need to verify full compatibility with 6.12 kernel interfaces

## To Do
See the 6.12_PORTING_TODO.md file for the current task list.

## Contributing
When making changes, please follow the code style of the existing codebase and ensure all functions are properly documented.

## References
- UniChrome Pro II Graphics Processor Programming Manual (OGPM_UniChrome_ProII_R108a_Part1_Core_2D.txt)
- Linux DRM subsystem documentation

## Header Organization

- `via_drv.h`: Main header file with core data structures, function prototypes, and macros.
  MUST be included first in all OpenChrome source files.
- `via_crtc_hw.h`: Definitions and declarations related to CRTC hardware registers and operations.
- `via_disp_reg.h`:  Defines for register offsets.
- Other headers include their specific functionality (connectors, encoders, PLL, etc.)

## Key Decisions and Implementation Notes

### Header Inclusion Order

The correct include order is *critical* to avoid compilation errors due to missing or conflicting definitions. The required order is:

1. **`via_drv.h`:**  This MUST be the very first include in every `.c` file.
2. **`via_crtc_hw.h`:**  Includes register definitions and low-level hardware manipulation functions.
3. **`via_disp_reg.h`:** Defines for register offsets.
4. **Other headers:**  Standard Linux headers, DRM headers, etc.

### Structure Definitions

- All core data structures (`via_crtc`, `via_connector`, `via_encoder`, `via_bo`, etc.) are defined in `via_drv.h`.
- `vga_regset` and `vga_registers`, are defined in `via_crtc_hw.h`

### Register Access

- The driver uses a combination of direct MMIO access (for non-VGA registers) and VGA I/O port access (for VGA registers).
- **MMIO Access:**
  - `VIA_READ(reg)`: Reads a 32-bit value from the specified MMIO register offset.
  - `VIA_WRITE(reg, val)`: Writes a 32-bit value to the specified MMIO register offset.
  - `VIA_WRITE_MASK(reg, val, mask)`: Performs a read-modify-write to update specific bits within an MMIO register.
- **VGA I/O Port Access:**
  - Uses standard functions, defined in `via_vgahw.c` which use inline functions from `<video/vga.h>`:
    - `vga_rcrt(base, index)`: Reads from a CRTC register.
    - `vga_wcrt(base, index, value)`: Writes to a CRTC register.
    - `vga_rseq(base, index)`: Reads from a Sequencer register.
    - `vga_wseq(base, index, value)`: Writes to a Sequencer register.
    - `svga_wcrt_mask(base, index, value, mask)`:  Masked write to a CRTC register.
    - `svga_wseq_mask(base, index, value, mask)`: Masked write to a Sequencer register.
-  `base` for memory mapped registers is `dev_priv->mmio`.

### TTM Buffer Management

- The driver uses the TTM (Translation Table Manager) framework for managing graphics memory.
- Buffer objects are represented by `struct via_bo`, which wraps a `ttm_buffer_object`.
- The `via_ttm_domain_to_placement` function sets up the memory placement policies for buffer objects.
- The `via_bo_pin` and `via_bo_unpin` functions handle pinning and unpinning buffers in VRAM.
- To convert from ttm_buffer_object to via_bo, use the to_via_bo helper function.

### Connector Detection

- The `via_dac_detect`, `via_tmds_detect`, and `via_lvds_detect` functions are stubs.  They currently always return `connector_status_connected`.
- These functions *must* be implemented to correctly detect connected displays, likely using I2C communication.

### I2C Communication

- The `via_i2c.c` file provides basic I2C bit-banging functions. These are currently stubs.
- The `via_find_ddc_bus` function is a stub and needs to be implemented to map I2C bus numbers to actual `i2c_adapter` structures.
- The I2C functions will be used for:
    - Detecting connected displays (via EDID).
    - Controlling external transmitter chips (e.g., SiI 164, VT1632).

### Mode Setting

- The `via_crtc.c` file handles CRTC (display controller) configuration.
- `via_load_crtc_timing` loads timing parameters into CRTC registers.
- `via_iga1_display_fifo_regs` and `via_iga2_display_fifo_regs` configure the display FIFO.
- `via_set_iga_scale_function` and `via_load_iga_scale_factor_regs` handle scaling (when the source and destination resolutions don't match).
- `via_mode_set_nofb` is the main function that sets up the CRTC for a given display mode.

### Encoder/Transmitter Control

- Separate files (`via_dac.c`, `via_tmds.c`, `via_lvds.c`, `via_hdmi.c`, `via_sii164.c`, `via_vt1632.c`) handle the specifics of each display output type.
- These files provide functions for:
    - DPMS control (powering on/off the output).
    - Mode setting (configuring the transmitter for the specific display mode).
    - Detecting connected displays.

### Cursor Handling

- `via_cursor.c` handles the hardware cursor.

### Remaining Tasks (High Priority)

1. **Implement I2C Functions:** Implement `via_i2c_readbytes`, `via_i2c_writebytes`, and `via_find_ddc_bus` in `via_i2c.c`. This is *essential* for detecting displays and configuring external transmitters.

2. **Implement Connector Detection:** Implement the `via_dac_detect`, `via_tmds_detect`, and `via_lvds_detect` functions in `via_connector.c`. These should use the I2C functions to read EDID data and/or check GPIO pins.

3. **Populate Register Tables:** The `iga1_...` and `iga2_...` register arrays in `via_crtc.c` and `via_regset.c` are currently empty.  These *must* be populated with the correct register settings for each supported chipset and display mode. This is the most complex and hardware-specific part of the port.  You *must* refer to the VIA hardware documentation.

4. **Implement Mode Setting:** Complete the `via_mode_set_nofb` function in `via_crtc.c`. This involves:
   * Setting up the CRTC timings (horizontal/vertical sync, blanking, etc.).  You'll use the `vga_wcrt` and `vga_wseq` functions extensively here, along with the data from the `vga_regset` structures.
   * Configuring the PLL (Phase-Locked Loop) to generate the correct pixel clock.  You have a `via_get_clk_value` function, but it needs to be integrated into the mode setting process.
   * Setting up the display FIFO.
   * Enabling/disabling scaling as needed.
   * Setting the color depth and pixel format.

5. **Complete Encoder Functions:** Implement the remaining functions in `via_tmds.c`, `via_lvds.c`, and `via_hdmi.c` to control the various transmitters.

### Debugging Tips

* **Use `drm_dbg_kms`:** This macro is your friend.  Use it extensively to print debugging information at various points in your code.  You can enable/disable different debug categories using the `drm.debug` kernel parameter.
* **Kernel Debugger:** If possible, use a kernel debugger (like kgdb) to step through the code and inspect register values. This is invaluable for understanding the hardware's behavior.
* **Register Dumps:** Add code to dump the values of relevant VGA registers before and after your changes.  This will help you verify that your register writes are having the intended effect.
* **Start Simple:**  Focus on getting a basic display mode working first (e.g., 640x480).  Once you have that working, you can add support for more complex modes and features.
* **Incremental Changes:**  Make small, incremental changes and test frequently.  This makes it much easier to isolate the cause of any problems.
* **Reference Information:** Make extensive use of the UniChrome Pro II Graphics Processor Programming Manual to understand register values and bit meanings.

This `NOTES.md` file should be updated as you make progress, to keep track of your decisions and any remaining issues. Good luck!
[File Ends] drivers/gpu/drm/via/NOTES.md

[File Begins] drivers/gpu/drm/via/drmP_compat.h
/*
 * Copyright 2023 The OpenChrome Project
 * [drmP_compat.h]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

/*
 * Compatibility header for building with kernel 6.12+
 * This provides compatibility definitions for symbols that
 * might have changed between kernel versions.
 */

#ifndef __DRMP_COMPAT_H__
#define __DRMP_COMPAT_H__

#include <linux/version.h>
#include <linux/moduleparam.h>
#include <linux/module.h>
#include <asm/io.h>

/*
 * Handle MTRR compatibility between kernels
 * The signatures changed between kernel versions:
 * - arch_phys_wc_add returns an int in newer kernels
 * - Methods for releasing WC memory differ between kernel versions
 */
#ifndef VIA_COMPAT_ARCH_IO_FREE_WC_DEFINED
#define VIA_COMPAT_ARCH_IO_FREE_WC_DEFINED

/* Helper for add/remove writecombining for MTRR regions */
static inline int via_add_wc_mtrr(resource_size_t base, resource_size_t size)
{
    return arch_phys_wc_add(base, size);
}

static inline void via_free_wc_mtrr(int mtrr)
{
    if (mtrr > 0)
        arch_phys_wc_del(mtrr);
}

#endif /* VIA_COMPAT_ARCH_IO_FREE_WC_DEFINED */

/* Handle symbol exports for out-of-tree module */
#define drm_compat_export_symbol_gpl(sym) \
    EXPORT_SYMBOL_GPL(sym)

#endif /* __DRMP_COMPAT_H__ */

[File Ends] drivers/gpu/drm/via/drmP_compat.h

[File Begins] drivers/gpu/drm/via/via.mod.c
#include <linux/module.h>
#include <linux/export-internal.h>
#include <linux/compiler.h>

MODULE_INFO(name, KBUILD_MODNAME);

__visible struct module __this_module
__section(".gnu.linkonce.this_module") = {
	.name = KBUILD_MODNAME,
	.init = init_module,
#ifdef CONFIG_MODULE_UNLOAD
	.exit = cleanup_module,
#endif
	.arch = MODULE_ARCH_INIT,
};

MODULE_INFO(intree, "Y");

KSYMTAB_FUNC(load_value_to_registers, "_gpl", "");
KSYMTAB_FUNC(load_register_tables, "_gpl", "");
KSYMTAB_DATA(vpit_table, "_gpl", "");
KSYMTAB_DATA(lcd_hor_scaling, "_gpl", "");
KSYMTAB_DATA(lcd_ver_scaling, "_gpl", "");
KSYMTAB_DATA(iga1_hor_total, "_gpl", "");
KSYMTAB_DATA(iga1_hor_addr, "_gpl", "");
KSYMTAB_DATA(iga1_hor_blank_start, "_gpl", "");
KSYMTAB_DATA(iga1_hor_blank_end, "_gpl", "");
KSYMTAB_DATA(iga1_hor_sync_start, "_gpl", "");
KSYMTAB_DATA(iga1_hor_sync_end, "_gpl", "");
KSYMTAB_DATA(iga1_ver_total, "_gpl", "");
KSYMTAB_DATA(iga1_ver_addr, "_gpl", "");
KSYMTAB_DATA(iga1_ver_blank_start, "_gpl", "");
KSYMTAB_DATA(iga1_ver_blank_end, "_gpl", "");
KSYMTAB_DATA(iga1_ver_sync_start, "_gpl", "");
KSYMTAB_DATA(iga1_ver_sync_end, "_gpl", "");
KSYMTAB_DATA(iga1_fetch_count, "_gpl", "");
KSYMTAB_DATA(iga1_offset, "_gpl", "");
KSYMTAB_DATA(iga2_hor_total, "_gpl", "");
KSYMTAB_DATA(iga2_hor_addr, "_gpl", "");
KSYMTAB_DATA(iga2_hor_blank_start, "_gpl", "");
KSYMTAB_DATA(iga2_hor_blank_end, "_gpl", "");
KSYMTAB_DATA(iga2_hor_sync_start, "_gpl", "");
KSYMTAB_DATA(iga2_hor_sync_end, "_gpl", "");
KSYMTAB_DATA(iga2_ver_total, "_gpl", "");
KSYMTAB_DATA(iga2_ver_addr, "_gpl", "");
KSYMTAB_DATA(iga2_ver_blank_start, "_gpl", "");
KSYMTAB_DATA(iga2_ver_blank_end, "_gpl", "");
KSYMTAB_DATA(iga2_ver_sync_start, "_gpl", "");
KSYMTAB_DATA(iga2_ver_sync_end, "_gpl", "");
KSYMTAB_DATA(iga2_fetch_count, "_gpl", "");
KSYMTAB_DATA(iga2_offset, "_gpl", "");
KSYMTAB_FUNC(via_load_regset, "_gpl", "");
KSYMTAB_DATA(iga1_cle266_fifo_depth_select, "_gpl", "");
KSYMTAB_DATA(iga1_k8m800_fifo_depth_select, "_gpl", "");
KSYMTAB_DATA(iga2_cle266_fifo_depth_select, "_gpl", "");
KSYMTAB_DATA(iga2_k8m800_fifo_depth_select, "_gpl", "");
KSYMTAB_DATA(iga1_cle266_fifo_threshold_select, "_gpl", "");
KSYMTAB_DATA(iga1_k8m800_fifo_threshold_select, "_gpl", "");
KSYMTAB_DATA(iga2_cle266_fifo_threshold_select, "_gpl", "");
KSYMTAB_DATA(iga2_k8m800_fifo_threshold_select, "_gpl", "");
KSYMTAB_DATA(iga1_cle266_fifo_high_threshold_select, "_gpl", "");
KSYMTAB_DATA(iga1_k8m800_fifo_high_threshold_select, "_gpl", "");
KSYMTAB_DATA(iga2_fifo_high_threshold_select, "_gpl", "");
KSYMTAB_DATA(iga1_cle266_display_queue_expire_num, "_gpl", "");
KSYMTAB_DATA(iga1_k8m800_display_queue_expire_num, "_gpl", "");
KSYMTAB_DATA(iga2_display_queue_expire_num, "_gpl", "");
KSYMTAB_FUNC(via_iga2_set_interlace_mode, "_gpl", "");
KSYMTAB_FUNC(via_iga2_set_palette_lut_resolution, "_gpl", "");
KSYMTAB_FUNC(via_iga1_set_interlace_mode, "_gpl", "");
KSYMTAB_FUNC(via_iga1_set_hsync_shift, "_gpl", "");
KSYMTAB_FUNC(via_iga1_set_palette_lut_resolution, "_gpl", "");
KSYMTAB_DATA(via_crtc_encoder_funcs, "_gpl", "");
KSYMTAB_DATA(via_crtc_helper_funcs, "_gpl", "");
KSYMTAB_FUNC(via_driver_dumb_map_offset, "_gpl", "");
KSYMTAB_FUNC(via_crtc1_init, "_gpl", "");
KSYMTAB_FUNC(via_crtc2_init, "_gpl", "");
KSYMTAB_DATA(via_i2c_adapters, "_gpl", "");
KSYMTAB_DATA(via_i2c_par, "_gpl", "");
KSYMTAB_FUNC(drm_gem_ttm_mmap, "_gpl", "");
KSYMTAB_FUNC(drm_gem_ttm_vmap, "_gpl", "");
KSYMTAB_FUNC(drm_gem_ttm_vunmap, "_gpl", "");

MODULE_INFO(depends, "ttm,i2c-algo-bit");

MODULE_ALIAS("pci:v00001106d00003122sv*sd*bc*sc*i*");
MODULE_ALIAS("pci:v00001106d00007205sv*sd*bc*sc*i*");
MODULE_ALIAS("pci:v00001106d00003108sv*sd*bc*sc*i*");
MODULE_ALIAS("pci:v00001106d00003344sv*sd*bc*sc*i*");
MODULE_ALIAS("pci:v00001106d00003118sv*sd*bc*sc*i*");
MODULE_ALIAS("pci:v00001106d00003343sv*sd*bc*sc*i*");
MODULE_ALIAS("pci:v00001106d00003230sv*sd*bc*sc*i*");
MODULE_ALIAS("pci:v00001106d00003371sv*sd*bc*sc*i*");
MODULE_ALIAS("pci:v00001106d00003157sv*sd*bc*sc*i*");
MODULE_ALIAS("pci:v00001106d00001122sv*sd*bc*sc*i*");
MODULE_ALIAS("pci:v00001106d00005122sv*sd*bc*sc*i*");
MODULE_ALIAS("pci:v00001106d00007122sv*sd*bc*sc*i*");

MODULE_INFO(srcversion, "033B8981986880E576F9B72");

[File Ends] drivers/gpu/drm/via/via.mod.c

[File Begins] drivers/gpu/drm/via/via_3d_reg.h
/* SPDX-License-Identifier: MIT */
/*
 * Copyright 1998-2011 VIA Technologies, Inc. All Rights Reserved.
 * Copyright 2001-2011 S3 Graphics, Inc. All Rights Reserved.
 */

#ifndef VIA_3D_REG_H
#define VIA_3D_REG_H
#define HC_REG_BASE             0x0400

#define HC_REG_TRANS_SPACE      0x0040

#define HC_ParaN_MASK           0xffffffff
#define HC_Para_MASK            0x00ffffff
#define HC_SubA_MASK            0xff000000
#define HC_SubA_SHIFT           24
/* Transmission Setting
 */
#define HC_REG_TRANS_SET        0x003c
#define HC_ParaSubType_MASK     0xff000000
#define HC_ParaType_MASK        0x00ff0000
#define HC_ParaOS_MASK          0x0000ff00
#define HC_ParaAdr_MASK         0x000000ff
#define HC_ParaSubType_SHIFT    24
#define HC_ParaType_SHIFT       16
#define HC_ParaOS_SHIFT         8
#define HC_ParaAdr_SHIFT        0

#define HC_ParaType_CmdVdata    0x0000
#define HC_ParaType_NotTex      0x0001
#define HC_ParaType_Tex         0x0002
#define HC_ParaType_Palette     0x0003
#define HC_ParaType_PreCR       0x0010
#define HC_ParaType_Auto        0x00fe
#define INV_ParaType_Dummy          0x00300000

/* Transmission Space
 */
#define HC_REG_Hpara0           0x0040
#define HC_REG_HpataAF          0x02fc

/* Read
 */
#define HC_REG_HREngSt          0x0000
#define HC_REG_HRFIFOempty      0x0004
#define HC_REG_HRFIFOfull       0x0008
#define HC_REG_HRErr            0x000c
#define HC_REG_FIFOstatus       0x0010
/* HC_REG_HREngSt          0x0000
 */
#define HC_HDASZC_MASK          0x00010000
#define HC_HSGEMI_MASK          0x0000f000
#define HC_HLGEMISt_MASK        0x00000f00
#define HC_HCRSt_MASK           0x00000080
#define HC_HSE0St_MASK          0x00000040
#define HC_HSE1St_MASK          0x00000020
#define HC_HPESt_MASK           0x00000010
#define HC_HXESt_MASK           0x00000008
#define HC_HBESt_MASK           0x00000004
#define HC_HE2St_MASK           0x00000002
#define HC_HE3St_MASK           0x00000001
/* HC_REG_HRFIFOempty      0x0004
 */
#define HC_HRZDempty_MASK       0x00000010
#define HC_HRTXAempty_MASK      0x00000008
#define HC_HRTXDempty_MASK      0x00000004
#define HC_HWZDempty_MASK       0x00000002
#define HC_HWCDempty_MASK       0x00000001
/* HC_REG_HRFIFOfull       0x0008
 */
#define HC_HRZDfull_MASK        0x00000010
#define HC_HRTXAfull_MASK       0x00000008
#define HC_HRTXDfull_MASK       0x00000004
#define HC_HWZDfull_MASK        0x00000002
#define HC_HWCDfull_MASK        0x00000001
/* HC_REG_HRErr            0x000c
 */
#define HC_HAGPCMErr_MASK       0x80000000
#define HC_HAGPCMErrC_MASK      0x70000000
/* HC_REG_FIFOstatus       0x0010
 */
#define HC_HRFIFOATall_MASK     0x80000000
#define HC_HRFIFOATbusy_MASK    0x40000000
#define HC_HRATFGMDo_MASK       0x00000100
#define HC_HRATFGMDi_MASK       0x00000080
#define HC_HRATFRZD_MASK        0x00000040
#define HC_HRATFRTXA_MASK       0x00000020
#define HC_HRATFRTXD_MASK       0x00000010
#define HC_HRATFWZD_MASK        0x00000008
#define HC_HRATFWCD_MASK        0x00000004
#define HC_HRATTXTAG_MASK       0x00000002
#define HC_HRATTXCH_MASK        0x00000001

/* AGP Command Setting
 */
#define HC_SubA_HAGPBstL        0x0060
#define HC_SubA_HAGPBendL       0x0061
#define HC_SubA_HAGPCMNT        0x0062
#define HC_SubA_HAGPBpL         0x0063
#define HC_SubA_HAGPBpH         0x0064
/* HC_SubA_HAGPCMNT        0x0062
 */
#define HC_HAGPCMNT_MASK        0x00800000
#define HC_HCmdErrClr_MASK      0x00400000
#define HC_HAGPBendH_MASK       0x0000ff00
#define HC_HAGPBstH_MASK        0x000000ff
#define HC_HAGPBendH_SHIFT      8
#define HC_HAGPBstH_SHIFT       0
/* HC_SubA_HAGPBpL         0x0063
 */
#define HC_HAGPBpL_MASK         0x00fffffc
#define HC_HAGPBpID_MASK        0x00000003
#define HC_HAGPBpID_PAUSE       0x00000000
#define HC_HAGPBpID_JUMP        0x00000001
#define HC_HAGPBpID_STOP        0x00000002
/* HC_SubA_HAGPBpH         0x0064
 */
#define HC_HAGPBpH_MASK         0x00ffffff

/* Miscellaneous Settings
 */
#define HC_SubA_HClipTB         0x0070
#define HC_SubA_HClipLR         0x0071
#define HC_SubA_HFPClipTL       0x0072
#define HC_SubA_HFPClipBL       0x0073
#define HC_SubA_HFPClipLL       0x0074
#define HC_SubA_HFPClipRL       0x0075
#define HC_SubA_HFPClipTBH      0x0076
#define HC_SubA_HFPClipLRH      0x0077
#define HC_SubA_HLP             0x0078
#define HC_SubA_HLPRF           0x0079
#define HC_SubA_HSolidCL        0x007a
#define HC_SubA_HPixGC          0x007b
#define HC_SubA_HSPXYOS         0x007c
#define HC_SubA_HVertexCNT      0x007d

#define HC_HClipT_MASK          0x00fff000
#define HC_HClipT_SHIFT         12
#define HC_HClipB_MASK          0x00000fff
#define HC_HClipB_SHIFT         0
#define HC_HClipL_MASK          0x00fff000
#define HC_HClipL_SHIFT         12
#define HC_HClipR_MASK          0x00000fff
#define HC_HClipR_SHIFT         0
#define HC_HFPClipBH_MASK       0x0000ff00
#define HC_HFPClipBH_SHIFT      8
#define HC_HFPClipTH_MASK       0x000000ff
#define HC_HFPClipTH_SHIFT      0
#define HC_HFPClipRH_MASK       0x0000ff00
#define HC_HFPClipRH_SHIFT      8
#define HC_HFPClipLH_MASK       0x000000ff
#define HC_HFPClipLH_SHIFT      0
#define HC_HSolidCH_MASK        0x000000ff
#define HC_HPixGC_MASK          0x00800000
#define HC_HSPXOS_MASK          0x00fff000
#define HC_HSPXOS_SHIFT         12
#define HC_HSPYOS_MASK          0x00000fff

/*
 * Command A
 */
#define HC_HCmdHeader_MASK      0xfe000000  /*0xffe00000 */
#define HC_HE3Fire_MASK         0x00100000
#define HC_HPMType_MASK         0x000f0000
#define HC_HEFlag_MASK          0x0000e000
#define HC_HShading_MASK        0x00001c00
#define HC_HPMValidN_MASK       0x00000200
#define HC_HPLEND_MASK          0x00000100
#define HC_HVCycle_MASK         0x000000ff
#define HC_HVCycle_Style_MASK   0x000000c0
#define HC_HVCycle_ChgA_MASK    0x00000030
#define HC_HVCycle_ChgB_MASK    0x0000000c
#define HC_HVCycle_ChgC_MASK    0x00000003
#define HC_HPMType_Point        0x00000000
#define HC_HPMType_Line         0x00010000
#define HC_HPMType_Tri          0x00020000
#define HC_HPMType_TriWF        0x00040000
#define HC_HEFlag_NoAA          0x00000000
#define HC_HEFlag_ab            0x00008000
#define HC_HEFlag_bc            0x00004000
#define HC_HEFlag_ca            0x00002000
#define HC_HShading_Solid       0x00000000
#define HC_HShading_FlatA       0x00000400
#define HC_HShading_FlatB       0x00000800
#define HC_HShading_FlatC       0x00000c00
#define HC_HShading_Gouraud     0x00001000
#define HC_HVCycle_Full         0x00000000
#define HC_HVCycle_AFP          0x00000040
#define HC_HVCycle_One          0x000000c0
#define HC_HVCycle_NewA         0x00000000
#define HC_HVCycle_AA           0x00000010
#define HC_HVCycle_AB           0x00000020
#define HC_HVCycle_AC           0x00000030
#define HC_HVCycle_NewB         0x00000000
#define HC_HVCycle_BA           0x00000004
#define HC_HVCycle_BB           0x00000008
#define HC_HVCycle_BC           0x0000000c
#define HC_HVCycle_NewC         0x00000000
#define HC_HVCycle_CA           0x00000001
#define HC_HVCycle_CB           0x00000002
#define HC_HVCycle_CC           0x00000003

/* Command B
 */
#define HC_HLPrst_MASK          0x00010000
#define HC_HLLastP_MASK         0x00008000
#define HC_HVPMSK_MASK          0x00007f80
#define HC_HBFace_MASK          0x00000040
#define HC_H2nd1VT_MASK         0x0000003f
#define HC_HVPMSK_X             0x00004000
#define HC_HVPMSK_Y             0x00002000
#define HC_HVPMSK_Z             0x00001000
#define HC_HVPMSK_W             0x00000800
#define HC_HVPMSK_Cd            0x00000400
#define HC_HVPMSK_Cs            0x00000200
#define HC_HVPMSK_S             0x00000100
#define HC_HVPMSK_T             0x00000080

/* Enable Setting
 */
#define HC_SubA_HEnable         0x0000
#define HC_HenForce1P_MASK      0x00800000  /* [Force 1 Pipe] */
#define HC_HenZDCheck_MASK      0x00400000  /* [Z dirty bit settings] */
#define HC_HenTXEnvMap_MASK     0x00200000
#define HC_HenVertexCNT_MASK    0x00100000
#define HC_HenCPUDAZ_MASK       0x00080000
#define HC_HenDASZWC_MASK       0x00040000
#define HC_HenFBCull_MASK       0x00020000
#define HC_HenCW_MASK           0x00010000
#define HC_HenAA_MASK           0x00008000
#define HC_HenST_MASK           0x00004000
#define HC_HenZT_MASK           0x00002000
#define HC_HenZW_MASK           0x00001000
#define HC_HenAT_MASK           0x00000800
#define HC_HenAW_MASK           0x00000400
#define HC_HenSP_MASK           0x00000200
#define HC_HenLP_MASK           0x00000100
#define HC_HenTXCH_MASK         0x00000080
#define HC_HenTXMP_MASK         0x00000040
#define HC_HenTXPP_MASK         0x00000020
#define HC_HenTXTR_MASK         0x00000010
#define HC_HenCS_MASK           0x00000008
#define HC_HenFOG_MASK          0x00000004
#define HC_HenABL_MASK          0x00000002
#define HC_HenDT_MASK           0x00000001

/* Z Setting
 */
#define HC_SubA_HZWBBasL        0x0010
#define HC_SubA_HZWBBasH        0x0011
#define HC_SubA_HZWBType        0x0012
#define HC_SubA_HZBiasL         0x0013
#define HC_SubA_HZWBend         0x0014
#define HC_SubA_HZWTMD          0x0015
#define HC_SubA_HZWCDL          0x0016
#define HC_SubA_HZWCTAGnum      0x0017
#define HC_SubA_HZCYNum         0x0018
#define HC_SubA_HZWCFire        0x0019
/* HC_SubA_HZWBType
 */
#define HC_HZWBType_MASK        0x00800000
#define HC_HZBiasedWB_MASK      0x00400000
#define HC_HZONEasFF_MASK       0x00200000
#define HC_HZOONEasFF_MASK      0x00100000
#define HC_HZWBFM_MASK          0x00030000
#define HC_HZWBLoc_MASK         0x0000c000
#define HC_HZWBPit_MASK         0x00003fff
#define HC_HZWBFM_16            0x00000000
#define HC_HZWBFM_32            0x00020000
#define HC_HZWBFM_24            0x00030000
#define HC_HZWBLoc_Local        0x00000000
#define HC_HZWBLoc_SyS          0x00004000
/* HC_SubA_HZWBend
 */
#define HC_HZWBend_MASK         0x00ffe000
#define HC_HZBiasH_MASK         0x000000ff
#define HC_HZWBend_SHIFT        10
/* HC_SubA_HZWTMD
 */
#define HC_HZWTMD_MASK          0x00070000
#define HC_HEBEBias_MASK        0x00007f00
#define HC_HZNF_MASK            0x000000ff
#define HC_HZWTMD_NeverPass     0x00000000
#define HC_HZWTMD_LT            0x00010000
#define HC_HZWTMD_EQ            0x00020000
#define HC_HZWTMD_LE            0x00030000
#define HC_HZWTMD_GT            0x00040000
#define HC_HZWTMD_NE            0x00050000
#define HC_HZWTMD_GE            0x00060000
#define HC_HZWTMD_AllPass       0x00070000
#define HC_HEBEBias_SHIFT       8
/* HC_SubA_HZWCDL          0x0016
 */
#define HC_HZWCDL_MASK          0x00ffffff
/* HC_SubA_HZWCTAGnum      0x0017
 */
#define HC_HZWCTAGnum_MASK      0x00ff0000
#define HC_HZWCTAGnum_SHIFT     16
#define HC_HZWCDH_MASK          0x000000ff
#define HC_HZWCDH_SHIFT         0
/* HC_SubA_HZCYNum         0x0018
 */
#define HC_HZCYNum_MASK         0x00030000
#define HC_HZCYNum_SHIFT        16
#define HC_HZWCQWnum_MASK       0x00003fff
#define HC_HZWCQWnum_SHIFT      0
/* HC_SubA_HZWCFire        0x0019
 */
#define HC_ZWCFire_MASK         0x00010000
#define HC_HZWCQWnumLast_MASK   0x00003fff
#define HC_HZWCQWnumLast_SHIFT  0

/* Stencil Setting
 */
#define HC_SubA_HSTREF          0x0023
#define HC_SubA_HSTMD           0x0024
/* HC_SubA_HSBFM
 */
#define HC_HSBFM_MASK           0x00030000
#define HC_HSBLoc_MASK          0x0000c000
#define HC_HSBPit_MASK          0x00003fff
/* HC_SubA_HSTREF
 */
#define HC_HSTREF_MASK          0x00ff0000
#define HC_HSTOPMSK_MASK        0x0000ff00
#define HC_HSTBMSK_MASK         0x000000ff
#define HC_HSTREF_SHIFT         16
#define HC_HSTOPMSK_SHIFT       8
/* HC_SubA_HSTMD
 */
#define HC_HSTMD_MASK           0x00070000
#define HC_HSTOPSF_MASK         0x000001c0
#define HC_HSTOPSPZF_MASK       0x00000038
#define HC_HSTOPSPZP_MASK       0x00000007
#define HC_HSTMD_NeverPass      0x00000000
#define HC_HSTMD_LT             0x00010000
#define HC_HSTMD_EQ             0x00020000
#define HC_HSTMD_LE             0x00030000
#define HC_HSTMD_GT             0x00040000
#define HC_HSTMD_NE             0x00050000
#define HC_HSTMD_GE             0x00060000
#define HC_HSTMD_AllPass        0x00070000
#define HC_HSTOPSF_KEEP         0x00000000
#define HC_HSTOPSF_ZERO         0x00000040
#define HC_HSTOPSF_REPLACE      0x00000080
#define HC_HSTOPSF_INCRSAT      0x000000c0
#define HC_HSTOPSF_DECRSAT      0x00000100
#define HC_HSTOPSF_INVERT       0x00000140
#define HC_HSTOPSF_INCR         0x00000180
#define HC_HSTOPSF_DECR         0x000001c0
#define HC_HSTOPSPZF_KEEP       0x00000000
#define HC_HSTOPSPZF_ZERO       0x00000008
#define HC_HSTOPSPZF_REPLACE    0x00000010
#define HC_HSTOPSPZF_INCRSAT    0x00000018
#define HC_HSTOPSPZF_DECRSAT    0x00000020
#define HC_HSTOPSPZF_INVERT     0x00000028
#define HC_HSTOPSPZF_INCR       0x00000030
#define HC_HSTOPSPZF_DECR       0x00000038
#define HC_HSTOPSPZP_KEEP       0x00000000
#define HC_HSTOPSPZP_ZERO       0x00000001
#define HC_HSTOPSPZP_REPLACE    0x00000002
#define HC_HSTOPSPZP_INCRSAT    0x00000003
#define HC_HSTOPSPZP_DECRSAT    0x00000004
#define HC_HSTOPSPZP_INVERT     0x00000005
#define HC_HSTOPSPZP_INCR       0x00000006
#define HC_HSTOPSPZP_DECR       0x00000007

/* Alpha Setting
 */
#define HC_SubA_HABBasL         0x0030
#define HC_SubA_HABBasH         0x0031
#define HC_SubA_HABFM           0x0032
#define HC_SubA_HATMD           0x0033
#define HC_SubA_HABLCsat        0x0034
#define HC_SubA_HABLCop         0x0035
#define HC_SubA_HABLAsat        0x0036
#define HC_SubA_HABLAop         0x0037
#define HC_SubA_HABLRCa         0x0038
#define HC_SubA_HABLRFCa        0x0039
#define HC_SubA_HABLRCbias      0x003a
#define HC_SubA_HABLRCb         0x003b
#define HC_SubA_HABLRFCb        0x003c
#define HC_SubA_HABLRAa         0x003d
#define HC_SubA_HABLRAb         0x003e
/* HC_SubA_HABFM
 */
#define HC_HABFM_MASK           0x00030000
#define HC_HABLoc_MASK          0x0000c000
#define HC_HABPit_MASK          0x000007ff
/* HC_SubA_HATMD
 */
#define HC_HATMD_MASK           0x00000700
#define HC_HATREF_MASK          0x000000ff
#define HC_HATMD_NeverPass      0x00000000
#define HC_HATMD_LT             0x00000100
#define HC_HATMD_EQ             0x00000200
#define HC_HATMD_LE             0x00000300
#define HC_HATMD_GT             0x00000400
#define HC_HATMD_NE             0x00000500
#define HC_HATMD_GE             0x00000600
#define HC_HATMD_AllPass        0x00000700
/* HC_SubA_HABLCsat
 */
#define HC_HABLCsat_MASK        0x00010000
#define HC_HABLCa_MASK          0x0000fc00
#define HC_HABLCa_C_MASK        0x0000c000
#define HC_HABLCa_OPC_MASK      0x00003c00
#define HC_HABLFCa_MASK         0x000003f0
#define HC_HABLFCa_C_MASK       0x00000300
#define HC_HABLFCa_OPC_MASK     0x000000f0
#define HC_HABLCbias_MASK       0x0000000f
#define HC_HABLCbias_C_MASK     0x00000008
#define HC_HABLCbias_OPC_MASK   0x00000007
/*-- Define the input color.
 */
#define HC_XC_Csrc              0x00000000
#define HC_XC_Cdst              0x00000001
#define HC_XC_Asrc              0x00000002
#define HC_XC_Adst              0x00000003
#define HC_XC_Fog               0x00000004
#define HC_XC_HABLRC            0x00000005
#define HC_XC_minSrcDst         0x00000006
#define HC_XC_maxSrcDst         0x00000007
#define HC_XC_mimAsrcInvAdst    0x00000008
#define HC_XC_OPC               0x00000000
#define HC_XC_InvOPC            0x00000010
#define HC_XC_OPCp5             0x00000020
/*-- Define the input Alpha
 */
#define HC_XA_OPA               0x00000000
#define HC_XA_InvOPA            0x00000010
#define HC_XA_OPAp5             0x00000020
#define HC_XA_0                 0x00000000
#define HC_XA_Asrc              0x00000001
#define HC_XA_Adst              0x00000002
#define HC_XA_Fog               0x00000003
#define HC_XA_minAsrcFog        0x00000004
#define HC_XA_minAsrcAdst       0x00000005
#define HC_XA_maxAsrcFog        0x00000006
#define HC_XA_maxAsrcAdst       0x00000007
#define HC_XA_HABLRA            0x00000008
#define HC_XA_minAsrcInvAdst    0x00000008
#define HC_XA_HABLFRA           0x00000009
/*--
 */
#define HC_HABLCa_OPC           (HC_XC_OPC << 10)
#define HC_HABLCa_InvOPC        (HC_XC_InvOPC << 10)
#define HC_HABLCa_OPCp5         (HC_XC_OPCp5 << 10)
#define HC_HABLCa_Csrc          (HC_XC_Csrc << 10)
#define HC_HABLCa_Cdst          (HC_XC_Cdst << 10)
#define HC_HABLCa_Asrc          (HC_XC_Asrc << 10)
#define HC_HABLCa_Adst          (HC_XC_Adst << 10)
#define HC_HABLCa_Fog           (HC_XC_Fog << 10)
#define HC_HABLCa_HABLRCa       (HC_XC_HABLRC << 10)
#define HC_HABLCa_minSrcDst     (HC_XC_minSrcDst << 10)
#define HC_HABLCa_maxSrcDst     (HC_XC_maxSrcDst << 10)
#define HC_HABLFCa_OPC              (HC_XC_OPC << 4)
#define HC_HABLFCa_InvOPC           (HC_XC_InvOPC << 4)
#define HC_HABLFCa_OPCp5            (HC_XC_OPCp5 << 4)
#define HC_HABLFCa_Csrc             (HC_XC_Csrc << 4)
#define HC_HABLFCa_Cdst             (HC_XC_Cdst << 4)
#define HC_HABLFCa_Asrc             (HC_XC_Asrc << 4)
#define HC_HABLFCa_Adst             (HC_XC_Adst << 4)
#define HC_HABLFCa_Fog              (HC_XC_Fog << 4)
#define HC_HABLFCa_HABLRCa          (HC_XC_HABLRC << 4)
#define HC_HABLFCa_minSrcDst        (HC_XC_minSrcDst << 4)
#define HC_HABLFCa_maxSrcDst        (HC_XC_maxSrcDst << 4)
#define HC_HABLFCa_mimAsrcInvAdst   (HC_XC_mimAsrcInvAdst << 4)
#define HC_HABLCbias_HABLRCbias 0x00000000
#define HC_HABLCbias_Asrc       0x00000001
#define HC_HABLCbias_Adst       0x00000002
#define HC_HABLCbias_Fog        0x00000003
#define HC_HABLCbias_Cin        0x00000004
/* HC_SubA_HABLCop         0x0035
 */
#define HC_HABLdot_MASK         0x00010000
#define HC_HABLCop_MASK         0x00004000
#define HC_HABLCb_MASK          0x00003f00
#define HC_HABLCb_C_MASK        0x00003000
#define HC_HABLCb_OPC_MASK      0x00000f00
#define HC_HABLFCb_MASK         0x000000fc
#define HC_HABLFCb_C_MASK       0x000000c0
#define HC_HABLFCb_OPC_MASK     0x0000003c
#define HC_HABLCshift_MASK      0x00000003
#define HC_HABLCb_OPC           (HC_XC_OPC << 8)
#define HC_HABLCb_InvOPC        (HC_XC_InvOPC << 8)
#define HC_HABLCb_OPCp5         (HC_XC_OPCp5 << 8)
#define HC_HABLCb_Csrc          (HC_XC_Csrc << 8)
#define HC_HABLCb_Cdst          (HC_XC_Cdst << 8)
#define HC_HABLCb_Asrc          (HC_XC_Asrc << 8)
#define HC_HABLCb_Adst          (HC_XC_Adst << 8)
#define HC_HABLCb_Fog           (HC_XC_Fog << 8)
#define HC_HABLCb_HABLRCa       (HC_XC_HABLRC << 8)
#define HC_HABLCb_minSrcDst     (HC_XC_minSrcDst << 8)
#define HC_HABLCb_maxSrcDst     (HC_XC_maxSrcDst << 8)
#define HC_HABLFCb_OPC              (HC_XC_OPC << 2)
#define HC_HABLFCb_InvOPC           (HC_XC_InvOPC << 2)
#define HC_HABLFCb_OPCp5            (HC_XC_OPCp5 << 2)
#define HC_HABLFCb_Csrc             (HC_XC_Csrc << 2)
#define HC_HABLFCb_Cdst             (HC_XC_Cdst << 2)
#define HC_HABLFCb_Asrc             (HC_XC_Asrc << 2)
#define HC_HABLFCb_Adst             (HC_XC_Adst << 2)
#define HC_HABLFCb_Fog              (HC_XC_Fog << 2)
#define HC_HABLFCb_HABLRCb          (HC_XC_HABLRC << 2)
#define HC_HABLFCb_minSrcDst        (HC_XC_minSrcDst << 2)
#define HC_HABLFCb_maxSrcDst        (HC_XC_maxSrcDst << 2)
#define HC_HABLFCb_mimAsrcInvAdst   (HC_XC_mimAsrcInvAdst << 2)
/* HC_SubA_HABLAsat        0x0036
 */
#define HC_HABLAsat_MASK        0x00010000
#define HC_HABLAa_MASK          0x0000fc00
#define HC_HABLAa_A_MASK        0x0000c000
#define HC_HABLAa_OPA_MASK      0x00003c00
#define HC_HABLFAa_MASK         0x000003f0
#define HC_HABLFAa_A_MASK       0x00000300
#define HC_HABLFAa_OPA_MASK     0x000000f0
#define HC_HABLAbias_MASK       0x0000000f
#define HC_HABLAbias_A_MASK     0x00000008
#define HC_HABLAbias_OPA_MASK   0x00000007
#define HC_HABLAa_OPA           (HC_XA_OPA << 10)
#define HC_HABLAa_InvOPA        (HC_XA_InvOPA << 10)
#define HC_HABLAa_OPAp5         (HC_XA_OPAp5 << 10)
#define HC_HABLAa_0             (HC_XA_0 << 10)
#define HC_HABLAa_Asrc          (HC_XA_Asrc << 10)
#define HC_HABLAa_Adst          (HC_XA_Adst << 10)
#define HC_HABLAa_Fog           (HC_XA_Fog << 10)
#define HC_HABLAa_minAsrcFog    (HC_XA_minAsrcFog << 10)
#define HC_HABLAa_minAsrcAdst   (HC_XA_minAsrcAdst << 10)
#define HC_HABLAa_maxAsrcFog    (HC_XA_maxAsrcFog << 10)
#define HC_HABLAa_maxAsrcAdst   (HC_XA_maxAsrcAdst << 10)
#define HC_HABLAa_HABLRA        (HC_XA_HABLRA << 10)
#define HC_HABLFAa_OPA          (HC_XA_OPA << 4)
#define HC_HABLFAa_InvOPA       (HC_XA_InvOPA << 4)
#define HC_HABLFAa_OPAp5        (HC_XA_OPAp5 << 4)
#define HC_HABLFAa_0            (HC_XA_0 << 4)
#define HC_HABLFAa_Asrc         (HC_XA_Asrc << 4)
#define HC_HABLFAa_Adst         (HC_XA_Adst << 4)
#define HC_HABLFAa_Fog          (HC_XA_Fog << 4)
#define HC_HABLFAa_minAsrcFog   (HC_XA_minAsrcFog << 4)
#define HC_HABLFAa_minAsrcAdst  (HC_XA_minAsrcAdst << 4)
#define HC_HABLFAa_maxAsrcFog   (HC_XA_maxAsrcFog << 4)
#define HC_HABLFAa_maxAsrcAdst  (HC_XA_maxAsrcAdst << 4)
#define HC_HABLFAa_minAsrcInvAdst   (HC_XA_minAsrcInvAdst << 4)
#define HC_HABLFAa_HABLFRA          (HC_XA_HABLFRA << 4)
#define HC_HABLAbias_HABLRAbias 0x00000000
#define HC_HABLAbias_Asrc       0x00000001
#define HC_HABLAbias_Adst       0x00000002
#define HC_HABLAbias_Fog        0x00000003
#define HC_HABLAbias_Aaa        0x00000004
/* HC_SubA_HABLAop         0x0037
 */
#define HC_HABLAop_MASK         0x00004000
#define HC_HABLAb_MASK          0x00003f00
#define HC_HABLAb_OPA_MASK      0x00000f00
#define HC_HABLFAb_MASK         0x000000fc
#define HC_HABLFAb_OPA_MASK     0x0000003c
#define HC_HABLAshift_MASK      0x00000003
#define HC_HABLAb_OPA           (HC_XA_OPA << 8)
#define HC_HABLAb_InvOPA        (HC_XA_InvOPA << 8)
#define HC_HABLAb_OPAp5         (HC_XA_OPAp5 << 8)
#define HC_HABLAb_0             (HC_XA_0 << 8)
#define HC_HABLAb_Asrc          (HC_XA_Asrc << 8)
#define HC_HABLAb_Adst          (HC_XA_Adst << 8)
#define HC_HABLAb_Fog           (HC_XA_Fog << 8)
#define HC_HABLAb_minAsrcFog    (HC_XA_minAsrcFog << 8)
#define HC_HABLAb_minAsrcAdst   (HC_XA_minAsrcAdst << 8)
#define HC_HABLAb_maxAsrcFog    (HC_XA_maxAsrcFog << 8)
#define HC_HABLAb_maxAsrcAdst   (HC_XA_maxAsrcAdst << 8)
#define HC_HABLAb_HABLRA        (HC_XA_HABLRA << 8)
#define HC_HABLFAb_OPA          (HC_XA_OPA << 2)
#define HC_HABLFAb_InvOPA       (HC_XA_InvOPA << 2)
#define HC_HABLFAb_OPAp5        (HC_XA_OPAp5 << 2)
#define HC_HABLFAb_0            (HC_XA_0 << 2)
#define HC_HABLFAb_Asrc         (HC_XA_Asrc << 2)
#define HC_HABLFAb_Adst         (HC_XA_Adst << 2)
#define HC_HABLFAb_Fog          (HC_XA_Fog << 2)
#define HC_HABLFAb_minAsrcFog   (HC_XA_minAsrcFog << 2)
#define HC_HABLFAb_minAsrcAdst  (HC_XA_minAsrcAdst << 2)
#define HC_HABLFAb_maxAsrcFog   (HC_XA_maxAsrcFog << 2)
#define HC_HABLFAb_maxAsrcAdst  (HC_XA_maxAsrcAdst << 2)
#define HC_HABLFAb_minAsrcInvAdst   (HC_XA_minAsrcInvAdst << 2)
#define HC_HABLFAb_HABLFRA          (HC_XA_HABLFRA << 2)
/* HC_SubA_HABLRAa         0x003d
 */
#define HC_HABLRAa_MASK         0x00ff0000
#define HC_HABLRFAa_MASK        0x0000ff00
#define HC_HABLRAbias_MASK      0x000000ff
#define HC_HABLRAa_SHIFT        16
#define HC_HABLRFAa_SHIFT       8
/* HC_SubA_HABLRAb         0x003e
 */
#define HC_HABLRAb_MASK         0x0000ff00
#define HC_HABLRFAb_MASK        0x000000ff
#define HC_HABLRAb_SHIFT        8

/* Destination Setting
 */
#define HC_SubA_HDBBasL         0x0040
#define HC_SubA_HDBBasH         0x0041
#define HC_SubA_HDBFM           0x0042
#define HC_SubA_HFBBMSKL        0x0043
#define HC_SubA_HROP            0x0044
/* HC_SubA_HDBFM           0x0042
 */
#define HC_HDBFM_MASK           0x001f0000
#define HC_HDBLoc_MASK          0x0000c000
#define HC_HDBPit_MASK          0x00003fff
#define HC_HDBFM_RGB555         0x00000000
#define HC_HDBFM_RGB565         0x00010000
#define HC_HDBFM_ARGB4444       0x00020000
#define HC_HDBFM_ARGB1555       0x00030000
#define HC_HDBFM_BGR555         0x00040000
#define HC_HDBFM_BGR565         0x00050000
#define HC_HDBFM_ABGR4444       0x00060000
#define HC_HDBFM_ABGR1555       0x00070000
#define HC_HDBFM_ARGB0888       0x00080000
#define HC_HDBFM_ARGB8888       0x00090000
#define HC_HDBFM_ABGR0888       0x000a0000
#define HC_HDBFM_ABGR8888       0x000b0000
#define HC_HDBLoc_Local         0x00000000
#define HC_HDBLoc_Sys           0x00004000
/* HC_SubA_HROP            0x0044
 */
#define HC_HROP_MASK            0x00000f00
#define HC_HFBBMSKH_MASK        0x000000ff
#define HC_HROP_BLACK           0x00000000
#define HC_HROP_DPon            0x00000100
#define HC_HROP_DPna            0x00000200
#define HC_HROP_Pn              0x00000300
#define HC_HROP_PDna            0x00000400
#define HC_HROP_Dn              0x00000500
#define HC_HROP_DPx             0x00000600
#define HC_HROP_DPan            0x00000700
#define HC_HROP_DPa             0x00000800
#define HC_HROP_DPxn            0x00000900
#define HC_HROP_D               0x00000a00
#define HC_HROP_DPno            0x00000b00
#define HC_HROP_P               0x00000c00
#define HC_HROP_PDno            0x00000d00
#define HC_HROP_DPo             0x00000e00
#define HC_HROP_WHITE           0x00000f00

/* Fog Setting
 */
#define HC_SubA_HFogLF          0x0050
#define HC_SubA_HFogCL          0x0051
#define HC_SubA_HFogCH          0x0052
#define HC_SubA_HFogStL         0x0053
#define HC_SubA_HFogStH         0x0054
#define HC_SubA_HFogOOdMF       0x0055
#define HC_SubA_HFogOOdEF       0x0056
#define HC_SubA_HFogEndL        0x0057
#define HC_SubA_HFogDenst       0x0058
/* HC_SubA_FogLF           0x0050
 */
#define HC_FogLF_MASK           0x00000010
#define HC_FogEq_MASK           0x00000008
#define HC_FogMD_MASK           0x00000007
#define HC_FogMD_LocalFog        0x00000000
#define HC_FogMD_LinearFog       0x00000002
#define HC_FogMD_ExponentialFog  0x00000004
#define HC_FogMD_Exponential2Fog 0x00000005
/* #define HC_FogMD_FogTable       0x00000003 */

/* HC_SubA_HFogDenst        0x0058
 */
#define HC_FogDenst_MASK        0x001fff00
#define HC_FogEndL_MASK         0x000000ff

/* Texture subtype definitions
 */
#define HC_SubType_Samp0        0x00000020
#define HC_SubType_Samp1        0x00000021


/* Texture subtype definitions
 */
#define HC_SubType_Tex0         0x00000000
#define HC_SubType_Tex1         0x00000001
#define HC_SubType_TexGeneral   0x000000fe

/* Attribute of texture n
 */
#define HC_SubA_HTXnL0BasL      0x0000
#define HC_SubA_HTXnL1BasL      0x0001
#define HC_SubA_HTXnL2BasL      0x0002
#define HC_SubA_HTXnL3BasL      0x0003
#define HC_SubA_HTXnL4BasL      0x0004
#define HC_SubA_HTXnL5BasL      0x0005
#define HC_SubA_HTXnL6BasL      0x0006
#define HC_SubA_HTXnL7BasL      0x0007
#define HC_SubA_HTXnL8BasL      0x0008
#define HC_SubA_HTXnL9BasL      0x0009
#define HC_SubA_HTXnLaBasL      0x000a
#define HC_SubA_HTXnLbBasL      0x000b
#define HC_SubA_HTXnLcBasL      0x000c
#define HC_SubA_HTXnLdBasL      0x000d
#define HC_SubA_HTXnLeBasL      0x000e
#define HC_SubA_HTXnLfBasL      0x000f
#define HC_SubA_HTXnL10BasL     0x0010
#define HC_SubA_HTXnL11BasL     0x0011
#define HC_SubA_HTXnL012BasH    0x0020
#define HC_SubA_HTXnL345BasH    0x0021
#define HC_SubA_HTXnL678BasH    0x0022
#define HC_SubA_HTXnL9abBasH    0x0023
#define HC_SubA_HTXnLcdeBasH    0x0024
#define HC_SubA_HTXnLf1011BasH  0x0025
#define HC_SubA_HTXnL0Pit       0x002b
#define HC_SubA_HTXnL1Pit       0x002c
#define HC_SubA_HTXnL2Pit       0x002d
#define HC_SubA_HTXnL3Pit       0x002e
#define HC_SubA_HTXnL4Pit       0x002f
#define HC_SubA_HTXnL5Pit       0x0030
#define HC_SubA_HTXnL6Pit       0x0031
#define HC_SubA_HTXnL7Pit       0x0032
#define HC_SubA_HTXnL8Pit       0x0033
#define HC_SubA_HTXnL9Pit       0x0034
#define HC_SubA_HTXnLaPit       0x0035
#define HC_SubA_HTXnLbPit       0x0036
#define HC_SubA_HTXnLcPit       0x0037
#define HC_SubA_HTXnLdPit       0x0038
#define HC_SubA_HTXnLePit       0x0039
#define HC_SubA_HTXnLfPit       0x003a
#define HC_SubA_HTXnL10Pit      0x003b
#define HC_SubA_HTXnL11Pit      0x003c
#define HC_SubA_HTXnL0_5WE      0x004b
#define HC_SubA_HTXnL6_bWE      0x004c
#define HC_SubA_HTXnLc_11WE     0x004d
#define HC_SubA_HTXnL0_5HE      0x0051
#define HC_SubA_HTXnL6_bHE      0x0052
#define HC_SubA_HTXnLc_11HE     0x0053
#define HC_SubA_HTXnL0OS        0x0077
#define HC_SubA_HTXnTB          0x0078
#define HC_SubA_HTXnMPMD        0x0079
#define HC_SubA_HTXnCLODu       0x007a
#define HC_SubA_HTXnFM          0x007b
#define HC_SubA_HTXnTRCH        0x007c
#define HC_SubA_HTXnTRCL        0x007d
#define HC_SubA_HTXnTBC         0x007e
#define HC_SubA_HTXnTRAH        0x007f
#define HC_SubA_HTXnTBLCsat     0x0080
#define HC_SubA_HTXnTBLCop      0x0081
#define HC_SubA_HTXnTBLMPfog    0x0082
#define HC_SubA_HTXnTBLAsat     0x0083
#define HC_SubA_HTXnTBLRCa      0x0085
#define HC_SubA_HTXnTBLRCb      0x0086
#define HC_SubA_HTXnTBLRCc      0x0087
#define HC_SubA_HTXnTBLRCbias   0x0088
#define HC_SubA_HTXnTBLRAa      0x0089
#define HC_SubA_HTXnTBLRFog     0x008a
#define HC_SubA_HTXnBumpM00     0x0090
#define HC_SubA_HTXnBumpM01     0x0091
#define HC_SubA_HTXnBumpM10     0x0092
#define HC_SubA_HTXnBumpM11     0x0093
#define HC_SubA_HTXnLScale      0x0094

#define HC_SubA_HTXSMD             0x0000
#define HC_SubA_HTXYUV2RGB1        0x0001
#define HC_SubA_HTXYUV2RGB2        0x0002
#define HC_SubA_HTXYUV2RGB3        0x0003
#define HTXYUV2RGB4BT601           (1<<23)
#define HTXYUV2RGB4BT709           (1<<22)
/* HC_SubA_HTXnL012BasH    0x0020
 */
#define HC_HTXnL0BasH_MASK      0x000000ff
#define HC_HTXnL1BasH_MASK      0x0000ff00
#define HC_HTXnL2BasH_MASK      0x00ff0000
#define HC_HTXnL1BasH_SHIFT     8
#define HC_HTXnL2BasH_SHIFT     16
/* HC_SubA_HTXnL345BasH    0x0021
 */
#define HC_HTXnL3BasH_MASK      0x000000ff
#define HC_HTXnL4BasH_MASK      0x0000ff00
#define HC_HTXnL5BasH_MASK      0x00ff0000
#define HC_HTXnL4BasH_SHIFT     8
#define HC_HTXnL5BasH_SHIFT     16
/* HC_SubA_HTXnL678BasH    0x0022
 */
#define HC_HTXnL6BasH_MASK      0x000000ff
#define HC_HTXnL7BasH_MASK      0x0000ff00
#define HC_HTXnL8BasH_MASK      0x00ff0000
#define HC_HTXnL7BasH_SHIFT     8
#define HC_HTXnL8BasH_SHIFT     16
/* HC_SubA_HTXnL9abBasH    0x0023
 */
#define HC_HTXnL9BasH_MASK      0x000000ff
#define HC_HTXnLaBasH_MASK      0x0000ff00
#define HC_HTXnLbBasH_MASK      0x00ff0000
#define HC_HTXnLaBasH_SHIFT     8
#define HC_HTXnLbBasH_SHIFT     16
/* HC_SubA_HTXnLcdeBasH    0x0024
 */
#define HC_HTXnLcBasH_MASK      0x000000ff
#define HC_HTXnLdBasH_MASK      0x0000ff00
#define HC_HTXnLeBasH_MASK      0x00ff0000
#define HC_HTXnLdBasH_SHIFT     8
#define HC_HTXnLeBasH_SHIFT     16
/* HC_SubA_HTXnLcdeBasH    0x0025
 */
#define HC_HTXnLfBasH_MASK      0x000000ff
#define HC_HTXnL10BasH_MASK      0x0000ff00
#define HC_HTXnL11BasH_MASK      0x00ff0000
#define HC_HTXnL10BasH_SHIFT     8
#define HC_HTXnL11BasH_SHIFT     16
/* HC_SubA_HTXnL0Pit       0x002b
 */
#define HC_HTXnLnPit_MASK       0x00003fff
#define HC_HTXnEnPit_MASK       0x00080000
#define HC_HTXnLnPitE_MASK      0x00f00000
#define HC_HTXnLnPitE_SHIFT     20
/* HC_SubA_HTXnL0_5WE      0x004b
 */
#define HC_HTXnL0WE_MASK        0x0000000f
#define HC_HTXnL1WE_MASK        0x000000f0
#define HC_HTXnL2WE_MASK        0x00000f00
#define HC_HTXnL3WE_MASK        0x0000f000
#define HC_HTXnL4WE_MASK        0x000f0000
#define HC_HTXnL5WE_MASK        0x00f00000
#define HC_HTXnL1WE_SHIFT       4
#define HC_HTXnL2WE_SHIFT       8
#define HC_HTXnL3WE_SHIFT       12
#define HC_HTXnL4WE_SHIFT       16
#define HC_HTXnL5WE_SHIFT       20
/* HC_SubA_HTXnL6_bWE      0x004c
 */
#define HC_HTXnL6WE_MASK        0x0000000f
#define HC_HTXnL7WE_MASK        0x000000f0
#define HC_HTXnL8WE_MASK        0x00000f00
#define HC_HTXnL9WE_MASK        0x0000f000
#define HC_HTXnLaWE_MASK        0x000f0000
#define HC_HTXnLbWE_MASK        0x00f00000
#define HC_HTXnL7WE_SHIFT       4
#define HC_HTXnL8WE_SHIFT       8
#define HC_HTXnL9WE_SHIFT       12
#define HC_HTXnLaWE_SHIFT       16
#define HC_HTXnLbWE_SHIFT       20
/* HC_SubA_HTXnLc_11WE      0x004d
 */
#define HC_HTXnLcWE_MASK        0x0000000f
#define HC_HTXnLdWE_MASK        0x000000f0
#define HC_HTXnLeWE_MASK        0x00000f00
#define HC_HTXnLfWE_MASK        0x0000f000
#define HC_HTXnL10WE_MASK       0x000f0000
#define HC_HTXnL11WE_MASK       0x00f00000
#define HC_HTXnLdWE_SHIFT       4
#define HC_HTXnLeWE_SHIFT       8
#define HC_HTXnLfWE_SHIFT       12
#define HC_HTXnL10WE_SHIFT      16
#define HC_HTXnL11WE_SHIFT      20
/* HC_SubA_HTXnL0_5HE      0x0051
 */
#define HC_HTXnL0HE_MASK        0x0000000f
#define HC_HTXnL1HE_MASK        0x000000f0
#define HC_HTXnL2HE_MASK        0x00000f00
#define HC_HTXnL3HE_MASK        0x0000f000
#define HC_HTXnL4HE_MASK        0x000f0000
#define HC_HTXnL5HE_MASK        0x00f00000
#define HC_HTXnL1HE_SHIFT       4
#define HC_HTXnL2HE_SHIFT       8
#define HC_HTXnL3HE_SHIFT       12
#define HC_HTXnL4HE_SHIFT       16
#define HC_HTXnL5HE_SHIFT       20
/* HC_SubA_HTXnL6_bHE      0x0052
 */
#define HC_HTXnL6HE_MASK        0x0000000f
#define HC_HTXnL7HE_MASK        0x000000f0
#define HC_HTXnL8HE_MASK        0x00000f00
#define HC_HTXnL9HE_MASK        0x0000f000
#define HC_HTXnLaHE_MASK        0x000f0000
#define HC_HTXnLbHE_MASK        0x00f00000
#define HC_HTXnL7HE_SHIFT       4
#define HC_HTXnL8HE_SHIFT       8
#define HC_HTXnL9HE_SHIFT       12
#define HC_HTXnLaHE_SHIFT       16
#define HC_HTXnLbHE_SHIFT       20
/* HC_SubA_HTXnLc_11HE      0x0053
 */
#define HC_HTXnLcHE_MASK        0x0000000f
#define HC_HTXnLdHE_MASK        0x000000f0
#define HC_HTXnLeHE_MASK        0x00000f00
#define HC_HTXnLfHE_MASK        0x0000f000
#define HC_HTXnL10HE_MASK       0x000f0000
#define HC_HTXnL11HE_MASK       0x00f00000
#define HC_HTXnLdHE_SHIFT       4
#define HC_HTXnLeHE_SHIFT       8
#define HC_HTXnLfHE_SHIFT       12
#define HC_HTXnL10HE_SHIFT      16
#define HC_HTXnL11HE_SHIFT      20
/* HC_SubA_HTXnL0OS        0x0077
 */
#define HC_HTXnL0OS_MASK        0x003ff000
#define HC_HTXnLVmax_MASK       0x00000fc0
#define HC_HTXnLVmin_MASK       0x0000003f
#define HC_HTXnL0OS_SHIFT       12
#define HC_HTXnLVmax_SHIFT      6
/* HC_SubA_HTXnTB          0x0078
 */
#define HC_HTXnTB_MASK          0x00f00000
#define HC_HTXnFLSe_MASK        0x0000e000
#define HC_HTXnFLSs_MASK        0x00001c00
#define HC_HTXnFLTe_MASK        0x00000380
#define HC_HTXnFLTs_MASK        0x00000070
#define HC_HTXnFLDs_MASK        0x0000000f
#define HC_HTXnTB_NoTB          0x00000000
#define HC_HTXnTB_TBC_S         0x00100000
#define HC_HTXnTB_TBC_T         0x00200000
#define HC_HTXnTB_TB_S          0x00400000
#define HC_HTXnTB_TB_T          0x00800000
#define HC_HTXnFLSe_Nearest     0x00000000
#define HC_HTXnFLSe_Linear      0x00002000
#define HC_HTXnFLSe_NonLinear   0x00004000
#define HC_HTXnFLSe_Sharp       0x00008000
#define HC_HTXnFLSe_Flat_Gaussian_Cubic 0x0000c000
#define HC_HTXnFLSs_Nearest     0x00000000
#define HC_HTXnFLSs_Linear      0x00000400
#define HC_HTXnFLSs_NonLinear   0x00000800
#define HC_HTXnFLSs_Flat_Gaussian_Cubic 0x00001800
#define HC_HTXnFLTe_Nearest     0x00000000
#define HC_HTXnFLTe_Linear      0x00000080
#define HC_HTXnFLTe_NonLinear   0x00000100
#define HC_HTXnFLTe_Sharp       0x00000180
#define HC_HTXnFLTe_Flat_Gaussian_Cubic 0x00000300
#define HC_HTXnFLTs_Nearest     0x00000000
#define HC_HTXnFLTs_Linear      0x00000010
#define HC_HTXnFLTs_NonLinear   0x00000020
#define HC_HTXnFLTs_Flat_Gaussian_Cubic 0x00000060
#define HC_HTXnFLDs_Tex0        0x00000000
#define HC_HTXnFLDs_Nearest     0x00000001
#define HC_HTXnFLDs_Linear      0x00000002
#define HC_HTXnFLDs_NonLinear   0x00000003
#define HC_HTXnFLDs_Dither      0x00000004
#define HC_HTXnFLDs_ConstLOD    0x00000005
#define HC_HTXnFLDs_Ani         0x00000006
#define HC_HTXnFLDs_AniDither   0x00000007
/* HC_SubA_HTXnMPMD        0x0079
 */
#define HC_HTXnMPMD_SMASK       0x00070000
#define HC_HTXnMPMD_TMASK       0x00380000
#define HC_HTXnLODDTf_MASK      0x00000007
#define HC_HTXnXY2ST_MASK       0x00000008
#define HC_HTXnMPMD_Tsingle     0x00000000
#define HC_HTXnMPMD_Tclamp      0x00080000
#define HC_HTXnMPMD_Trepeat     0x00100000
#define HC_HTXnMPMD_Tmirror     0x00180000
#define HC_HTXnMPMD_Twrap       0x00200000
#define HC_HTXnMPMD_Ssingle     0x00000000
#define HC_HTXnMPMD_Sclamp      0x00010000
#define HC_HTXnMPMD_Srepeat     0x00020000
#define HC_HTXnMPMD_Smirror     0x00030000
#define HC_HTXnMPMD_Swrap       0x00040000
/* HC_SubA_HTXnCLODu       0x007a
 */
#define HC_HTXnCLODu_MASK       0x000ffc00
#define HC_HTXnCLODd_MASK       0x000003ff
#define HC_HTXnCLODu_SHIFT      10
/* HC_SubA_HTXnFM          0x007b
 */
#define HC_HTXnFM_MASK          0x00ff0000
#define HC_HTXnLoc_MASK         0x00000003
#define HC_HTXnFM_INDEX         0x00000000
#define HC_HTXnFM_Intensity     0x00080000
#define HC_HTXnFM_Lum           0x00100000
#define HC_HTXnFM_Alpha         0x00180000
#define HC_HTXnFM_DX            0x00280000
#define HC_HTXnFM_YUV           0x00300000
#define HC_HTXnFM_ARGB16        0x00880000
#define HC_HTXnFM_ARGB32        0x00980000
#define HC_HTXnFM_ABGR16        0x00a80000
#define HC_HTXnFM_ABGR32        0x00b80000
#define HC_HTXnFM_RGBA16        0x00c80000
#define HC_HTXnFM_RGBA32        0x00d80000
#define HC_HTXnFM_BGRA16        0x00e80000
#define HC_HTXnFM_BGRA32        0x00f80000
#define HC_HTXnFM_BUMPMAP       0x00380000
#define HC_HTXnFM_Index1        (HC_HTXnFM_INDEX     | 0x00000000)
#define HC_HTXnFM_Index2        (HC_HTXnFM_INDEX     | 0x00010000)
#define HC_HTXnFM_Index4        (HC_HTXnFM_INDEX     | 0x00020000)
#define HC_HTXnFM_Index8        (HC_HTXnFM_INDEX     | 0x00030000)
#define HC_HTXnFM_T1            (HC_HTXnFM_Intensity | 0x00000000)
#define HC_HTXnFM_T2            (HC_HTXnFM_Intensity | 0x00010000)
#define HC_HTXnFM_T4            (HC_HTXnFM_Intensity | 0x00020000)
#define HC_HTXnFM_T8            (HC_HTXnFM_Intensity | 0x00030000)
#define HC_HTXnFM_L1            (HC_HTXnFM_Lum       | 0x00000000)
#define HC_HTXnFM_L2            (HC_HTXnFM_Lum       | 0x00010000)
#define HC_HTXnFM_L4            (HC_HTXnFM_Lum       | 0x00020000)
#define HC_HTXnFM_L8            (HC_HTXnFM_Lum       | 0x00030000)
#define HC_HTXnFM_AL44          (HC_HTXnFM_Lum       | 0x00040000)
#define HC_HTXnFM_AL88          (HC_HTXnFM_Lum       | 0x00050000)
#define HC_HTXnFM_A1            (HC_HTXnFM_Alpha     | 0x00000000)
#define HC_HTXnFM_A2            (HC_HTXnFM_Alpha     | 0x00010000)
#define HC_HTXnFM_A4            (HC_HTXnFM_Alpha     | 0x00020000)
#define HC_HTXnFM_A8            (HC_HTXnFM_Alpha     | 0x00030000)
#define HC_HTXnFM_DX1           (HC_HTXnFM_DX        | 0x00010000)
#define HC_HTXnFM_DX23          (HC_HTXnFM_DX        | 0x00020000)
#define HC_HTXnFM_DX45          (HC_HTXnFM_DX        | 0x00030000)
/* YUV package mode */
#define HC_HTXnFM_YUY2          (HC_HTXnFM_YUV           | 0x00000000)
/* YUV planner mode */
#define HC_HTXnFM_YV12          (HC_HTXnFM_YUV           | 0x00040000)
/* YUV planner mode */
#define HC_HTXnFM_IYUV          (HC_HTXnFM_YUV           | 0x00040000)
#define HC_HTXnFM_RGB555        (HC_HTXnFM_ARGB16    | 0x00000000)
#define HC_HTXnFM_RGB565        (HC_HTXnFM_ARGB16    | 0x00010000)
#define HC_HTXnFM_ARGB1555      (HC_HTXnFM_ARGB16    | 0x00020000)
#define HC_HTXnFM_ARGB4444      (HC_HTXnFM_ARGB16    | 0x00030000)
#define HC_HTXnFM_ARGB0888      (HC_HTXnFM_ARGB32    | 0x00000000)
#define HC_HTXnFM_ARGB8888      (HC_HTXnFM_ARGB32    | 0x00010000)
#define HC_HTXnFM_BGR555        (HC_HTXnFM_ABGR16    | 0x00000000)
#define HC_HTXnFM_BGR565        (HC_HTXnFM_ABGR16    | 0x00010000)
#define HC_HTXnFM_ABGR1555      (HC_HTXnFM_ABGR16    | 0x00020000)
#define HC_HTXnFM_ABGR4444      (HC_HTXnFM_ABGR16    | 0x00030000)
#define HC_HTXnFM_ABGR0888      (HC_HTXnFM_ABGR32    | 0x00000000)
#define HC_HTXnFM_ABGR8888      (HC_HTXnFM_ABGR32    | 0x00010000)
#define HC_HTXnFM_RGBA5550      (HC_HTXnFM_RGBA16    | 0x00000000)
#define HC_HTXnFM_RGBA5551      (HC_HTXnFM_RGBA16    | 0x00020000)
#define HC_HTXnFM_RGBA4444      (HC_HTXnFM_RGBA16    | 0x00030000)
#define HC_HTXnFM_RGBA8880      (HC_HTXnFM_RGBA32    | 0x00000000)
#define HC_HTXnFM_RGBA8888      (HC_HTXnFM_RGBA32    | 0x00010000)
#define HC_HTXnFM_BGRA5550      (HC_HTXnFM_BGRA16    | 0x00000000)
#define HC_HTXnFM_BGRA5551      (HC_HTXnFM_BGRA16    | 0x00020000)
#define HC_HTXnFM_BGRA4444      (HC_HTXnFM_BGRA16    | 0x00030000)
#define HC_HTXnFM_BGRA8880      (HC_HTXnFM_BGRA32    | 0x00000000)
#define HC_HTXnFM_BGRA8888      (HC_HTXnFM_BGRA32    | 0x00010000)
#define HC_HTXnFM_VU88          (HC_HTXnFM_BUMPMAP   | 0x00000000)
#define HC_HTXnFM_LVU655        (HC_HTXnFM_BUMPMAP   | 0x00010000)
#define HC_HTXnFM_LVU888        (HC_HTXnFM_BUMPMAP   | 0x00020000)
#define HC_HTXnLoc_Local        0x00000000
#define HC_HTXnLoc_Sys          0x00000002
#define HC_HTXnLoc_AGP          0x00000003

/* Video Texture */
#define HC_HTXnYUV2RGBMode_RGB          0x00000000
#define HC_HTXnYUV2RGBMode_SDTV         0x00000001
#define HC_HTXnYUV2RGBMode_HDTV         0x00000002
#define HC_HTXnYUV2RGBMode_TABLE        0x00000003

/* HC_SubA_HTXnTRAH        0x007f
 */
#define HC_HTXnTRAH_MASK        0x00ff0000
#define HC_HTXnTRAL_MASK        0x0000ff00
#define HC_HTXnTBA_MASK         0x000000ff
#define HC_HTXnTRAH_SHIFT       16
#define HC_HTXnTRAL_SHIFT       8
/* HC_SubA_HTXnTBLCsat     0x0080
 *-- Define the input texture.
 */
#define HC_XTC_TOPC             0x00000000
#define HC_XTC_InvTOPC          0x00000010
#define HC_XTC_TOPCp5           0x00000020
#define HC_XTC_Cbias            0x00000000
#define HC_XTC_InvCbias         0x00000010
#define HC_XTC_0                0x00000000
#define HC_XTC_Dif              0x00000001
#define HC_XTC_Spec             0x00000002
#define HC_XTC_Tex              0x00000003
#define HC_XTC_Cur              0x00000004
#define HC_XTC_Adif             0x00000005
#define HC_XTC_Fog              0x00000006
#define HC_XTC_Atex             0x00000007
#define HC_XTC_Acur             0x00000008
#define HC_XTC_HTXnTBLRC        0x00000009
#define HC_XTC_Ctexnext         0x0000000a
/*--
 */
#define HC_HTXnTBLCsat_MASK     0x00800000
#define HC_HTXnTBLCa_MASK       0x000fc000
#define HC_HTXnTBLCb_MASK       0x00001f80
#define HC_HTXnTBLCc_MASK       0x0000003f
#define HC_HTXnTBLCa_TOPC       (HC_XTC_TOPC << 14)
#define HC_HTXnTBLCa_InvTOPC    (HC_XTC_InvTOPC << 14)
#define HC_HTXnTBLCa_TOPCp5     (HC_XTC_TOPCp5 << 14)
#define HC_HTXnTBLCa_0          (HC_XTC_0 << 14)
#define HC_HTXnTBLCa_Dif        (HC_XTC_Dif << 14)
#define HC_HTXnTBLCa_Spec       (HC_XTC_Spec << 14)
#define HC_HTXnTBLCa_Tex        (HC_XTC_Tex << 14)
#define HC_HTXnTBLCa_Cur        (HC_XTC_Cur << 14)
#define HC_HTXnTBLCa_Adif       (HC_XTC_Adif << 14)
#define HC_HTXnTBLCa_Fog        (HC_XTC_Fog << 14)
#define HC_HTXnTBLCa_Atex       (HC_XTC_Atex << 14)
#define HC_HTXnTBLCa_Acur       (HC_XTC_Acur << 14)
#define HC_HTXnTBLCa_HTXnTBLRC  (HC_XTC_HTXnTBLRC << 14)
#define HC_HTXnTBLCa_Ctexnext   (HC_XTC_Ctexnext << 14)
#define HC_HTXnTBLCb_TOPC       (HC_XTC_TOPC << 7)
#define HC_HTXnTBLCb_InvTOPC    (HC_XTC_InvTOPC << 7)
#define HC_HTXnTBLCb_TOPCp5     (HC_XTC_TOPCp5 << 7)
#define HC_HTXnTBLCb_0          (HC_XTC_0 << 7)
#define HC_HTXnTBLCb_Dif        (HC_XTC_Dif << 7)
#define HC_HTXnTBLCb_Spec       (HC_XTC_Spec << 7)
#define HC_HTXnTBLCb_Tex        (HC_XTC_Tex << 7)
#define HC_HTXnTBLCb_Cur        (HC_XTC_Cur << 7)
#define HC_HTXnTBLCb_Adif       (HC_XTC_Adif << 7)
#define HC_HTXnTBLCb_Fog        (HC_XTC_Fog << 7)
#define HC_HTXnTBLCb_Atex       (HC_XTC_Atex << 7)
#define HC_HTXnTBLCb_Acur       (HC_XTC_Acur << 7)
#define HC_HTXnTBLCb_HTXnTBLRC  (HC_XTC_HTXnTBLRC << 7)
#define HC_HTXnTBLCb_Ctexnext   (HC_XTC_Ctexnext << 7)
#define HC_HTXnTBLCc_TOPC       (HC_XTC_TOPC << 0)
#define HC_HTXnTBLCc_InvTOPC    (HC_XTC_InvTOPC << 0)
#define HC_HTXnTBLCc_TOPCp5     (HC_XTC_TOPCp5 << 0)
#define HC_HTXnTBLCc_0          (HC_XTC_0 << 0)
#define HC_HTXnTBLCc_Dif        (HC_XTC_Dif << 0)
#define HC_HTXnTBLCc_Spec       (HC_XTC_Spec << 0)
#define HC_HTXnTBLCc_Tex        (HC_XTC_Tex << 0)
#define HC_HTXnTBLCc_Cur        (HC_XTC_Cur << 0)
#define HC_HTXnTBLCc_Adif       (HC_XTC_Adif << 0)
#define HC_HTXnTBLCc_Fog        (HC_XTC_Fog << 0)
#define HC_HTXnTBLCc_Atex       (HC_XTC_Atex << 0)
#define HC_HTXnTBLCc_Acur       (HC_XTC_Acur << 0)
#define HC_HTXnTBLCc_HTXnTBLRC  (HC_XTC_HTXnTBLRC << 0)
#define HC_HTXnTBLCc_Ctexnext   (HC_XTC_Ctexnext << 0)
/* HC_SubA_HTXnTBLCop      0x0081
 */
#define HC_HTXnTBLdot_MASK      0x00c00000
#define HC_HTXnTBLCop_MASK      0x00380000
#define HC_HTXnTBLCbias_MASK    0x0007c000
#define HC_HTXnTBLCshift_MASK   0x00001800
#define HC_HTXnTBLAop_MASK      0x00000380
#define HC_HTXnTBLAbias_MASK    0x00000078
#define HC_HTXnTBLAshift_MASK   0x00000003
#define HC_HTXnTBLCop_Add       0x00000000
#define HC_HTXnTBLCop_Sub       0x00080000
#define HC_HTXnTBLCop_Min       0x00100000
#define HC_HTXnTBLCop_Max       0x00180000
#define HC_HTXnTBLCop_Mask      0x00200000
#define HC_HTXnTBLCbias_Cbias           (HC_XTC_Cbias << 14)
#define HC_HTXnTBLCbias_InvCbias        (HC_XTC_InvCbias << 14)
#define HC_HTXnTBLCbias_0               (HC_XTC_0 << 14)
#define HC_HTXnTBLCbias_Dif             (HC_XTC_Dif << 14)
#define HC_HTXnTBLCbias_Spec            (HC_XTC_Spec << 14)
#define HC_HTXnTBLCbias_Tex             (HC_XTC_Tex << 14)
#define HC_HTXnTBLCbias_Cur             (HC_XTC_Cur << 14)
#define HC_HTXnTBLCbias_Adif            (HC_XTC_Adif << 14)
#define HC_HTXnTBLCbias_Fog             (HC_XTC_Fog << 14)
#define HC_HTXnTBLCbias_Atex            (HC_XTC_Atex << 14)
#define HC_HTXnTBLCbias_Acur            (HC_XTC_Acur << 14)
#define HC_HTXnTBLCbias_HTXnTBLRC       (HC_XTC_HTXnTBLRC << 14)
#define HC_HTXnTBLCshift_1      0x00000000
#define HC_HTXnTBLCshift_2      0x00000800
#define HC_HTXnTBLCshift_No     0x00001000
#define HC_HTXnTBLCshift_DotP   0x00001800
/*=* John Sheng [2003.7.18] texture combine *=*/
#define HC_HTXnTBLDOT3   0x00080000
#define HC_HTXnTBLDOT4   0x000C0000

#define HC_HTXnTBLAop_Add       0x00000000
#define HC_HTXnTBLAop_Sub       0x00000080
#define HC_HTXnTBLAop_Min       0x00000100
#define HC_HTXnTBLAop_Max       0x00000180
#define HC_HTXnTBLAop_Mask      0x00000200
#define HC_HTXnTBLAbias_Inv             0x00000040
#define HC_HTXnTBLAbias_Adif            0x00000000
#define HC_HTXnTBLAbias_Fog             0x00000008
#define HC_HTXnTBLAbias_Acur            0x00000010
#define HC_HTXnTBLAbias_HTXnTBLRAbias   0x00000018
#define HC_HTXnTBLAbias_Atex            0x00000020
#define HC_HTXnTBLAshift_1      0x00000000
#define HC_HTXnTBLAshift_2      0x00000001
#define HC_HTXnTBLAshift_No     0x00000002
/* #define HC_HTXnTBLAshift_DotP   0x00000003 */
/* HC_SubA_HTXnTBLMPFog    0x0082
 */
#define HC_HTXnTBLMPfog_MASK    0x00e00000
#define HC_HTXnTBLMPfog_0       0x00000000
#define HC_HTXnTBLMPfog_Adif    0x00200000
#define HC_HTXnTBLMPfog_Fog     0x00400000
#define HC_HTXnTBLMPfog_Atex    0x00600000
#define HC_HTXnTBLMPfog_Acur    0x00800000
#define HC_HTXnTBLMPfog_GHTXnTBLRFog    0x00a00000
/* HC_SubA_HTXnTBLAsat     0x0083
 *-- Define the texture alpha input.
 */
#define HC_XTA_TOPA             0x00000000
#define HC_XTA_InvTOPA          0x00000008
#define HC_XTA_TOPAp5           0x00000010
#define HC_XTA_Adif             0x00000000
#define HC_XTA_Fog              0x00000001
#define HC_XTA_Acur             0x00000002
#define HC_XTA_HTXnTBLRA        0x00000003
#define HC_XTA_Atex             0x00000004
#define HC_XTA_Atexnext         0x00000005
/*--
 */
#define HC_HTXnTBLAsat_MASK     0x00800000
#define HC_HTXnTBLAMB_MASK      0x00700000
#define HC_HTXnTBLAa_MASK       0x0007c000
#define HC_HTXnTBLAb_MASK       0x00000f80
#define HC_HTXnTBLAc_MASK       0x0000001f
#define HC_HTXnTBLAMB_SHIFT     20
#define HC_HTXnTBLAa_TOPA       (HC_XTA_TOPA << 14)
#define HC_HTXnTBLAa_InvTOPA    (HC_XTA_InvTOPA << 14)
#define HC_HTXnTBLAa_TOPAp5     (HC_XTA_TOPAp5 << 14)
#define HC_HTXnTBLAa_Adif       (HC_XTA_Adif << 14)
#define HC_HTXnTBLAa_Fog        (HC_XTA_Fog << 14)
#define HC_HTXnTBLAa_Acur       (HC_XTA_Acur << 14)
#define HC_HTXnTBLAa_HTXnTBLRA  (HC_XTA_HTXnTBLRA << 14)
#define HC_HTXnTBLAa_Atex       (HC_XTA_Atex << 14)
#define HC_HTXnTBLAa_Atexnext   (HC_XTA_Atexnext << 14)
#define HC_HTXnTBLAb_TOPA       (HC_XTA_TOPA << 7)
#define HC_HTXnTBLAb_InvTOPA    (HC_XTA_InvTOPA << 7)
#define HC_HTXnTBLAb_TOPAp5     (HC_XTA_TOPAp5 << 7)
#define HC_HTXnTBLAb_Adif       (HC_XTA_Adif << 7)
#define HC_HTXnTBLAb_Fog        (HC_XTA_Fog << 7)
#define HC_HTXnTBLAb_Acur       (HC_XTA_Acur << 7)
#define HC_HTXnTBLAb_HTXnTBLRA  (HC_XTA_HTXnTBLRA << 7)
#define HC_HTXnTBLAb_Atex       (HC_XTA_Atex << 7)
#define HC_HTXnTBLAb_Atexnext   (HC_XTA_Atexnext << 7)
#define HC_HTXnTBLAc_TOPA       (HC_XTA_TOPA << 0)
#define HC_HTXnTBLAc_InvTOPA    (HC_XTA_InvTOPA << 0)
#define HC_HTXnTBLAc_TOPAp5     (HC_XTA_TOPAp5 << 0)
#define HC_HTXnTBLAc_Adif       (HC_XTA_Adif << 0)
#define HC_HTXnTBLAc_Fog        (HC_XTA_Fog << 0)
#define HC_HTXnTBLAc_Acur       (HC_XTA_Acur << 0)
#define HC_HTXnTBLAc_HTXnTBLRA  (HC_XTA_HTXnTBLRA << 0)
#define HC_HTXnTBLAc_Atex       (HC_XTA_Atex << 0)
#define HC_HTXnTBLAc_Atexnext   (HC_XTA_Atexnext << 0)
/* HC_SubA_HTXnTBLRAa      0x0089
 */
#define HC_HTXnTBLRAa_MASK      0x00ff0000
#define HC_HTXnTBLRAb_MASK      0x0000ff00
#define HC_HTXnTBLRAc_MASK      0x000000ff
#define HC_HTXnTBLRAa_SHIFT     16
#define HC_HTXnTBLRAb_SHIFT     8
#define HC_HTXnTBLRAc_SHIFT     0
/* HC_SubA_HTXnTBLRFog     0x008a
 */
#define HC_HTXnTBLRFog_MASK     0x0000ff00
#define HC_HTXnTBLRAbias_MASK   0x000000ff
#define HC_HTXnTBLRFog_SHIFT    8
#define HC_HTXnTBLRAbias_SHIFT  0
/* HC_SubA_HTXnLScale      0x0094
 */
#define HC_HTXnLScale_MASK      0x0007fc00
#define HC_HTXnLOff_MASK        0x000001ff
#define HC_HTXnLScale_SHIFT     10
/* HC_SubA_HTXSMD          0x0000
 */
#define HC_HTXSMD_MASK          0x00000080
#define HC_HTXTMD_MASK          0x00000040
#define HC_HTXNum_MASK          0x00000038
#define HC_HTXTRMD_MASK         0x00000006
#define HC_HTXCHCLR_MASK        0x00000001
#define HC_HTXNum_SHIFT         3

/* Texture Palette n
 */
#define HC_SubType_TexPalette0  0x00000000
#define HC_SubType_TexPalette1  0x00000001
#define HC_SubType_FogTable     0x00000010
#define HC_SubType_Stipple      0x00000014
/* HC_SubA_TexPalette0     0x0000
 */
#define HC_HTPnA_MASK           0xff000000
#define HC_HTPnR_MASK           0x00ff0000
#define HC_HTPnG_MASK           0x0000ff00
#define HC_HTPnB_MASK           0x000000ff
/* HC_SubA_FogTable        0x0010
 */
#define HC_HFPn3_MASK           0xff000000
#define HC_HFPn2_MASK           0x00ff0000
#define HC_HFPn1_MASK           0x0000ff00
#define HC_HFPn_MASK            0x000000ff
#define HC_HFPn3_SHIFT          24
#define HC_HFPn2_SHIFT          16
#define HC_HFPn1_SHIFT          8

/* Auto Testing & Security
 */
#define HC_SubA_HenFIFOAT       0x0000
#define HC_SubA_HFBDrawFirst    0x0004
#define HC_SubA_HFBBasL         0x0005
#define HC_SubA_HFBDst          0x0006
/* HC_SubA_HenFIFOAT       0x0000
 */
#define HC_HenFIFOAT_MASK       0x00000020
#define HC_HenGEMILock_MASK     0x00000010
#define HC_HenFBASwap_MASK      0x00000008
#define HC_HenOT_MASK           0x00000004
#define HC_HenCMDQ_MASK         0x00000002
#define HC_HenTXCTSU_MASK       0x00000001
/* HC_SubA_HFBDrawFirst    0x0004
 */
#define HC_HFBDrawFirst_MASK    0x00000800
#define HC_HFBQueue_MASK        0x00000400
#define HC_HFBLock_MASK         0x00000200
#define HC_HEOF_MASK            0x00000100
#define HC_HFBBasH_MASK         0x000000ff

/* GEMI Setting
 */
#define HC_SubA_HTArbRCM        0x0008
#define HC_SubA_HTArbRZ         0x000a
#define HC_SubA_HTArbWZ         0x000b
#define HC_SubA_HTArbRTX        0x000c
#define HC_SubA_HTArbRCW        0x000d
#define HC_SubA_HTArbE2         0x000e
#define HC_SubA_HArbRQCM        0x0010
#define HC_SubA_HArbWQCM        0x0011
#define HC_SubA_HGEMITout       0x0020
#define HC_SubA_HFthRTXD        0x0040
#define HC_SubA_HFthRTXA        0x0044
#define HC_SubA_HCMDQstL        0x0050
#define HC_SubA_HCMDQendL       0x0051
#define HC_SubA_HCMDQLen        0x0052
/* HC_SubA_HTArbRCM        0x0008
 */
#define HC_HTArbRCM_MASK        0x0000ffff
/* HC_SubA_HTArbRZ         0x000a
 */
#define HC_HTArbRZ_MASK         0x0000ffff
/* HC_SubA_HTArbWZ         0x000b
 */
#define HC_HTArbWZ_MASK         0x0000ffff
/* HC_SubA_HTArbRTX        0x000c
 */
#define HC_HTArbRTX_MASK        0x0000ffff
/* HC_SubA_HTArbRCW        0x000d
 */
#define HC_HTArbRCW_MASK        0x0000ffff
/* HC_SubA_HTArbE2         0x000e
 */
#define HC_HTArbE2_MASK         0x0000ffff
/* HC_SubA_HArbRQCM        0x0010
 */
#define HC_HTArbRQCM_MASK       0x0000ffff
/* HC_SubA_HArbWQCM        0x0011
 */
#define HC_HArbWQCM_MASK        0x0000ffff
/* HC_SubA_HGEMITout       0x0020
 */
#define HC_HGEMITout_MASK       0x000f0000
#define HC_HNPArbZC_MASK        0x0000ffff
#define HC_HGEMITout_SHIFT      16
/* HC_SubA_HFthRTXD        0x0040
 */
#define HC_HFthRTXD_MASK        0x00ff0000
#define HC_HFthRZD_MASK         0x0000ff00
#define HC_HFthWZD_MASK         0x000000ff
#define HC_HFthRTXD_SHIFT       16
#define HC_HFthRZD_SHIFT        8
/* HC_SubA_HFthRTXA        0x0044
 */
#define HC_HFthRTXA_MASK        0x000000ff

/****************************************************************************
 * Define the Halcyon Internal register access constants. For simulator only.
 ***************************************************************************/
#define HC_SIMA_HAGPBstL        0x0000
#define HC_SIMA_HAGPBendL       0x0001
#define HC_SIMA_HAGPCMNT        0x0002
#define HC_SIMA_HAGPBpL         0x0003
#define HC_SIMA_HAGPBpH         0x0004
#define HC_SIMA_HClipTB         0x0005
#define HC_SIMA_HClipLR         0x0006
#define HC_SIMA_HFPClipTL       0x0007
#define HC_SIMA_HFPClipBL       0x0008
#define HC_SIMA_HFPClipLL       0x0009
#define HC_SIMA_HFPClipRL       0x000a
#define HC_SIMA_HFPClipTBH      0x000b
#define HC_SIMA_HFPClipLRH      0x000c
#define HC_SIMA_HLP             0x000d
#define HC_SIMA_HLPRF           0x000e
#define HC_SIMA_HSolidCL        0x000f
#define HC_SIMA_HPixGC          0x0010
#define HC_SIMA_HSPXYOS         0x0011
#define HC_SIMA_HCmdA           0x0012
#define HC_SIMA_HCmdB           0x0013
#define HC_SIMA_HEnable         0x0014
#define HC_SIMA_HZWBBasL        0x0015
#define HC_SIMA_HZWBBasH        0x0016
#define HC_SIMA_HZWBType        0x0017
#define HC_SIMA_HZBiasL         0x0018
#define HC_SIMA_HZWBend         0x0019
#define HC_SIMA_HZWTMD          0x001a
#define HC_SIMA_HZWCDL          0x001b
#define HC_SIMA_HZWCTAGnum      0x001c
#define HC_SIMA_HZCYNum         0x001d
#define HC_SIMA_HZWCFire        0x001e
/* #define HC_SIMA_HSBBasL         0x001d */
/* #define HC_SIMA_HSBBasH         0x001e */
/* #define HC_SIMA_HSBFM           0x001f */
#define HC_SIMA_HSTREF          0x0020
#define HC_SIMA_HSTMD           0x0021
#define HC_SIMA_HABBasL         0x0022
#define HC_SIMA_HABBasH         0x0023
#define HC_SIMA_HABFM           0x0024
#define HC_SIMA_HATMD           0x0025
#define HC_SIMA_HABLCsat        0x0026
#define HC_SIMA_HABLCop         0x0027
#define HC_SIMA_HABLAsat        0x0028
#define HC_SIMA_HABLAop         0x0029
#define HC_SIMA_HABLRCa         0x002a
#define HC_SIMA_HABLRFCa        0x002b
#define HC_SIMA_HABLRCbias      0x002c
#define HC_SIMA_HABLRCb         0x002d
#define HC_SIMA_HABLRFCb        0x002e
#define HC_SIMA_HABLRAa         0x002f
#define HC_SIMA_HABLRAb         0x0030
#define HC_SIMA_HDBBasL         0x0031
#define HC_SIMA_HDBBasH         0x0032
#define HC_SIMA_HDBFM           0x0033
#define HC_SIMA_HFBBMSKL        0x0034
#define HC_SIMA_HROP            0x0035
#define HC_SIMA_HFogLF          0x0036
#define HC_SIMA_HFogCL          0x0037
#define HC_SIMA_HFogCH          0x0038
#define HC_SIMA_HFogStL         0x0039
#define HC_SIMA_HFogStH         0x003a
#define HC_SIMA_HFogOOdMF       0x003b
#define HC_SIMA_HFogOOdEF       0x003c
#define HC_SIMA_HFogEndL        0x003d
#define HC_SIMA_HFogDenst       0x003e
/*---- start of texture 0 setting ----
 */
#define HC_SIMA_HTX0L0BasL      0x0040
#define HC_SIMA_HTX0L1BasL      0x0041
#define HC_SIMA_HTX0L2BasL      0x0042
#define HC_SIMA_HTX0L3BasL      0x0043
#define HC_SIMA_HTX0L4BasL      0x0044
#define HC_SIMA_HTX0L5BasL      0x0045
#define HC_SIMA_HTX0L6BasL      0x0046
#define HC_SIMA_HTX0L7BasL      0x0047
#define HC_SIMA_HTX0L8BasL      0x0048
#define HC_SIMA_HTX0L9BasL      0x0049
#define HC_SIMA_HTX0LaBasL      0x004a
#define HC_SIMA_HTX0LbBasL      0x004b
#define HC_SIMA_HTX0LcBasL      0x004c
#define HC_SIMA_HTX0LdBasL      0x004d
#define HC_SIMA_HTX0LeBasL      0x004e
#define HC_SIMA_HTX0LfBasL      0x004f
#define HC_SIMA_HTX0L10BasL     0x0050
#define HC_SIMA_HTX0L11BasL     0x0051
#define HC_SIMA_HTX0L012BasH    0x0052
#define HC_SIMA_HTX0L345BasH    0x0053
#define HC_SIMA_HTX0L678BasH    0x0054
#define HC_SIMA_HTX0L9abBasH    0x0055
#define HC_SIMA_HTX0LcdeBasH    0x0056
#define HC_SIMA_HTX0Lf1011BasH  0x0057
#define HC_SIMA_HTX0L0Pit       0x0058
#define HC_SIMA_HTX0L1Pit       0x0059
#define HC_SIMA_HTX0L2Pit       0x005a
#define HC_SIMA_HTX0L3Pit       0x005b
#define HC_SIMA_HTX0L4Pit       0x005c
#define HC_SIMA_HTX0L5Pit       0x005d
#define HC_SIMA_HTX0L6Pit       0x005e
#define HC_SIMA_HTX0L7Pit       0x005f
#define HC_SIMA_HTX0L8Pit       0x0060
#define HC_SIMA_HTX0L9Pit       0x0061
#define HC_SIMA_HTX0LaPit       0x0062
#define HC_SIMA_HTX0LbPit       0x0063
#define HC_SIMA_HTX0LcPit       0x0064
#define HC_SIMA_HTX0LdPit       0x0065
#define HC_SIMA_HTX0LePit       0x0066
#define HC_SIMA_HTX0LfPit       0x0067
#define HC_SIMA_HTX0L10Pit      0x0068
#define HC_SIMA_HTX0L11Pit      0x0069
#define HC_SIMA_HTX0L0_5WE      0x006a
#define HC_SIMA_HTX0L6_bWE      0x006b
#define HC_SIMA_HTX0Lc_11WE     0x006c
#define HC_SIMA_HTX0L0_5HE      0x006d
#define HC_SIMA_HTX0L6_bHE      0x006e
#define HC_SIMA_HTX0Lc_11HE     0x006f
#define HC_SIMA_HTX0L0OS        0x0070
#define HC_SIMA_HTX0TB          0x0071
#define HC_SIMA_HTX0MPMD        0x0072
#define HC_SIMA_HTX0CLODu       0x0073
#define HC_SIMA_HTX0FM          0x0074
#define HC_SIMA_HTX0TRCH        0x0075
#define HC_SIMA_HTX0TRCL        0x0076
#define HC_SIMA_HTX0TBC         0x0077
#define HC_SIMA_HTX0TRAH        0x0078
#define HC_SIMA_HTX0TBLCsat     0x0079
#define HC_SIMA_HTX0TBLCop      0x007a
#define HC_SIMA_HTX0TBLMPfog    0x007b
#define HC_SIMA_HTX0TBLAsat     0x007c
#define HC_SIMA_HTX0TBLRCa      0x007d
#define HC_SIMA_HTX0TBLRCb      0x007e
#define HC_SIMA_HTX0TBLRCc      0x007f
#define HC_SIMA_HTX0TBLRCbias   0x0080
#define HC_SIMA_HTX0TBLRAa      0x0081
#define HC_SIMA_HTX0TBLRFog     0x0082
#define HC_SIMA_HTX0BumpM00     0x0083
#define HC_SIMA_HTX0BumpM01     0x0084
#define HC_SIMA_HTX0BumpM10     0x0085
#define HC_SIMA_HTX0BumpM11     0x0086
#define HC_SIMA_HTX0LScale      0x0087
/*---- end of texture 0 setting ----      0x008f
 */
#define HC_SIMA_TX0TX1_OFF      0x0050
/*---- start of texture 1 setting ----
 */
#define HC_SIMA_HTX1L0BasL      \
    (HC_SIMA_HTX0L0BasL + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1L1BasL      \
    (HC_SIMA_HTX0L1BasL + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1L2BasL      \
    (HC_SIMA_HTX0L2BasL + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1L3BasL      \
    (HC_SIMA_HTX0L3BasL + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1L4BasL      (\
    HC_SIMA_HTX0L4BasL + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1L5BasL      \
    (HC_SIMA_HTX0L5BasL + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1L6BasL      \
    (HC_SIMA_HTX0L6BasL + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1L7BasL      \
    (HC_SIMA_HTX0L7BasL + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1L8BasL      \
    (HC_SIMA_HTX0L8BasL + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1L9BasL      \
    (HC_SIMA_HTX0L9BasL + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1LaBasL      \
    (HC_SIMA_HTX0LaBasL + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1LbBasL      \
    (HC_SIMA_HTX0LbBasL + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1LcBasL      \
    (HC_SIMA_HTX0LcBasL + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1LdBasL      \
    (HC_SIMA_HTX0LdBasL + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1LeBasL      \
    (HC_SIMA_HTX0LeBasL + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1LfBasL      \
    (HC_SIMA_HTX0LfBasL + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1L10BasL     \
    (HC_SIMA_HTX0L10BasL + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1L11BasL     \
    (HC_SIMA_HTX0L11BasL + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1L012BasH    \
    (HC_SIMA_HTX0L012BasH + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1L345BasH    \
    (HC_SIMA_HTX0L345BasH + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1L678BasH    \
    (HC_SIMA_HTX0L678BasH + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1L9abBasH    \
    (HC_SIMA_HTX0L9abBasH + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1LcdeBasH    \
    (HC_SIMA_HTX0LcdeBasH + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1Lf1011BasH  \
    (HC_SIMA_HTX0Lf1011BasH + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1L0Pit       \
    (HC_SIMA_HTX0L0Pit + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1L1Pit       \
    (HC_SIMA_HTX0L1Pit + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1L2Pit       \
    (HC_SIMA_HTX0L2Pit + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1L3Pit       \
    (HC_SIMA_HTX0L3Pit + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1L4Pit       \
    (HC_SIMA_HTX0L4Pit + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1L5Pit       \
    (HC_SIMA_HTX0L5Pit + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1L6Pit       \
    (HC_SIMA_HTX0L6Pit + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1L7Pit       \
    (HC_SIMA_HTX0L7Pit + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1L8Pit       \
    (HC_SIMA_HTX0L8Pit + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1L9Pit       \
    (HC_SIMA_HTX0L9Pit + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1LaPit       \
    (HC_SIMA_HTX0LaPit + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1LbPit       \
    (HC_SIMA_HTX0LbPit + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1LcPit       \
    (HC_SIMA_HTX0LcPit + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1LdPit       \
    (HC_SIMA_HTX0LdPit + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1LePit       \
    (HC_SIMA_HTX0LePit + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1LfPit       \
    (HC_SIMA_HTX0LfPit + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1L10Pit      \
    (HC_SIMA_HTX0L10Pit + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1L11Pit      \
    (HC_SIMA_HTX0L11Pit + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1L0_5WE      \
    (HC_SIMA_HTX0L0_5WE + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1L6_bWE      \
    (HC_SIMA_HTX0L6_bWE + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1Lc_11WE     \
    (HC_SIMA_HTX0Lc_11WE + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1L0_5HE      \
    (HC_SIMA_HTX0L0_5HE + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1L6_bHE      \
    (HC_SIMA_HTX0L6_bHE + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1Lc_11HE      \
    (HC_SIMA_HTX0Lc_11HE + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1L0OS        \
    (HC_SIMA_HTX0L0OS + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1TB          \
    (HC_SIMA_HTX0TB + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1MPMD        \
    (HC_SIMA_HTX0MPMD + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1CLODu       \
    (HC_SIMA_HTX0CLODu + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1FM          \
    (HC_SIMA_HTX0FM + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1TRCH        \
    (HC_SIMA_HTX0TRCH + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1TRCL        \
    (HC_SIMA_HTX0TRCL + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1TBC         \
    (HC_SIMA_HTX0TBC + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1TRAH        \
    (HC_SIMA_HTX0TRAH + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1LTC         \
    (HC_SIMA_HTX0LTC + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1LTA         \
    (HC_SIMA_HTX0LTA + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1TBLCsat     \
    (HC_SIMA_HTX0TBLCsat + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1TBLCop      \
    (HC_SIMA_HTX0TBLCop + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1TBLMPfog    \
    (HC_SIMA_HTX0TBLMPfog + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1TBLAsat     \
    (HC_SIMA_HTX0TBLAsat + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1TBLRCa      \
    (HC_SIMA_HTX0TBLRCa + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1TBLRCb      \
    (HC_SIMA_HTX0TBLRCb + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1TBLRCc      \
    (HC_SIMA_HTX0TBLRCc + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1TBLRCbias   \
    (HC_SIMA_HTX0TBLRCbias + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1TBLRAa      \
    (HC_SIMA_HTX0TBLRAa + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1TBLRFog     \
    (HC_SIMA_HTX0TBLRFog + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1BumpM00     \
    (HC_SIMA_HTX0BumpM00 + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1BumpM01     \
    (HC_SIMA_HTX0BumpM01 + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1BumpM10     \
    (HC_SIMA_HTX0BumpM10 + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1BumpM11     \
    (HC_SIMA_HTX0BumpM11 + HC_SIMA_TX0TX1_OFF)
#define HC_SIMA_HTX1LScale      \
    (HC_SIMA_HTX0LScale + HC_SIMA_TX0TX1_OFF)
/*---- end of texture 1 setting ---- 0xaf
 */
#define HC_SIMA_HTXSMD          0x00b0
#define HC_SIMA_HenFIFOAT       0x00b1
#define HC_SIMA_HFBDrawFirst    0x00b2
#define HC_SIMA_HFBBasL         0x00b3
#define HC_SIMA_HTArbRCM        0x00b4
#define HC_SIMA_HTArbRZ         0x00b5
#define HC_SIMA_HTArbWZ         0x00b6
#define HC_SIMA_HTArbRTX        0x00b7
#define HC_SIMA_HTArbRCW        0x00b8
#define HC_SIMA_HTArbE2         0x00b9
#define HC_SIMA_HGEMITout       0x00ba
#define HC_SIMA_HFthRTXD        0x00bb
#define HC_SIMA_HFthRTXA        0x00bc
/* Define the texture palette 0
 */
#define HC_SIMA_HTP0            0x0100
#define HC_SIMA_HTP1            0x0200
#define HC_SIMA_FOGTABLE        0x0300
#define HC_SIMA_STIPPLE         0x0400
#define HC_SIMA_HE3Fire         0x0440
#define HC_SIMA_TRANS_SET       0x0441
#define HC_SIMA_HREngSt         0x0442
#define HC_SIMA_HRFIFOempty     0x0443
#define HC_SIMA_HRFIFOfull      0x0444
#define HC_SIMA_HRErr           0x0445
#define HC_SIMA_FIFOstatus      0x0446

/****************************************************************************
 * Define the AGP command header.
 ***************************************************************************/
#define HC_ACMD_MASK            0xfe000000
#define HC_ACMD_SUB_MASK        0x0c000000
#define HC_ACMD_HCmdA           0xee000000
#define HC_ACMD_HCmdB           0xec000000
#define HC_ACMD_HCmdC           0xea000000
#define HC_ACMD_H1              0xf0000000
#define HC_ACMD_H2              0xf2000000
#define HC_ACMD_H3              0xf4000000
#define HC_ACMD_H4              0xf6000000

#define HC_ACMD_H1IO_MASK       0x000001ff
#define HC_ACMD_H2IO1_MASK      0x001ff000
#define HC_ACMD_H2IO2_MASK      0x000001ff
#define HC_ACMD_H2IO1_SHIFT     12
#define HC_ACMD_H2IO2_SHIFT     0
#define HC_ACMD_H3IO_MASK       0x000001ff
#define HC_ACMD_H3COUNT_MASK    0x01fff000
#define HC_ACMD_H3COUNT_SHIFT   12
#define HC_ACMD_H4ID_MASK       0x000001ff
#define HC_ACMD_H4COUNT_MASK    0x01fffe00
#define HC_ACMD_H4COUNT_SHIFT   9

/*****************************************************************************
 * Define Header
 ****************************************************************************/
#define HC_HEADER2        0xF210F110

/*****************************************************************************
 * Define Dummy Value
 ****************************************************************************/
#define HC_DUMMY        0xCCCCCCCC
/*****************************************************************************
 * Define for DMA use
 ****************************************************************************/
#define HALCYON_HEADER2     0XF210F110
#define HALCYON_FIRECMD     0XEE100000
#define HALCYON_FIREMASK    0XFFF00000
#define HALCYON_CMDB        0XEC000000
#define HALCYON_CMDBMASK    0XFFFE0000
#define HALCYON_SUB_ADDR0   0X00000000
#define HALCYON_HEADER1MASK 0XFFFFFC00
#define HALCYON_HEADER1     0XF0000000
#define HC_SubA_HAGPBstL        0x0060
#define HC_SubA_HAGPBendL       0x0061
#define HC_SubA_HAGPCMNT        0x0062
#define HC_SubA_HAGPBpL         0x0063
#define HC_SubA_HAGPBpH         0x0064
#define HC_HAGPCMNT_MASK        0x00800000
#define HC_HCmdErrClr_MASK      0x00400000
#define HC_HAGPBendH_MASK       0x0000ff00
#define HC_HAGPBstH_MASK        0x000000ff
#define HC_HAGPBendH_SHIFT      8
#define HC_HAGPBstH_SHIFT       0
#define HC_HAGPBpL_MASK         0x00fffffc
#define HC_HAGPBpID_MASK        0x00000003
#define HC_HAGPBpID_PAUSE       0x00000000
#define HC_HAGPBpID_JUMP        0x00000001
#define HC_HAGPBpID_STOP        0x00000002
#define HC_HAGPBpH_MASK         0x00ffffff


#define VIA_VIDEO_HEADER5       0xFE040000
#define VIA_VIDEO_HEADER6       0xFE050000
#define VIA_VIDEO_HEADER7       0xFE060000
#define VIA_VIDEOMASK           0xFFFF0000

/*****************************************************************************
 * Define for H5 DMA use
 ****************************************************************************/
#define H5_HC_DUMMY                    0xCC000000

/* Command Header Type */
#define INV_DUMMY_MASK		0xFF000000
#define INV_AGPHeader0              0xFE000000
#define INV_AGPHeader1              0xFE010000
#define INV_AGPHeader2              0xFE020000
#define INV_AGPHeader3              0xFE030000
#define INV_AGPHeader4              0xFE040000
#define INV_AGPHeader5              0xFE050000
#define INV_AGPHeader6              0xFE060000
#define INV_AGPHeader7              0xFE070000
#define INV_AGPHeader9              0xFE090000
#define INV_AGPHeaderA              0xFE0A0000
#define INV_AGPHeader40             0xFE400000
#define INV_AGPHeader41             0xFE410000
#define INV_AGPHeader43             0xFE430000
#define INV_AGPHeader45             0xFE450000
#define INV_AGPHeader47             0xFE470000
#define INV_AGPHeader4A             0xFE4A0000
#define INV_AGPHeader82             0xFE820000
#define INV_AGPHeader83             0xFE830000
#define INV_AGPHeader_MASK          0xFFFF0000
#define INV_AGPHeader2A             0xFE2A0000
#define INV_AGPHeader25             0xFE250000
#define INV_AGPHeader20             0xFE200000
#define INV_AGPHeader23             0xFE230000
#define INV_AGPHeaderE2             0xFEE20000
#define INV_AGPHeaderE3             0xFEE30000

/*Transmission IO Space*/
#define INV_REG_CR_TRANS            0x041C
#define INV_REG_CR_BEGIN            0x0420
#define INV_REG_CR_END              0x0438

#define INV_REG_3D_TRANS            0x043C
#define INV_REG_3D_BEGIN            0x0440
#define INV_REG_3D_END              0x06FC

#define INV_ParaType_CmdVdata        0x0000

/* H5 Enable Setting
 */
#define INV_HC_SubA_HEnable1        0x00

#define INV_HC_HenAT4ALLRT_MASK     0x00100000
#define INV_HC_HenATMRT3_MASK       0x00080000
#define INV_HC_HenATMRT2_MASK       0x00040000
#define INV_HC_HenATMRT1_MASK       0x00020000
#define INV_HC_HenATMRT0_MASK        0x00010000
#define INV_HC_HenSCMRT3_MASK        0x00008000
#define INV_HC_HenSCMRT2_MASK        0x00004000
#define INV_HC_HenSCMRT1_MASK        0x00002000
#define INV_HC_HenSCMRT0_MASK        0x00001000
#define INV_HC_HenFOGMRT3_MASK        0x00000800
#define INV_HC_HenFOGMRT2_MASK        0x00000400
#define INV_HC_HenFOGMRT1_MASK        0x00000200
#define INV_HC_HenFOGMRT0_MASK        0x00000100
#define INV_HC_HenABLMRT3_MASK        0x00000080
#define INV_HC_HenABLMRT2_MASK        0x00000040
#define INV_HC_HenABLMRT1_MASK        0x00000020
#define INV_HC_HenABLMRT0_MASK        0x00000010
#define INV_HC_HenDTMRT3_MASK        0x00000008
#define INV_HC_HenDTMRT2_MASK        0x00000004
#define INV_HC_HenDTMRT1_MASK        0x00000002
#define INV_HC_HenDTMRT0_MASK        0x00000001

#define INV_HC_SubA_HEnable2        0x01

#define INV_HC_HenLUL2DR_MASK         0x00800000
#define INV_HC_HenLDIAMOND_MASK     0x00400000
#define INV_HC_HenPSPRITE_MASK         0x00200000
#define INV_HC_HenC2S_MASK             0x00100000
#define INV_HC_HenFOGPP_MASK           0x00080000
#define INV_HC_HenSCPP_MASK           0x00040000
#define INV_HC_HenCPP_MASK           0x00020000
#define INV_HC_HenCZ_MASK            0x00002000
#define INV_HC_HenVC_MASK            0x00001000
#define INV_HC_HenCL_MASK            0x00000800
#define INV_HC_HenPS_MASK            0x00000400
#define INV_HC_HenWCZ_MASK            0x00000200
#define INV_HC_HenTXCH_MASK            0x00000100
#define INV_HC_HenBFCULL_MASK        0x00000080
#define INV_HC_HenCW_MASK            0x00000040
#define INV_HC_HenAA_MASK            0x00000020
#define INV_HC_HenST_MASK            0x00000010
#define INV_HC_HenZT_MASK            0x00000008
#define INV_HC_HenZW_MASK            0x00000004
#define INV_HC_HenSP_MASK            0x00000002
#define INV_HC_HenLP_MASK            0x00000001

/* H5 Miscellaneous Settings
 */
#define INV_HC_SubA_HCClipTL           0x0080
#define INV_HC_SubA_HCClipBL           0x0081
#define INV_HC_SubA_HSClipTL           0x0082
#define INV_HC_SubA_HSClipBL           0x0083
#define INV_HC_SubA_HSolidCL        0x0086
#define INV_HC_SubA_HSolidCH        0x0087
#define INV_HC_SubA_HGBClipGL       0x0088
#define INV_HC_SubA_HGBClipGR       0x0089


#define INV_HC_ParaType_Vetex        0x00040000

#endif

[File Ends] drivers/gpu/drm/via/via_3d_reg.h

[File Begins] drivers/gpu/drm/via/via_connector.c
/*
 * Copyright 2016 The OpenChrome Project
 * [via_connector.c]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHOR(S) OR COPYRIGHT HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * Authors: Kevin Brace <kevinbrace@gmx.com>
 */

#include "via_drv.h"      // MUST be first
#include "via_connector.h"

#include <drm/drm_atomic_state_helper.h>
#include <drm/drm_connector.h>
#include <drm/drm_crtc_helper.h>
#include <drm/drm_edid.h>
#include <drm/drm_modeset_helper_vtables.h>
#include <drm/drm_probe_helper.h>

struct via_i2c_stuff {
    u16 i2c_port;
    u16 is_active;
    struct i2c_adapter adapter;
    struct i2c_algo_bit_data algo;
};

/* Forward declaration of via_i2c_adapters */
extern struct via_i2c_stuff via_i2c_adapters[5];

/* Import the global via_i2c_adapters variable */
extern struct via_i2c_stuff via_i2c_adapters[];

/* 
 * REMOVED: via_find_ddc_bus
 * This function is now defined only in via_i2c.c
 */

void via_connector_destroy(struct drm_connector *connector)
{
    struct via_connector *con;

    if (!connector)
        return;

    con = to_via_connector(connector);
    
    /* No need to check con since to_via_connector is just a container_of macro */

    drm_connector_unregister(connector);
     
    kfree(con);
}

int via_connector_init(struct drm_connector *connector,
                     const struct drm_connector_funcs *funcs,
                     int connector_type)
{
    /* Only check connector and funcs - don't check connector->dev 
     * since it hasn't been set yet! */
    if (!connector || !funcs)
        return -EINVAL;

    /* Initialize the connector with DRM subsystem */
    drm_connector_init(connector->dev, connector, funcs, connector_type);
    drm_connector_register(connector);
    return 0;
}

/* 
 * REMOVED: via_tmds_detect
 * This function is now defined only in via_tmds.c
 */

/* Connector function structures for DVI connections */
const struct drm_connector_funcs via_dvi_connector_funcs = {
    .dpms = drm_helper_connector_dpms,
    .detect = via_tmds_detect,
    .fill_modes = drm_helper_probe_single_connector_modes,
    .destroy = via_connector_destroy,
    .reset = drm_atomic_helper_connector_reset,
    .atomic_duplicate_state = drm_atomic_helper_connector_duplicate_state,
    .atomic_destroy_state = drm_atomic_helper_connector_destroy_state,
};

/* 
 * Common connector helper functions for all connector types
 * This avoids having separate unused helper function structures
 */
static const struct drm_connector_helper_funcs via_connector_helper_funcs = {
    .get_modes = drm_connector_helper_get_modes,
    .mode_valid = NULL, /* Default to allowing all modes */
};

/* DAC/VGA connector initialization function */
struct drm_connector *
via_connector_dac_init(struct drm_device *dev) {   
    struct via_connector *con;

    con = kzalloc(sizeof(*con), GFP_KERNEL);
    if (!con)
        return NULL;

    struct drm_connector *connector = &con->base;
    INIT_LIST_HEAD(&con->props); 
    connector->connector_type = DRM_MODE_CONNECTOR_VGA; 
    con->i2c_bus = 0; 
  
    int ret = via_connector_init(connector, &via_dac_connector_funcs, 
                DRM_MODE_CONNECTOR_VGA);
    if (ret) {
        kfree(con);
        return NULL;
    }
    
    /* Register helper functions */
    drm_connector_helper_add(connector, &via_connector_helper_funcs);
     
    return connector;
}

struct drm_connector *
via_connector_digital_init(struct drm_device *dev)
{
    struct via_connector *con;
 
    con = kzalloc(sizeof(*con), GFP_KERNEL);
    if (!con)
        return NULL;

    struct drm_connector *connector = &con->base;
    INIT_LIST_HEAD(&con->props);
    connector->connector_type = DRM_MODE_CONNECTOR_DVII;
    con->i2c_bus = 0;
  
    int ret = via_connector_init(connector, &via_dvi_connector_funcs,
                      DRM_MODE_CONNECTOR_DVII);
    if (ret) {
        kfree(con);
        return NULL;
    }
    
    /* Register helper functions */
    drm_connector_helper_add(connector, &via_connector_helper_funcs);
     
    return connector;
}

struct drm_connector *
via_connector_lvds_init(struct drm_device *dev)
{
    struct via_connector *con; 
 
    con = kzalloc(sizeof(*con), GFP_KERNEL);
    if (!con)
        return NULL;

    struct drm_connector *connector = &con->base; 
    INIT_LIST_HEAD(&con->props);
    connector->connector_type = DRM_MODE_CONNECTOR_LVDS; 
    con->i2c_bus = 0;
  
    int ret = via_connector_init(connector, &via_lvds_connector_funcs,
                      DRM_MODE_CONNECTOR_LVDS);
    if (ret) {
        kfree(con);
        return NULL;
    }
    
    /* Register helper functions */
    drm_connector_helper_add(connector, &via_connector_helper_funcs);
     
    return connector;
}

int via_connector_create(struct drm_device *dev)
{
    struct drm_connector *vga_connector;
    struct drm_connector *dvi_connector;
    struct drm_connector *lvds_connector;

    /* Initialize DAC connector */
    vga_connector = via_connector_dac_init(dev);
    if (vga_connector == NULL) {
        DRM_ERROR("Failed to create DAC connector\n");
        return -ENOMEM;
    }

    /* Initialize digital (DVI) connector */
    dvi_connector = via_connector_digital_init(dev);
    if (!dvi_connector) {
        DRM_ERROR("Failed to create digital connector\n");
        return -ENOMEM;
    }

    /* Initialize LVDS connector */
    lvds_connector = via_connector_lvds_init(dev);
    if (!lvds_connector) {
        DRM_ERROR("Failed to create LVDS connector\n");
        return -ENOMEM;
    }

    return 0;
}


[File Ends] drivers/gpu/drm/via/via_connector.c

[File Begins] drivers/gpu/drm/via/via_connector.h
/*
 * Copyright 2023 The OpenChrome Project
 * [via_connector.h]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#ifndef __VIA_CONNECTOR_H__
#define __VIA_CONNECTOR_H__

#include <drm/drm_connector.h>

/* 
 * NOTE: We don't define I2C bus identifiers here anymore.
 * Use the definitions from via_drv.h instead:
 * VIA_I2C_NONE, VIA_I2C_BUS1, VIA_I2C_BUS2, VIA_I2C_BUS3, etc.
 */

/* VGA connector functions */
extern const struct drm_connector_funcs via_dac_connector_funcs;
extern const struct drm_connector_helper_funcs via_dac_connector_helper_funcs;
extern enum drm_connector_status via_dac_detect(struct drm_connector *connector, bool force);

/* DVI connector functions */
extern const struct drm_connector_funcs via_dvi_connector_funcs;
extern const struct drm_connector_helper_funcs via_tmds_connector_helper_funcs;
extern enum drm_connector_status via_tmds_detect(struct drm_connector *connector, bool force);

/* LVDS connector functions */
extern const struct drm_connector_funcs via_lvds_connector_funcs;
extern const struct drm_connector_helper_funcs via_lvds_connector_helper_funcs;
extern enum drm_connector_status via_lvds_detect(struct drm_connector *connector, bool force);

/* HDMI connector functions (for VX900) */
extern const struct drm_connector_funcs via_hdmi_connector_funcs;
extern const struct drm_connector_helper_funcs via_hdmi_connector_helper_funcs;
extern enum drm_connector_status via_hdmi_detect(struct drm_connector *connector, bool force);

/* Connector helper functions */
void via_connector_destroy(struct drm_connector *connector);
int via_connector_init(struct drm_connector *connector,
                      const struct drm_connector_funcs *funcs,
                      int connector_type);

/* Connector initialization functions */
struct drm_connector *via_connector_dac_init(struct drm_device *dev);
struct drm_connector *via_connector_digital_init(struct drm_device *dev);
struct drm_connector *via_connector_lvds_init(struct drm_device *dev);
int via_connector_create(struct drm_device *dev);

/* Find I2C bus from port */
struct i2c_adapter *via_find_ddc_bus(int port);

#endif /* __VIA_CONNECTOR_H__ */

[File Ends] drivers/gpu/drm/via/via_connector.h

[File Begins] drivers/gpu/drm/via/via_connector_i2c.c
/*
 * Copyright 2023 The OpenChrome Project
 * [via_connector_i2c.c]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHOR(S) OR COPYRIGHT HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * Authors: Kevin Brace <kevinbrace@gmx.com>
 */

#include "via_drv.h"

/**
 * @brief Initialize the I2C bus for analog devices
 * 
 * This is a stub implementation that will be expanded later
 * 
 * @param dev_priv Driver private data
 * @param bus_index Bus index to initialize
 * @return int 0 on success
 */
int via_analog_i2c_init(struct via_drm_priv *dev_priv, int bus_index)
{
    /* Implementation details for analog I2C bus initialization */
    return 0;
}

/**
 * @brief Initialize the I2C bus for digital devices
 * 
 * This is a stub implementation that will be expanded later
 * 
 * @param dev_priv Driver private data
 * @param bus_index Bus index to initialize
 * @return int 0 on success
 */
int via_digital_i2c_init(struct via_drm_priv *dev_priv, int bus_index)
{
    /* Implementation details for digital I2C bus initialization */
    return 0;
}

/**
 * @brief Initialize the I2C bus for LVDS devices
 * 
 * This is a stub implementation that will be expanded later
 * 
 * @param dev_priv Driver private data
 * @param bus_index Bus index to initialize
 * @return int 0 on success
 */
int via_lvds_i2c_init(struct via_drm_priv *dev_priv, int bus_index)
{
    /* Implementation details for LVDS I2C bus initialization */
    return 0;
}

[File Ends] drivers/gpu/drm/via/via_connector_i2c.c

[File Begins] drivers/gpu/drm/via/via_connector_stubs.c
/*
 * Copyright 2023 The OpenChrome Project
 * [via_connector_stubs.c]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHOR(S) OR COPYRIGHT HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include "via_drv.h"

struct drm_connector *via_connector_dac_init(struct drm_device *dev)
{
    // Implementation to be added later
    return NULL;
}

struct drm_connector *via_connector_digital_init(struct drm_device *dev)
{
    // Implementation to be added later
    return NULL;
}

int via_connector_create(struct drm_device *dev)
{
    // Implementation to be added later
    return 0;
}

/**
 * @brief Initialize the I2C bus for analog devices
 * 
 * This is a stub implementation that will be expanded later
 * 
 * @param dev_priv Driver private data
 * @param bus_index Bus index to initialize
 * @return int 0 on success
 */
int via_analog_i2c_init(struct via_drm_priv *dev_priv, int bus_index)
{
    /* Stub implementation for analog I2C bus initialization */
    return 0;
}

/**
 * @brief Initialize the I2C bus for digital devices
 * 
 * This is a stub implementation that will be expanded later
 * 
 * @param dev_priv Driver private data
 * @param bus_index Bus index to initialize
 * @return int 0 on success
 */
int via_digital_i2c_init(struct via_drm_priv *dev_priv, int bus_index)
{
    /* Stub implementation for digital I2C bus initialization */
    return 0;
}

/**
 * @brief Initialize the I2C bus for LVDS devices
 * 
 * This is a stub implementation that will be expanded later
 * 
 * @param dev_priv Driver private data
 * @param bus_index Bus index to initialize
 * @return int 0 on success
 */
int via_lvds_i2c_init(struct via_drm_priv *dev_priv, int bus_index)
{
    /* Stub implementation for LVDS I2C bus initialization */
    return 0;
}

/**
 * @brief Read bytes from an I2C device
 * 
 * This is a stub implementation that will be expanded later
 * 
 * @param adapter I2C adapter to use
 * @param slave_addr Slave device address
 * @param offset Register offset to read from
 * @param buffer Buffer to store read data
 * @param size Number of bytes to read
 */
void via_i2c_readbytes(struct i2c_adapter *adapter,
                     u8 slave_addr, char offset,
                     u8 *buffer, unsigned int size)
{
    /* Stub implementation */
}

/**
 * @brief Write bytes to an I2C device
 * 
 * This is a stub implementation that will be expanded later
 * 
 * @param adapter I2C adapter to use
 * @param slave_addr Slave device address
 * @param offset Register offset to write to
 * @param data Data buffer to write
 * @param size Number of bytes to write
 */
void via_i2c_writebytes(struct i2c_adapter *adapter,
                      u8 slave_addr, char offset,
                      u8 *data, unsigned int size)
{
    /* Stub implementation */
}

[File Ends] drivers/gpu/drm/via/via_connector_stubs.c

[File Begins] drivers/gpu/drm/via/via_crtc.c
/*
 * Copyright 2016 Kevin Brace
 * Copyright 2016 The OpenChrome Project
 * [via_crtc.c]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include "via_drv.h"
#include "via_crtc_hw.h"
#include "via_disp_reg.h"
#include "via_regset.h"

#include <linux/pci_ids.h>
#include <drm/drm_atomic.h>
#include <drm/drm_atomic_helper.h>
#include <drm/drm_atomic_state_helper.h>
#include <drm/drm_crtc.h>
#include <drm/drm_crtc_helper.h>
#include <drm/drm_fb_helper.h>
#include <drm/drm_modeset_helper_vtables.h>
#include <drm/drm_plane.h>
#include <drm/drm_print.h>
#include <drm/drm_vblank.h>

/* Declare these functions as extern so they are used from the appropriate source files */
extern u32 via_get_clk_value(struct drm_device *dev, u32 clk);
extern void via_set_vclock(struct drm_crtc *crtc, u32 clk_value);

/* Implement only functions that are unique to this file */

static void via_iga_common_init(struct drm_device *dev)
{
	struct pci_dev *pdev = to_pci_dev(dev->dev);
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	/* Be careful with 3C5.15[5] - Wrap Around Disable.
	 * It must be set to 1 for proper operation. */
	/* 3C5.15[5]   - Wrap Around Disable
	 *               0: Disable (For Mode 0-13)
	 *               1: Enable
	 * 3C5.15[1]   - Extended Display Mode Enable
	 *               0: Disable
	 *               1: Enable */
	svga_wseq_mask(VGABASE, 0x15, BIT(5) | BIT(1), BIT(5) | BIT(1));

	/*
	 * It was observed on NeoWare CA10 thin client with DVI that not
	 * resetting CR55[7] to 0 causes the screen driven by IGA2 to get
	 * distorted.
	 */
	if (pdev->device == PCI_DEVICE_ID_VIA_CLE266_GFX) {
		svga_wcrt_mask(VGABASE, 0x55, 0x00, BIT(7));
	}

	/*
	 * Disable simultaneous display.
	 * Turning this on causes IGA1 to have a display issue.
	 */
	/*
	 * 3X5.6B[3]   - Simultaneous Display Enable
	 *               0: Disable
	 *               1: Enable
	 */
	svga_wcrt_mask(VGABASE, 0x6B, 0x00, BIT(3));

	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}

static void via_iga1_set_color_depth(struct drm_device *dev,
					u8 cpp, u8 depth)
{
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
	u8 data;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	data = 0x00;

	/* Set the color depth for IGA1. */
	switch (cpp) {
	case 1:
		data |= BIT(4);
		break;
	case 2:
		data = (depth == 15) ? BIT(2) : BIT(4) | BIT(2);
		break;
	case 4:
		data = (depth == 30) ? BIT(3) : BIT(3) | BIT(2);
		data |= BIT(4);
		break;
	default:
		break;
	}

	/*
	 * 3C5.15[4]   - Hi Color Mode Select
	 *               0: 555
	 *               1: 565
	 * 3C5.15[3:2] - Display Color Depth Select
	 *               00: 8bpp
	 *               01: 16bpp
	 *               10: 30bpp
	 *               11: 32bpp
	 */
	svga_wseq_mask(VGABASE, 0x15, data, BIT(4) | BIT(3) | BIT(2));

	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}

static void via_iga2_set_color_depth(struct drm_device *dev,
					u8 cpp, u8 depth)
{
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
	u8 data;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	data = 0x00;

	/* Set the color depth for IGA2. */
	switch (cpp) {
	case 1:
		break;
	case 2:
		data = BIT(6);
		break;
	case 4:
		data = (depth == 30) ? BIT(7) : BIT(7) | BIT(6);
		break;
	default:
		break;
	}

	/*
	 * 3X5.67[7:6] - Display Color Depth Select
	 *               00: 8bpp
	 *               01: 16bpp
	 *               10: 30bpp
	 *               11: 32bpp
	 */
	svga_wcrt_mask(VGABASE, 0x67, data, BIT(7) | BIT(6));

	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}

static int via_gamma_set(struct drm_crtc *crtc,
				u16 *r, u16 *g, u16 *b,
				uint32_t size,
				struct drm_modeset_acquire_ctx *ctx)
{
	struct drm_device *dev = crtc->dev;
	struct pci_dev *pdev = to_pci_dev(dev->dev);
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
	struct via_crtc *iga = container_of(crtc,
						struct via_crtc, base);
	int end = (size > 256) ? 256 : size, i;
	u8 val = 0;
	int ret = 0;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	if ((!crtc->enabled) || (!crtc->primary->fb)) {
		ret = -EINVAL;
		goto exit;
	}

	if (!iga->index) {
		/*
		 * Access IGA1's pallette LUT.
		 */
		svga_wseq_mask(VGABASE, 0x1A, 0x00, BIT(0));

		/*
		 * Is it an 8-bit color mode?
		 */
		if (crtc->primary->fb->format->cpp[0] == 1) {
			/* Change to Primary Display's LUT */
			val = vga_rseq(VGABASE, 0x1B);
			vga_wseq(VGABASE, 0x1B, val);
			val = vga_rcrt(VGABASE, 0x67);
			vga_wcrt(VGABASE, 0x67, val);

			/* Fill in IGA1's LUT */
			for (i = 0; i < end; i++) {
				/* Bit mask of palette */
				vga_w(VGABASE, VGA_PEL_MSK, 0xFF);
				vga_w(VGABASE, VGA_PEL_IW, i);
				vga_w(VGABASE, VGA_PEL_D, r[i] >> 8);
				vga_w(VGABASE, VGA_PEL_D, g[i] >> 8);
				vga_w(VGABASE, VGA_PEL_D, b[i] >> 8);
			}
			/* enable LUT */
			svga_wseq_mask(VGABASE, 0x1B, 0x00, BIT(0));
			/*
			 * Disable gamma in case it was enabled
			 * previously
			 */
			svga_wcrt_mask(VGABASE, 0x33, 0x00, BIT(7));
		} else {
			/* Enable Gamma */
			svga_wcrt_mask(VGABASE, 0x33, BIT(7), BIT(7));

			/* Fill in IGA1's gamma */
			for (i = 0; i < end; i++) {
				/* bit mask of palette */
				vga_w(VGABASE, VGA_PEL_MSK, 0xFF);
				vga_w(VGABASE, VGA_PEL_IW, i);
				vga_w(VGABASE, VGA_PEL_D, r[i] >> 8);
				vga_w(VGABASE, VGA_PEL_D, g[i] >> 8);
				vga_w(VGABASE, VGA_PEL_D, b[i] >> 8);
			}
		}
	} else {
		/*
		 * Access IGA2's pallette LUT.
		 */
		svga_wseq_mask(VGABASE, 0x1A, BIT(0), BIT(0));

		/*
		 * Is it an 8-bit color mode?
		 */
		if (crtc->primary->fb->format->cpp[0] == 1) {
			/* Enable Secondary Display Engine */
			svga_wseq_mask(VGABASE, 0x1B, BIT(7), BIT(7));
			/* Second Display Color Depth, 8bpp */
			svga_wcrt_mask(VGABASE, 0x67, 0x3F, 0x3F);

			/*
			 * Enable second display channel just in case.
			 */
			if (!(vga_rcrt(VGABASE, 0x6A) & BIT(7)))
				svga_wcrt_mask(VGABASE, 0x6A,
						BIT(7), BIT(7));

			/* Fill in IGA2's LUT */
			for (i = 0; i < end; i++) {
				/* Bit mask of palette */
				vga_w(VGABASE, VGA_PEL_MSK, 0xFF);
				vga_w(VGABASE, VGA_PEL_IW, i);
				vga_w(VGABASE, VGA_PEL_D, r[i] >> 8);
				vga_w(VGABASE, VGA_PEL_D, g[i] >> 8);
				vga_w(VGABASE, VGA_PEL_D, b[i] >> 8);
			}
			/*
			 * Disable gamma in case it was enabled
			 * previously
			 */
			svga_wcrt_mask(VGABASE, 0x6A, 0x00, BIT(1));
		} else {
			u8 reg_bits = BIT(1);

			/* Bit 1 enables gamma */
			svga_wcrt_mask(VGABASE, 0x6A, BIT(1), BIT(1));

			/* Old platforms LUT are 6 bits in size.
			 * Newer it is 8 bits. */
			switch (pdev->device) {
			case PCI_DEVICE_ID_VIA_CLE266_GFX:
			case PCI_DEVICE_ID_VIA_KM400_GFX:
			case PCI_DEVICE_ID_VIA_K8M800_GFX:
			case PCI_DEVICE_ID_VIA_PM800_GFX:
				break;

			default:
				reg_bits |= BIT(5);
				break;
			}
			svga_wcrt_mask(VGABASE, 0x6A, reg_bits,
					reg_bits);

			/*
			 * Before we fill the second LUT, we have to
			 * enable second display channel. If it's
			 * enabled before, we don't need to do that,
			 * or else the secondary display will be dark
			 * for about 1 sec and then be turned on
			 * again.
			 */
			if (!(vga_rcrt(VGABASE, 0x6A) & BIT(7)))
				svga_wcrt_mask(VGABASE, 0x6A,
						BIT(7), BIT(7));

			/* Fill in IGA2's gamma */
			for (i = 0; i < end; i++) {
				/* bit mask of palette */
				vga_w(VGABASE, VGA_PEL_MSK, 0xFF);
				vga_w(VGABASE, VGA_PEL_IW, i);
				vga_w(VGABASE, VGA_PEL_D, r[i] >> 8);
				vga_w(VGABASE, VGA_PEL_D, g[i] >> 8);
				vga_w(VGABASE, VGA_PEL_D, b[i] >> 8);
			}
		}
	}

exit:
	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
	return ret;
}

static void via_crtc_destroy(struct drm_crtc *crtc)
{
	drm_crtc_cleanup(crtc);
}

static const struct drm_crtc_funcs via_drm_crtc_funcs = {
	.reset = drm_atomic_helper_crtc_reset,
	.gamma_set = via_gamma_set,
	.set_config = drm_atomic_helper_set_config,
	.destroy = via_crtc_destroy,
	.page_flip = drm_atomic_helper_page_flip,
	.atomic_duplicate_state = drm_atomic_helper_crtc_duplicate_state,
	.atomic_destroy_state = drm_atomic_helper_crtc_destroy_state,
};

static void via_load_vpit_regs(struct via_drm_priv *dev_priv)
{
	u8 ar[] = {0x00, 0x01, 0x02, 0x03,
			0x04, 0x05, 0x06, 0x07,
			0x08, 0x09, 0x0A, 0x0B,
			0x0C, 0x0D, 0x0E, 0x0F,
			0x01, 0x00, 0x0F, 0x00};
	struct vga_registers vpit_regs;
	unsigned int i = 0;

    drm_dbg_kms(&dev_priv->dev, "Entered %s.\n", __func__);

	/* Enable changing the palette registers */
	vga_r(VGABASE, VGA_IS1_RC);
	vga_w(VGABASE, VGA_ATT_W, 0x00);

	/* Write Misc register */
	vga_w(VGABASE, VGA_MIS_W, 0xCF);

	/* Fill VPIT registers */
	vpit_regs.count = 1; /* Just use a single register for compatibility */
    
    /* Use a pre-defined register set from an existing array instead of creating a new one */
    vpit_regs.regs = iga1_hor_total; /* Use an existing compatible register set */

	load_register_tables(VGABASE, &vpit_regs);

	/* Write Attribute Controller */
	for (i = 0; i < 0x14; i++) {
		vga_r(VGABASE, VGA_IS1_RC);
		vga_w(VGABASE, VGA_ATT_W, i);
		vga_w(VGABASE, VGA_ATT_W, ar[i]);
	}

	/* Disable changing the palette registers */
	vga_r(VGABASE, VGA_IS1_RC);
	vga_w(VGABASE, VGA_ATT_W, BIT(5));

    drm_dbg_kms(&dev_priv->dev, "Exiting %s.\n", __func__);
}

static int via_iga1_display_fifo_regs(struct drm_device *dev,
					struct via_crtc *iga,
					struct drm_display_mode *mode,
					struct drm_framebuffer *fb)
{
	struct pci_dev *pdev = to_pci_dev(dev->dev);
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
	u32 reg_value;
	unsigned int fifo_max_depth = 0;
	unsigned int fifo_threshold = 0;
	unsigned int fifo_high_threshold = 0;
	unsigned int display_queue_expire_num = 0;
	bool enable_extended_display_fifo = false;
	int ret = 0;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	switch (pdev->device) {
	case PCI_DEVICE_ID_VIA_CLE266_GFX:
		if (dev_priv->revision == CLE266_REVISION_AX) {
			if (mode->hdisplay > 1024) {
				/* SR17[6:0] */
				fifo_max_depth = 96;

				/* SR16[5:0] */
				fifo_threshold = 92;

				/* SR18[5:0] */
				fifo_high_threshold = 92;

				enable_extended_display_fifo = true;
			} else {
				/* SR17[6:0] */
				fifo_max_depth = 64;

				/* SR16[5:0] */
				fifo_threshold = 32;

				/* SR18[5:0] */
				fifo_high_threshold = 56;

				enable_extended_display_fifo = false;
			}

			if (dev_priv->vram_type <= VIA_MEM_DDR200) {
				if (fb->format->depth == 24) {
					if (mode->hdisplay > 1024) {
						if (mode->vdisplay > 768) {
							/* SR22[4:0] */
							display_queue_expire_num = 16;
						} else {
							/* SR22[4:0] */
							display_queue_expire_num = 12;
						}
					} else if (mode->hdisplay > 640) {
						/* SR22[4:0] */
						display_queue_expire_num = 40;
					} else {
						/* SR22[4:0] */
						display_queue_expire_num = 124;
					}
				} else if (fb->format->depth == 16){
					if (mode->hdisplay > 1400) {
						/* SR22[4:0] */
						display_queue_expire_num = 16;
					} else {
						/* SR22[4:0] */
						display_queue_expire_num = 12;
					}
				} else {
					/* SR22[4:0] */
					display_queue_expire_num = 124;
				}
			} else {
				if (mode->hdisplay > 1280) {
					/* SR22[4:0] */
					display_queue_expire_num = 16;
				} else if (mode->hdisplay > 1024) {
					/* SR22[4:0] */
					display_queue_expire_num = 12;
				} else {
					/* SR22[4:0] */
					display_queue_expire_num = 124;
				}
			}
		/* dev_priv->revision == CLE266_REVISION_CX */
		} else {
			if (mode->vdisplay >= 1024) {
				/* SR17[6:0] */
				fifo_max_depth = 128;

				/* SR16[5:0] */
				fifo_threshold = 112;

				/* SR18[5:0] */
				fifo_high_threshold = 92;

				enable_extended_display_fifo = false;
			} else {
				/* SR17[6:0] */
				fifo_max_depth = 64;

				/* SR16[5:0] */
				fifo_threshold = 32;

				/* SR18[5:0] */
				fifo_high_threshold = 56;

				enable_extended_display_fifo = false;
			}

			if (dev_priv->vram_type <= VIA_MEM_DDR200) {
				if (mode->hdisplay > 1024) {
					if (mode->vdisplay > 768) {
						/* SR22[4:0] */
						display_queue_expire_num = 16;
					} else {
						/* SR22[4:0] */
						display_queue_expire_num = 12;
					}
				} else if (mode->hdisplay > 640) {
					/* SR22[4:0] */
					display_queue_expire_num = 40;
				} else {
					/* SR22[4:0] */
					display_queue_expire_num = 124;
				}
			} else {
				if (mode->hdisplay >= 1280) {
					/* SR22[4:0] */
					display_queue_expire_num = 16;
				} else {
					/* SR22[4:0] */
					display_queue_expire_num = 124;
				}
			}
		}
		break;

	case PCI_DEVICE_ID_VIA_KM400_GFX:
		if ((mode->hdisplay >= 1600) &&
			(dev_priv->vram_type <= VIA_MEM_DDR200)) {
			/* SR17[6:0] */
			fifo_max_depth = 58;

			/* SR16[5:0] */
			fifo_threshold = 24;

			/* SR18[5:0] */
			fifo_high_threshold = 92;
		} else {
			/* SR17[6:0] */
			fifo_max_depth = 128;

			/* SR16[5:0] */
			fifo_threshold = 112;

			/* SR18[5:0] */
			fifo_high_threshold = 92;
		}

		enable_extended_display_fifo = false;

		if (dev_priv->vram_type <= VIA_MEM_DDR200) {
			if (mode->hdisplay >= 1600) {
				/* SR22[4:0] */
				display_queue_expire_num = 16;
			} else {
				/* SR22[4:0] */
				display_queue_expire_num = 8;
			}
		} else {
			if (mode->hdisplay >= 1600) {
				/* SR22[4:0] */
				display_queue_expire_num = 40;
			} else {
				/* SR22[4:0] */
				display_queue_expire_num = 36;
			}
		}

		break;
	case PCI_DEVICE_ID_VIA_K8M800_GFX:
		/* SR17[7:0] */
		fifo_max_depth = 384;

		/* SR16[7], SR16[5:0] */
		fifo_threshold = 328;

		/* SR18[7], SR18[5:0] */
		fifo_high_threshold = 296;

		if ((fb->format->depth == 24) &&
			(mode->hdisplay >= 1400)) {
			/* SR22[4:0] */
			display_queue_expire_num = 64;
		} else {
			/* SR22[4:0] */
			display_queue_expire_num = 128;
		}

		break;
	case PCI_DEVICE_ID_VIA_PM800_GFX:
		/* SR17[7:0] */
		fifo_max_depth = 192;

		/* SR16[7], SR16[5:0] */
		fifo_threshold = 128;

		/* SR18[7], SR18[5:0] */
		fifo_high_threshold = 64;

		if ((fb->format->depth == 24) &&
			(mode->hdisplay >= 1400)) {
			/* SR22[4:0] */
			display_queue_expire_num = 64;
		} else {
			/* SR22[4:0] */
			display_queue_expire_num = 124;
		}

		break;
	case PCI_DEVICE_ID_VIA_P4M800_PRO_GFX:
		/* SR17[7:0] */
		fifo_max_depth = CN700_IGA1_FIFO_MAX_DEPTH;

		/* SR16[7], SR16[5:0] */
		fifo_threshold = CN700_IGA1_FIFO_THRESHOLD;

		/* SR18[7], SR18[5:0] */
		fifo_high_threshold = CN700_IGA1_FIFO_HIGH_THRESHOLD;

		/* SR22[4:0] */
		display_queue_expire_num = CN700_IGA1_DISPLAY_QUEUE_EXPIRE_NUM;
		break;
		/* CX700 */
	case PCI_DEVICE_ID_VIA_UNICHROME_PRO_II:
		/* SR17[7:0] */
		fifo_max_depth = CX700_IGA1_FIFO_MAX_DEPTH;

		/* SR16[7], SR16[5:0] */
		fifo_threshold = CX700_IGA1_FIFO_THRESHOLD;

		/* SR18[7], SR18[5:0] */
		fifo_high_threshold = CX700_IGA1_FIFO_HIGH_THRESHOLD;

		/* SR22[4:0] */
		display_queue_expire_num = CX700_IGA1_DISPLAY_QUEUE_EXPIRE_NUM;
		break;

		/* K8M890 */
	case PCI_DEVICE_ID_VIA_CHROME9:
		/* SR17[7:0] */
		fifo_max_depth = K8M890_IGA1_FIFO_MAX_DEPTH;

		/* SR16[7], SR16[5:0] */
		fifo_threshold = K8M890_IGA1_FIFO_THRESHOLD;

		/* SR18[7], SR18[5:0] */
		fifo_high_threshold = K8M890_IGA1_FIFO_HIGH_THRESHOLD;

		/* SR22[4:0] */
		display_queue_expire_num = K8M890_IGA1_DISPLAY_QUEUE_EXPIRE_NUM;
		break;
		/* P4M890 */
	case PCI_DEVICE_ID_VIA_P4M890_GFX:
		/* SR17[7:0] */
		fifo_max_depth = P4M890_IGA1_FIFO_MAX_DEPTH;

		/* SR16[7], SR16[5:0] */
		fifo_threshold = P4M890_IGA1_FIFO_THRESHOLD;

		/* SR18[7], SR18[5:0] */
		fifo_high_threshold = P4M890_IGA1_FIFO_HIGH_THRESHOLD;

		/* SR22[4:0] */
		display_queue_expire_num = P4M890_IGA1_DISPLAY_QUEUE_EXPIRE_NUM;
		break;
		/* P4M900 */
	case PCI_DEVICE_ID_VIA_CHROME9_HC:
		/* SR17[7:0] */
		fifo_max_depth = P4M900_IGA1_FIFO_MAX_DEPTH;

		/* SR16[7], SR16[5:0] */
		fifo_threshold = P4M900_IGA1_FIFO_THRESHOLD;

		/* SR18[7], SR18[5:0] */
		fifo_high_threshold = P4M900_IGA1_FIFO_HIGH_THRESHOLD;

		/* SR22[4:0] */
		display_queue_expire_num = P4M900_IGA1_DISPLAY_QUEUE_EXPIRE_NUM;
		break;
		/* VX800 */
	case PCI_DEVICE_ID_VIA_CHROME9_HC3:
		/* SR17[7:0] */
		fifo_max_depth = VX800_IGA1_FIFO_MAX_DEPTH;

		/* SR16[7], SR16[5:0] */
		fifo_threshold = VX800_IGA1_FIFO_THRESHOLD;

		/* SR18[7], SR18[5:0] */
		fifo_high_threshold = VX800_IGA1_FIFO_HIGH_THRESHOLD;

		/* SR22[4:0] */
		display_queue_expire_num = VX800_IGA1_DISPLAY_QUEUE_EXPIRE_NUM;
		break;
		/* VX855 */
	case PCI_DEVICE_ID_VIA_CHROME9_HCM:
		/* SR17[7:0] */
		fifo_max_depth = VX855_IGA1_FIFO_MAX_DEPTH;

		/* SR16[7], SR16[5:0] */
		fifo_threshold = VX855_IGA1_FIFO_THRESHOLD;

		/* SR18[7], SR18[5:0] */
		fifo_high_threshold = VX855_IGA1_FIFO_HIGH_THRESHOLD;

		/* SR22[4:0] */
		display_queue_expire_num = VX855_IGA1_DISPLAY_QUEUE_EXPIRE_NUM;
		break;
		/* VX900 */
	case PCI_DEVICE_ID_VIA_CHROME9_HD:
		/* SR17[7:0] */
		fifo_max_depth = VX900_IGA1_FIFO_MAX_DEPTH;

		/* SR16[7], SR16[5:0] */
		fifo_threshold = VX900_IGA1_FIFO_THRESHOLD;

		/* SR18[7], SR18[5:0] */
		fifo_high_threshold = VX900_IGA1_FIFO_HIGH_THRESHOLD;

		/* SR22[4:0] */
		display_queue_expire_num = VX900_IGA1_DISPLAY_QUEUE_EXPIRE_NUM;
		break;
	default:
		ret = -EINVAL;
		break;
	}

	if (ret) {
		goto exit;
	}

	if ((pdev->device == PCI_DEVICE_ID_VIA_CLE266_GFX) ||
		(pdev->device == PCI_DEVICE_ID_VIA_KM400_GFX) ||
		(pdev->device == PCI_DEVICE_ID_VIA_K8M800_GFX) ||
		(pdev->device == PCI_DEVICE_ID_VIA_PM800_GFX) ||
		(pdev->device == PCI_DEVICE_ID_VIA_P4M800_PRO_GFX) ||
		(pdev->device == PCI_DEVICE_ID_VIA_UNICHROME_PRO_II)) {
		/* Force PREQ to be always higher than TREQ. */
		svga_wseq_mask(VGABASE, 0x18, BIT(6), BIT(6));
	} else {
		svga_wseq_mask(VGABASE, 0x18, 0x00, BIT(6));
	}

	if ((pdev->device == PCI_DEVICE_ID_VIA_CLE266_GFX) ||
		(pdev->device == PCI_DEVICE_ID_VIA_KM400_GFX)) {
		if (enable_extended_display_fifo) {
			u32 reg_value = VIA_READ(0x0298);
			VIA_WRITE(0x0298, reg_value | 0x20000000);

			/* Turn on IGA1 extended display FIFO. */
			reg_value = VIA_READ(0x0230);
			VIA_WRITE(0x0230, reg_value | 0x00200000);

			reg_value = VIA_READ(0x0298);
			VIA_WRITE(0x0298, reg_value & (~0x20000000));
		} else {
			u32 reg_value = VIA_READ(0x0298);
			VIA_WRITE(0x0298, reg_value | 0x20000000);

			/* Turn off IGA1 extended display FIFO. */
			reg_value = VIA_READ(0x0230);
			VIA_WRITE(0x0230, reg_value & (~0x00200000));

			reg_value = VIA_READ(0x0298);
			VIA_WRITE(0x0298, reg_value & (~0x20000000));

		}
	}

	/* Set IGA1 Display FIFO Depth Select */
	reg_value = IGA1_FIFO_DEPTH_SELECT_FORMULA(fifo_max_depth);
	load_value_to_registers(VGABASE, &iga->fifo_depth, reg_value);

	/* Set Display FIFO Low Threshold Select */
	reg_value = IGA1_FIFO_LOW_THRESHOLD_SELECT_FORMULA(fifo_threshold);
	load_value_to_registers(VGABASE, &iga->threshold, reg_value);

	/* Set Display FIFO Threshold Select */
	reg_value = fifo_threshold / 4;
	load_value_to_registers(VGABASE, &iga->threshold, reg_value);

	/* Set FIFO High Threshold Select */
	reg_value = fifo_high_threshold / 4;
	load_value_to_registers(VGABASE, &iga->high_threshold, reg_value);

	/* Set Display Queue Expire Num */
	reg_value = display_queue_expire_num / 4;
	load_value_to_registers(VGABASE, &iga->display_queue, reg_value);

exit:
	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
	return ret;
}

static int via_iga2_display_fifo_regs(struct drm_device *dev,
					struct via_crtc *iga,
					struct drm_display_mode *mode,
					struct drm_framebuffer *fb)
{
	struct pci_dev *pdev = to_pci_dev(dev->dev);
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
	u32 reg_value;
	unsigned int fifo_max_depth = 0;
	unsigned int fifo_threshold = 0;
	unsigned int fifo_high_threshold = 0;
	unsigned int display_queue_expire_num = 0;
	bool enable_extended_display_fifo = false;
	int ret = 0;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	switch (pdev->device) {
	case PCI_DEVICE_ID_VIA_CLE266_GFX:
		if (dev_priv->revision == CLE266_REVISION_AX) {
			if (((dev_priv->vram_type <= VIA_MEM_DDR200) &&
				(fb->format->depth > 16) &&
				(mode->vdisplay > 768)) ||
				((dev_priv->vram_type <= VIA_MEM_DDR266) &&
				(fb->format->depth > 16) &&
				(mode->hdisplay > 1280))) {
				/* CR68[7:4] */
				fifo_max_depth = 88;

				/* CR68[3:0] */
				fifo_threshold = 44;

				enable_extended_display_fifo = true;
			} else {
				/* CR68[7:4] */
				fifo_max_depth = 56;

				/* CR68[3:0] */
				fifo_threshold = 28;

				enable_extended_display_fifo = false;
			}
		/* dev_priv->revision == CLE266_REVISION_CX */
		} else {
			if (mode->vdisplay >= 1024) {
				/* CR68[7:4] */
				fifo_max_depth = 88;

				/* CR68[3:0] */
				fifo_threshold = 44;

				enable_extended_display_fifo = false;
			} else {
				/* CR68[7:4] */
				fifo_max_depth = 56;

				/* CR68[3:0] */
				fifo_threshold = 28;

				enable_extended_display_fifo = false;
			}
		}

		break;
	case PCI_DEVICE_ID_VIA_KM400_GFX:
		if (mode->hdisplay >= 1600) {
			/* CR68[7:4] */
			fifo_max_depth = 120;

			/* CR68[3:0] */
			fifo_threshold = 44;

			enable_extended_display_fifo = true;
		} else if (((mode->hdisplay > 1024) &&
			(fb->format->depth == 24) &&
			(dev_priv->vram_type <= VIA_MEM_DDR333)) ||
			((mode->hdisplay == 1024) &&
			(fb->format->depth == 24) &&
			(dev_priv->vram_type <= VIA_MEM_DDR200))) {
			/* CR68[7:4] */
			fifo_max_depth = 104;

			/* CR68[3:0] */
			fifo_threshold = 28;

			enable_extended_display_fifo = true;
		} else if (((mode->hdisplay > 1280) &&
			(fb->format->depth == 16) &&
			(dev_priv->vram_type <= VIA_MEM_DDR333)) ||
			((mode->hdisplay == 1280) &&
			(fb->format->depth == 16) &&
			(dev_priv->vram_type <= VIA_MEM_DDR200))) {
			/* CR68[7:4] */
			fifo_max_depth = 88;

			/* CR68[3:0] */
			fifo_threshold = 44;

			enable_extended_display_fifo = true;
		} else {
			/* CR68[7:4] */
			fifo_max_depth = 56;

			/* CR68[3:0] */
			fifo_threshold = 28;

			enable_extended_display_fifo = false;
		}

		break;
	case PCI_DEVICE_ID_VIA_K8M800_GFX:
		/* CR95[7], CR94[7], CR68[7:4] */
		fifo_max_depth = 376;

		/* CR95[6:4], CR68[3:0] */
		fifo_threshold = 328;

		/* CR95[2:0], CR92[3:0] */
		fifo_high_threshold = 296;

		if ((fb->format->depth == 24) &&
			(mode->hdisplay >= 1400)) {
			/* CR94[6:0] */
			display_queue_expire_num = 64;
		} else {
			/* CR94[6:0] */
			display_queue_expire_num = 128;
		}

		break;
	case PCI_DEVICE_ID_VIA_PM800_GFX:
		/* CR95[7], CR94[7], CR68[7:4] */
		fifo_max_depth = 96;

		/* CR95[6:4], CR68[3:0] */
		fifo_threshold = 64;

		/* CR95[2:0], CR92[3:0] */
		fifo_high_threshold = 32;

		if ((fb->format->depth == 24) &&
				(mode->hdisplay >= 1400)) {
			/* CR94[6:0] */
			display_queue_expire_num = 64;
		} else {
			/* CR94[6:0] */
			display_queue_expire_num = 124;
		}

		break;
	case PCI_DEVICE_ID_VIA_P4M800_PRO_GFX:
		/* CR95[7], CR94[7], CR68[7:4] */
		fifo_max_depth = CN700_IGA2_FIFO_MAX_DEPTH;

		/* CR95[6:4], CR68[3:0] */
		fifo_threshold = CN700_IGA2_FIFO_THRESHOLD;

		/* CR95[2:0], CR92[3:0] */
		fifo_high_threshold = CN700_IGA2_FIFO_HIGH_THRESHOLD;

		/* CR94[6:0] */
		display_queue_expire_num = CN700_IGA2_DISPLAY_QUEUE_EXPIRE_NUM;
		break;
		/* CX700 */
	case PCI_DEVICE_ID_VIA_UNICHROME_PRO_II:
		/* CR95[7], CR94[7], CR68[7:4] */
		fifo_max_depth = CX700_IGA2_FIFO_MAX_DEPTH;

		/* CR95[6:4], CR68[3:0] */
		fifo_threshold = CX700_IGA2_FIFO_THRESHOLD;

		/* CR95[2:0], CR92[3:0] */
		fifo_high_threshold = CX700_IGA2_FIFO_HIGH_THRESHOLD;

		/* CR94[6:0] */
		display_queue_expire_num = CX700_IGA2_DISPLAY_QUEUE_EXPIRE_NUM;
		break;

		/* K8M890 */
	case PCI_DEVICE_ID_VIA_CHROME9:
		/* CR95[7], CR94[7], CR68[7:4] */
		fifo_max_depth = K8M890_IGA2_FIFO_MAX_DEPTH;

		/* CR95[6:4], CR68[3:0] */
		fifo_threshold = K8M890_IGA2_FIFO_THRESHOLD;

		/* CR95[2:0], CR92[3:0] */
		fifo_high_threshold = K8M890_IGA2_FIFO_HIGH_THRESHOLD;

		/* CR94[6:0] */
		display_queue_expire_num = K8M890_IGA2_DISPLAY_QUEUE_EXPIRE_NUM;
		break;
		/* P4M890 */
	case PCI_DEVICE_ID_VIA_P4M890_GFX:
		/* CR95[7], CR94[7], CR68[7:4] */
		fifo_max_depth = P4M890_IGA2_FIFO_MAX_DEPTH;

		/* CR95[6:4], CR68[3:0] */
		fifo_threshold = P4M890_IGA2_FIFO_THRESHOLD;

		/* CR95[2:0], CR92[3:0] */
		fifo_high_threshold = P4M890_IGA2_FIFO_HIGH_THRESHOLD;

		/* CR94[6:0] */
		display_queue_expire_num = P4M890_IGA2_DISPLAY_QUEUE_EXPIRE_NUM;
		break;
		/* P4M900 */
	case PCI_DEVICE_ID_VIA_CHROME9_HC:
		/* CR95[7], CR94[7], CR68[7:4] */
		fifo_max_depth = P4M900_IGA2_FIFO_MAX_DEPTH;

		/* CR95[7], CR94[7], CR68[7:4] */
		fifo_threshold = P4M900_IGA2_FIFO_THRESHOLD;

		/* CR95[2:0], CR92[3:0] */
		fifo_high_threshold = P4M900_IGA2_FIFO_HIGH_THRESHOLD;

		/* CR94[6:0] */
		display_queue_expire_num = P4M900_IGA2_DISPLAY_QUEUE_EXPIRE_NUM;
		break;
			/* VX800 */
	case PCI_DEVICE_ID_VIA_CHROME9_HC3:
		/* CR95[7], CR94[7], CR68[7:4] */
		fifo_max_depth = VX800_IGA2_FIFO_MAX_DEPTH;

		/* CR95[6:4], CR68[3:0] */
		fifo_threshold = VX800_IGA2_FIFO_THRESHOLD;

		/* CR95[2:0], CR92[3:0] */
		fifo_high_threshold = VX800_IGA2_FIFO_HIGH_THRESHOLD;

		/* CR94[6:0] */
		display_queue_expire_num = VX800_IGA2_DISPLAY_QUEUE_EXPIRE_NUM;
		break;
		/* VX855 */
	case PCI_DEVICE_ID_VIA_CHROME9_HCM:
		/* CR95[7], CR94[7], CR68[7:4] */
		fifo_max_depth = VX855_IGA2_FIFO_MAX_DEPTH;

		/* CR95[6:4], CR68[3:0] */
		fifo_threshold = VX855_IGA2_FIFO_THRESHOLD;

		/* CR95[2:0], CR92[3:0] */
		fifo_high_threshold = VX855_IGA2_FIFO_HIGH_THRESHOLD;

		/* CR94[6:0] */
		display_queue_expire_num = VX855_IGA2_DISPLAY_QUEUE_EXPIRE_NUM;
		break;
		/* VX900 */
	case PCI_DEVICE_ID_VIA_CHROME9_HD:
		/* CR95[7], CR94[7], CR68[7:4] */
		fifo_max_depth = VX900_IGA2_FIFO_MAX_DEPTH;

		/* CR95[6:4], CR68[3:0] */
		fifo_threshold = VX900_IGA2_FIFO_THRESHOLD;

		/* CR95[2:0], CR92[3:0] */
		fifo_high_threshold = VX900_IGA2_FIFO_HIGH_THRESHOLD;

        /* CR94[6:0] */
		display_queue_expire_num = VX900_IGA2_DISPLAY_QUEUE_EXPIRE_NUM;
		break;
	default:
		ret = -EINVAL;
		break;
	}

	if (ret) {
		goto exit;
	}

	if ((pdev->device == PCI_DEVICE_ID_VIA_CLE266_GFX) ||
		(pdev->device == PCI_DEVICE_ID_VIA_KM400_GFX)) {
		if (enable_extended_display_fifo) {
			/* Enable IGA2 extended display FIFO. */
			svga_wcrt_mask(VGABASE, 0x6a, BIT(5), BIT(5));
		} else {
			/* Disable IGA2 extended display FIFO. */
			svga_wcrt_mask(VGABASE, 0x6a, 0x00, BIT(5));
		}
	}

	if ((pdev->device == PCI_DEVICE_ID_VIA_CLE266_GFX) ||
		(pdev->device == PCI_DEVICE_ID_VIA_KM400_GFX)) {
		/* Set IGA2 Display FIFO Depth Select */
		reg_value = IGA2_FIFO_DEPTH_SELECT_FORMULA(fifo_max_depth);
		load_value_to_registers(VGABASE, &iga->fifo_depth, reg_value);

		/* Set Display FIFO Threshold Select */
		reg_value = fifo_threshold / 4;
		load_value_to_registers(VGABASE, &iga->threshold, reg_value);
	} else {
		/* Set IGA2 Display FIFO Depth Select */
		reg_value = IGA2_FIFO_DEPTH_SELECT_FORMULA(fifo_max_depth);
		load_value_to_registers(VGABASE, &iga->fifo_depth, reg_value);

		/* Set Display FIFO Threshold Select */
		reg_value = fifo_threshold / 4;
		load_value_to_registers(VGABASE, &iga->threshold, reg_value);

		/* Set FIFO High Threshold Select */
		reg_value = fifo_high_threshold / 4;
		load_value_to_registers(VGABASE, &iga->high_threshold, reg_value);

		/* Set Display Queue Expire Num */
		reg_value = display_queue_expire_num / 4;
		load_value_to_registers(VGABASE, &iga->display_queue, reg_value);
	}

exit:
	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
	return ret;
}

/* Load CRTC Pixel Timing registers */
void via_load_crtc_pixel_timing(struct drm_crtc *crtc,
				struct drm_display_mode *mode)
{
	struct drm_device *dev = crtc->dev;
	struct via_crtc *iga = container_of(crtc, struct via_crtc, base);
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
	u32 reg_value = 0;

    drm_dbg_kms(dev, "Entered %s.\n", __func__);

	reg_value = IGA1_PIXELTIMING_HOR_TOTAL_FORMULA(mode->crtc_htotal);
	load_value_to_registers(VGABASE, &iga->timings.htotal,
				reg_value);

	reg_value = IGA1_PIXELTIMING_HOR_ADDR_FORMULA(mode->crtc_hdisplay) << 16;
	load_value_to_registers(VGABASE, &iga->timings.hdisplay,
				reg_value);

	reg_value = IGA1_PIXELTIMING_HOR_BLANK_START_FORMULA(
					mode->crtc_hblank_start);
	load_value_to_registers(VGABASE, &iga->timings.hblank_start,
				reg_value);

	reg_value = IGA1_PIXELTIMING_HOR_BLANK_END_FORMULA(mode->crtc_hblank_end) << 16;
	load_value_to_registers(VGABASE, &iga->timings.hblank_end, reg_value);

	reg_value = IGA1_PIXELTIMING_HOR_SYNC_START_FORMULA(mode->crtc_hsync_start);
	load_value_to_registers(VGABASE, &iga->timings.hsync_start,
				reg_value);

	reg_value = IGA1_PIXELTIMING_HOR_SYNC_END_FORMULA(mode->crtc_hsync_end) << 16;
	load_value_to_registers(VGABASE, &iga->timings.hsync_end, reg_value);

	reg_value = IGA1_PIXELTIMING_VER_TOTAL_FORMULA(mode->crtc_vtotal);
	load_value_to_registers(VGABASE, &iga->timings.vtotal, reg_value);

	reg_value = IGA1_PIXELTIMING_VER_ADDR_FORMULA(mode->crtc_vdisplay) << 16;
	load_value_to_registers(VGABASE, &iga->timings.vdisplay, reg_value);

	reg_value = IGA1_PIXELTIMING_VER_BLANK_START_FORMULA(
					mode->crtc_vblank_start);
	load_value_to_registers(VGABASE, &iga->timings.vblank_start, reg_value);

	reg_value = IGA1_PIXELTIMING_VER_BLANK_END_FORMULA(mode->crtc_vblank_end) << 16;
	load_value_to_registers(VGABASE, &iga->timings.vblank_end, reg_value);

	reg_value = IGA1_PIXELTIMING_VER_SYNC_START_FORMULA(mode->crtc_vsync_start);
	load_value_to_registers(VGABASE, &iga->timings.vsync_start, reg_value);

	reg_value = IGA1_PIXELTIMING_VER_SYNC_END_FORMULA(mode->crtc_vsync_end) << 12;
	load_value_to_registers(VGABASE, &iga->timings.vsync_end, reg_value);

	if (mode->flags & DRM_MODE_FLAG_INTERLACE) {
		reg_value = IGA1_PIXELTIMING_HVSYNC_OFFSET_END_FORMULA(
				mode->crtc_htotal, mode->crtc_hsync_start);
		VIA_WRITE_MASK(IGA1_PIX_HALF_LINE_REG, reg_value,
					IGA1_PIX_HALF_LINE_MASK);

		svga_wcrt_mask(VGABASE, 0x32, BIT(2), BIT(2));
		/**
		 * According to information from HW team,
		 * we need to set 0xC280[1] = 1 (HDMI function enable)
		 * or 0xC640[0] = 1 (DP1 enable)
		 * to let the half line function work.
		 * Otherwise, the clock for interlace mode
		 * will not correct.
		 * This is a special setting for 410.
		 */
		VIA_WRITE_MASK(0xC280, BIT(1), BIT(1));
	} else {
		VIA_WRITE_MASK(IGA1_PIX_HALF_LINE_REG, 0x0, IGA1_PIX_HALF_LINE_MASK);
		svga_wcrt_mask(VGABASE, 0x32, 0x00, BIT(2));

	}
	svga_wcrt_mask(VGABASE, 0xFD, BIT(5), BIT(5));
    drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}

/* Load CRTC timing registers */
static void via_load_crtc_timing(struct via_crtc *iga, struct drm_display_mode *mode)
{
	struct drm_device *dev = iga->base.dev;
	struct pci_dev *pdev = to_pci_dev(dev->dev);
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
	u32 reg_value = 0;

    drm_dbg_kms(dev, "Entered %s.\n", __func__);

	if (!iga->index) {
		if (pdev->device == PCI_DEVICE_ID_VIA_CHROME9_HD) {
			/* Disable IGA1 shadow timing */
			svga_wcrt_mask(VGABASE, 0x45, 0x00, BIT(0));

			/* Disable IGA1 pixel timing */
			svga_wcrt_mask(VGABASE, 0xFD, 0x00, BIT(5));
		}

		reg_value = IGA1_HOR_TOTAL_FORMULA(mode->crtc_htotal);
		load_value_to_registers(VGABASE, &iga->timings.htotal, reg_value);

		reg_value = IGA1_HOR_ADDR_FORMULA(mode->crtc_hdisplay);
		load_value_to_registers(VGABASE, &iga->timings.hdisplay, reg_value);

		reg_value = IGA1_HOR_BLANK_START_FORMULA(mode->crtc_hblank_start);
		load_value_to_registers(VGABASE, &iga->timings.hblank_start, reg_value);

		reg_value = IGA1_HOR_BLANK_END_FORMULA(mode->crtc_hblank_end);
		load_value_to_registers(VGABASE, &iga->timings.hblank_end, reg_value);

		reg_value = IGA1_HOR_SYNC_START_FORMULA(mode->crtc_hsync_start);
		load_value_to_registers(VGABASE, &iga->timings.hsync_start, reg_value);

		reg_value = IGA1_HOR_SYNC_END_FORMULA(mode->crtc_hsync_end);
		load_value_to_registers(VGABASE, &iga->timings.hsync_end, reg_value);

		reg_value = IGA1_VER_TOTAL_FORMULA(mode->crtc_vtotal);
		load_value_to_registers(VGABASE, &iga->timings.vtotal, reg_value);

		reg_value = IGA1_VER_ADDR_FORMULA(mode->crtc_vdisplay);
		load_value_to_registers(VGABASE, &iga->timings.vdisplay, reg_value);

		reg_value = IGA1_VER_BLANK_START_FORMULA(mode->crtc_vblank_start);
		load_value_to_registers(VGABASE, &iga->timings.vblank_start, reg_value);

		reg_value = IGA1_VER_BLANK_END_FORMULA(mode->crtc_vblank_end);
		load_value_to_registers(VGABASE, &iga->timings.vblank_end, reg_value);

		reg_value = IGA1_VER_SYNC_START_FORMULA(mode->crtc_vsync_start);
		load_value_to_registers(VGABASE, &iga->timings.vsync_start, reg_value);

		reg_value = IGA1_VER_SYNC_END_FORMULA(mode->crtc_vsync_end);
		load_value_to_registers(VGABASE, &iga->timings.vsync_end, reg_value);
	} else {
		reg_value = IGA2_HOR_TOTAL_FORMULA(mode->crtc_htotal);
		load_value_to_registers(VGABASE, &iga->timings.htotal, reg_value);

		reg_value = IGA2_HOR_ADDR_FORMULA(mode->crtc_hdisplay);
		load_value_to_registers(VGABASE, &iga->timings.hdisplay, reg_value);

		reg_value = IGA2_HOR_BLANK_START_FORMULA(mode->crtc_hblank_start);
		load_value_to_registers(VGABASE, &iga->timings.hblank_start, reg_value);

		reg_value = IGA2_HOR_BLANK_END_FORMULA(mode->crtc_hblank_end);
		load_value_to_registers(VGABASE, &iga->timings.hblank_end, reg_value);

		reg_value = IGA2_HOR_SYNC_START_FORMULA(mode->crtc_hsync_start);
		load_value_to_registers(VGABASE, &iga->timings.hsync_start, reg_value);

		reg_value = IGA2_HOR_SYNC_END_FORMULA(mode->crtc_hsync_end);
		load_value_to_registers(VGABASE, &iga->timings.hsync_end, reg_value);

		reg_value = IGA2_VER_TOTAL_FORMULA(mode->crtc_vtotal);
		load_value_to_registers(VGABASE, &iga->timings.vtotal, reg_value);

		reg_value = IGA2_VER_ADDR_FORMULA(mode->crtc_vdisplay);
		load_value_to_registers(VGABASE, &iga->timings.vdisplay, reg_value);

		reg_value = IGA2_VER_BLANK_START_FORMULA(mode->crtc_vblank_start);
		load_value_to_registers(VGABASE, &iga->timings.vblank_start, reg_value);

		reg_value = IGA2_VER_BLANK_END_FORMULA(mode->crtc_vblank_end);
		load_value_to_registers(VGABASE, &iga->timings.vblank_end, reg_value);

		reg_value = IGA2_VER_SYNC_START_FORMULA(mode->crtc_vsync_start);
		load_value_to_registers(VGABASE, &iga->timings.vsync_start, reg_value);

		reg_value = IGA2_VER_SYNC_END_FORMULA(mode->crtc_vsync_end);
		load_value_to_registers(VGABASE, &iga->timings.vsync_end, reg_value);
	}
    drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}

/*
 * This function changes the destination of scaling up/down
 * and CRTC timing registers
 * crtc : which IGA
 * scale_type : upscaling(VIA_EXPAND) or downscaling(VIA_SHRINK)
 */
static void via_set_scale_path(struct drm_crtc *crtc, u32 scale_type)
{
	struct via_crtc *iga = container_of(crtc, struct via_crtc, base);
	struct drm_device *dev = crtc->dev;
	struct pci_dev *pdev = to_pci_dev(dev->dev);
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
	u8 reg_cr_fd = vga_rcrt(VGABASE, 0xFD);

    drm_dbg_kms(dev, "Entered %s.\n", __func__);

	if (!iga->index)
		/* register reuse: select IGA1 path */
		reg_cr_fd |= BIT(7);
	else
		/* register reuse: select IGA2 path */
		reg_cr_fd &= ~BIT(7);

	/* only IGA1 up scaling need to clear this bit CRFD.5. */
	if (pdev->device == PCI_DEVICE_ID_VIA_CHROME9_HD) {
		if (!iga->index && ((VIA_HOR_EXPAND & scale_type) || (VIA_VER_EXPAND & scale_type)))
			reg_cr_fd &= ~BIT(5);
	}

	/* CRFD.0 = 0 : common IGA2, = 1 : downscaling IGA */
	switch (scale_type) {
	case VIA_NO_SCALING:
	case VIA_EXPAND:
	case VIA_HOR_EXPAND:
	case VIA_VER_EXPAND:
		/* register reuse: as common IGA2 */
		reg_cr_fd &= ~BIT(0);
		break;

	case VIA_SHRINK:
		/* register reuse: as downscaling IGA */
		reg_cr_fd |= BIT(0);
		break;

	default:
		break;
	}
	vga_wcrt(VGABASE, 0xFD, reg_cr_fd);
    drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}

/* disable IGA scaling */
static void via_disable_iga_scaling(struct drm_crtc *crtc)
{
	struct via_crtc *iga = container_of(crtc, struct via_crtc, base);
	struct drm_device *dev = crtc->dev;
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);

    drm_dbg_kms(dev, "Entered %s.\n", __func__);

	if (iga->index) {
		/* IGA2 scalings disable */
		via_set_scale_path(crtc, VIA_SHRINK);
		/* disable IGA down scaling and buffer sharing. */
		svga_wcrt_mask(VGABASE, 0x89, 0x00, BIT(7) | BIT(0));
		/* Horizontal and Vertical scaling disable */
		svga_wcrt_mask(VGABASE, 0xA2, 0x00, BIT(7) | BIT(3));

		/* Disable scale up as well */
		via_set_scale_path(crtc, VIA_EXPAND);
		/* disable IGA up scaling */
		svga_wcrt_mask(VGABASE, 0x79, 0, BIT(0));
		/* Horizontal and Vertical scaling disable */
		svga_wcrt_mask(VGABASE, 0xA2, 0x00, BIT(7) | BIT(3));
	} else {
		/* IGA1 scalings disable */
		via_set_scale_path(crtc, VIA_SHRINK);
		/* disable IGA down scaling and buffer sharing. */
		svga_wcrt_mask(VGABASE, 0x89, 0x00, BIT(7) | BIT(0));
		/* Horizontal and Vertical scaling disable */
		svga_wcrt_mask(VGABASE, 0xA2, 0x00, BIT(7) | BIT(3));

		/* Disable scale up as well */
		via_set_scale_path(crtc, VIA_EXPAND);
		/* disable IGA up scaling */
		svga_wcrt_mask(VGABASE, 0x79, 0, BIT(0));
		/* Horizontal and Vertical scaling disable */
		svga_wcrt_mask(VGABASE, 0xA2, 0x00, BIT(7) | BIT(3));
	}
    drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}

/*
 * Enable IGA scale functions.
 *
 * input : iga_path =	IGA1 or IGA2 or
 *			IGA1+IGA2
 *
 * scale_type	=	VIA_HOR_EXPAND or VIA_VER_EXPAND or VIA_EXPAND or
 *			VIA_SHRINK or VIA_SHRINK + VIA_EXPAND
 */
static bool via_set_iga_scale_function(struct drm_crtc *crtc, u32 scale_type)
{
	struct via_crtc *iga = container_of(crtc, struct via_crtc, base);
	struct drm_device *dev = crtc->dev;
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);

    drm_dbg_kms(dev, "Entered %s.\n", __func__);

	if (!(scale_type & (VIA_SHRINK + VIA_EXPAND)))
		return false;

	if (iga->index) {
		/* IGA2 scalings enable */
		if (VIA_SHRINK & scale_type) {
			via_set_scale_path(crtc, VIA_SHRINK);
			/* Horizontal and Vertical scaling enable */
			svga_wcrt_mask(VGABASE, 0xA2, BIT(7) | BIT(3), BIT(7) | BIT(3));
			/* enable IGA down scaling */
			svga_wcrt_mask(VGABASE, 0x89, BIT(0), BIT(0));
			/* hor and ver scaling : Interpolation */
			svga_wcrt_mask(VGABASE, 0x79, BIT(2) | BIT(1), BIT(2) | BIT(1));
		}

		if (VIA_EXPAND & scale_type) {
			via_set_scale_path(crtc, VIA_EXPAND);
			/* enable IGA up scaling */
			svga_wcrt_mask(VGABASE, 0x79, BIT(0), BIT(0));
		}

		if ((VIA_EXPAND & scale_type) == VIA_EXPAND) {
			/* Horizontal and Vertical scaling enable */
			svga_wcrt_mask(VGABASE, 0xA2, BIT(7) | BIT(3), BIT(7) | BIT(3));
			/* hor and ver scaling : Interpolation */
			svga_wcrt_mask(VGABASE, 0x79, BIT(2) | BIT(1), BIT(2) | BIT(1));
		} else if (VIA_HOR_EXPAND & scale_type) {
			/* Horizontal scaling disable */
			svga_wcrt_mask(VGABASE, 0xA2, BIT(7), BIT(7));
			/* hor scaling : Interpolation */
			svga_wcrt_mask(VGABASE, 0x79, BIT(1), BIT(1));
		} else if (VIA_VER_EXPAND & scale_type) {
			/* Vertical scaling disable */
			svga_wcrt_mask(VGABASE, 0xA2, BIT(3), BIT(3));
			/* ver scaling : Interpolation */
			svga_wcrt_mask(VGABASE, 0x79, BIT(2), BIT(2));
		}
	} else {
		/* IGA1 scalings enable */
		if (VIA_SHRINK & scale_type) {
			via_set_scale_path(crtc, VIA_SHRINK);

			/* Horizontal and Vertical scaling enable */
			svga_wcrt_mask(VGABASE, 0xA2, BIT(7) | BIT(3), BIT(7) | BIT(3));
			/* enable IGA down scaling */
			svga_wcrt_mask(VGABASE, 0x89, BIT(0), BIT(0));
			/* hor and ver scaling : Interpolation */
			svga_wcrt_mask(VGABASE, 0x79, BIT(2) | BIT(1), BIT(2) | BIT(1));
		}

		if (VIA_EXPAND & scale_type) {
			via_set_scale_path(crtc, VIA_EXPAND);
			/* enable IGA up scaling */
			svga_wcrt_mask(VGABASE, 0x79, BIT(0), BIT(0));
		}

		if ((VIA_EXPAND & scale_type) == VIA_EXPAND) {
			/* Horizontal and Vertical scaling enable */
			svga_wcrt_mask(VGABASE, 0xA2, BIT(7) | BIT(3), BIT(7) | BIT(3));
			/* hor and ver scaling : Interpolation */
			svga_wcrt_mask(VGABASE, 0x79, BIT(2) | BIT(1), BIT(2) | BIT(1));
		} else if (VIA_HOR_EXPAND & scale_type) {
			/* Horizontal scaling disable */
			svga_wcrt_mask(VGABASE, 0xA2, BIT(7), BIT(7));
			/* hor scaling : Interpolation */
			svga_wcrt_mask(VGABASE, 0x79, BIT(1), BIT(1));
		} else if (VIA_VER_EXPAND & scale_type) {
			/* Vertical scaling disable */
			svga_wcrt_mask(VGABASE, 0xA2, BIT(3), BIT(3));
			/* ver scaling : Interpolation */
			svga_wcrt_mask(VGABASE, 0x79, BIT(2), BIT(2));
		}
	}

    drm_dbg_kms(dev, "Exiting %s.\n", __func__);
	return true;
}

/*
 * 1. get scale factors from source and dest H & V size
 * 2. load scale factors into registers
 * 3. enable H or V scale ( set CRA2 bit7 or bit3 )
 */
static bool via_load_iga_scale_factor_regs(struct via_drm_priv *dev_priv,
					struct drm_display_mode *mode,
					struct drm_display_mode *adjusted_mode,
					u32 scale_type, u32 is_hor_or_ver)
{
	u32 dst_hor_regs = adjusted_mode->crtc_hdisplay;
	u32 dst_ver_regs = adjusted_mode->crtc_vdisplay;
	u32 src_hor_regs = mode->crtc_hdisplay;
	u32 src_ver_regs = mode->crtc_vdisplay;
	u32 hor_factor = 0, ver_factor = 0;
	struct vga_registers reg;
    struct drm_device *dev = &dev_priv->dev;

    drm_dbg_kms(dev, "Entered %s.\n", __func__);

	if ((0 == src_hor_regs) || (0 == src_ver_regs) || (0 == dst_hor_regs)
			|| (0 == dst_ver_regs))
		return false;

	if (VIA_EXPAND == scale_type) {
		if (HOR_SCALE & is_hor_or_ver) {
			hor_factor = ((src_hor_regs - 1) * 4096) / (dst_hor_regs - 1);
			reg.count = VIA_LCD_HOR_SCALING_SIZE; /* Use defined size instead of ARRAY_SIZE */
			reg.regs = lcd_hor_scaling;
			load_value_to_registers(VGABASE, &reg, hor_factor);
			/* Horizontal scaling enable */
			svga_wcrt_mask(VGABASE, 0xA2, BIT(7), BIT(7));
		}

		if (VER_SCALE & is_hor_or_ver) {
			ver_factor = ((src_ver_regs - 1) * 2048) / (dst_ver_regs - 1);
			reg.count = VIA_LCD_VER_SCALING_SIZE; /* Use defined size instead of ARRAY_SIZE */
			reg.regs = lcd_ver_scaling;
			load_value_to_registers(VGABASE, &reg, ver_factor);
			/* Vertical scaling enable */
			svga_wcrt_mask(VGABASE, 0xA2, BIT(3), BIT(3));
		}

	} else if (VIA_SHRINK == scale_type) {

		if (src_hor_regs > dst_hor_regs)
			hor_factor = ((src_hor_regs - dst_hor_regs) * 4096) / dst_hor_regs;

		if (src_ver_regs > dst_ver_regs)
			ver_factor = ((src_ver_regs - dst_ver_regs) * 2048) / dst_ver_regs;

		reg.count = VIA_LCD_HOR_SCALING_SIZE; /* Use defined size instead of ARRAY_SIZE */
		reg.regs = lcd_hor_scaling;
		load_value_to_registers(VGABASE, &reg, hor_factor);

		reg.count = VIA_LCD_VER_SCALING_SIZE; /* Use defined size instead of ARRAY_SIZE */
		reg.regs = lcd_ver_scaling;
		load_value_to_registers(VGABASE, &reg, ver_factor);

		/* set buffer sharing enable bit . */
		if (hor_factor || ver_factor) {
			if (dst_hor_regs > 1024)
				svga_wcrt_mask(VGABASE, 0x89, BIT(7), BIT(7));
			else
				svga_wcrt_mask(VGABASE, 0x89, 0x00, BIT(7));
		}

		if (hor_factor)
			/* CRA2[7]:1 Enable Hor scaling
			   CRA2[6]:1 Linear Mode */
			svga_wcrt_mask(VGABASE, 0xA2, BIT(7) | BIT(6), BIT(7) | BIT(6));
		else
			svga_wcrt_mask(VGABASE, 0xA2, 0, BIT(7));

		if (ver_factor)
			svga_wcrt_mask(VGABASE, 0xA2, BIT(3), BIT(3));
		else
			svga_wcrt_mask(VGABASE, 0xA2, 0, BIT(3));
	}
    drm_dbg_kms(dev, "Exiting %s.\n", __func__);
	return true;
}

static void via_set_iga2_downscale_source_timing(struct drm_crtc *crtc,
				struct drm_display_mode *mode,
				struct drm_display_mode *adjusted_mode)
{
	unsigned int viewx = adjusted_mode->hdisplay,
			viewy = adjusted_mode->vdisplay;
	unsigned int srcx = mode->crtc_hdisplay, srcy = mode->crtc_vdisplay;
	struct via_crtc *iga = container_of(crtc, struct via_crtc, base);
	struct drm_display_mode *src_timing;
    struct drm_device *dev = crtc->dev;

    drm_dbg_kms(dev, "Entered %s.\n", __func__);

	src_timing = drm_mode_duplicate(crtc->dev, adjusted_mode);
	/* derived source timing */
	if (srcx <= viewx) {
		src_timing->crtc_htotal = adjusted_mode->crtc_htotal;
		src_timing->crtc_hdisplay = adjusted_mode->crtc_hdisplay;
	} else {
		unsigned int htotal = adjusted_mode->crtc_htotal -
					adjusted_mode->crtc_hdisplay;

		src_timing->crtc_htotal = htotal + srcx;
		src_timing->crtc_hdisplay = srcx;
	}
	src_timing->crtc_hblank_start = src_timing->crtc_hdisplay;
	src_timing->crtc_hblank_end = src_timing->crtc_htotal;
	src_timing->crtc_hsync_start = src_timing->crtc_hdisplay + 2;
	src_timing->crtc_hsync_end = src_timing->crtc_hsync_start + 1;

	if (srcy <= viewy) {
		src_timing->crtc_vtotal = adjusted_mode->crtc_vtotal;
		src_timing->crtc_vdisplay = adjusted_mode->crtc_vdisplay;
	} else {
		unsigned int vtotal = adjusted_mode->crtc_vtotal -
					adjusted_mode->crtc_vdisplay;

		src_timing->crtc_vtotal = vtotal + srcy;
		src_timing->crtc_vdisplay = srcy;
	}
	src_timing->crtc_vblank_start = src_timing->crtc_vdisplay;
	src_timing->crtc_vblank_end = src_timing->crtc_vtotal;
	src_timing->crtc_vsync_start = src_timing->crtc_vdisplay + 2;
	src_timing->crtc_vsync_end = src_timing->crtc_vsync_start + 1;

	via_set_scale_path(crtc, VIA_NO_SCALING);
	/* load src timing */
	via_load_crtc_timing(iga, src_timing);

	/* Cleanup up source timings */
	drm_mode_destroy(crtc->dev, src_timing);
    drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}

static void via_mode_set_nofb(struct drm_crtc *crtc)
{
	struct drm_device *dev = crtc->dev;
	struct pci_dev *pdev = to_pci_dev(dev->dev);
	struct drm_display_mode *mode = &crtc->state->mode;
	struct drm_display_mode *adjusted_mode =
					&crtc->state->adjusted_mode;
	struct via_crtc *iga = container_of(crtc,
						struct via_crtc, base);
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
	u8 reg_value = 0;
	int ret;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	/* Load standard registers */
	via_load_vpit_regs(dev_priv);

	/*
	 * For VX855 and VX900 chipsets, CRTC unlock register is
	 * CR47[4].  For all others, CR47[0].
	 */
	if ((pdev->device == PCI_DEVICE_ID_VIA_CHROME9_HCM) ||
		(pdev->device == PCI_DEVICE_ID_VIA_CHROME9_HD)) {
		reg_value = BIT(4);
	} else {
		reg_value = BIT(0);
	}

	/* Unlock CRTC registers. */
	svga_wcrt_mask(VGABASE, 0x11, 0x00, BIT(7));
	svga_wcrt_mask(VGABASE, 0x47, 0x00, reg_value);

	if (!iga->index) {
		/* IGA1 reset */
		vga_wcrt(VGABASE, 0x09, 0x00); /* initial CR09=0 */
		svga_wcrt_mask(VGABASE, 0x11, 0x00, BIT(6));

		/* disable IGA scales first */
		via_disable_iga_scaling(crtc);

		/*
		 * when not down scaling, we only need load one
		 * timing.
		 */
		via_load_crtc_timing(iga, adjusted_mode);

		switch (adjusted_mode->crtc_htotal % 8) {
		case 0:
		default:
			break;
		case 2:
			reg_value = BIT(7);
			break;
		case 4:
			reg_value = BIT(6);
			break;
		case 6:
			reg_value = BIT(3);
			break;
		}

		svga_wcrt_mask(VGABASE, 0x47,
				reg_value, BIT(7) | BIT(6) | BIT(3));
	} else {
		/* disable IGA scales first */
		via_disable_iga_scaling(crtc);

		/* Load crtc timing and IGA scaling */
		if (iga->scaling_mode & VIA_SHRINK) {
			/*
			 * enable IGA2 down scaling and set
			 * Interpolation
			 */
			via_set_iga_scale_function(crtc, VIA_SHRINK);

			/* load hor and ver downscaling factor */
			via_load_iga_scale_factor_regs(dev_priv,
							mode,
							adjusted_mode,
							VIA_SHRINK,
							HOR_VER_SCALE);
			/* load src timing to timing registers */
			via_set_iga2_downscale_source_timing(crtc,
							mode,
							adjusted_mode);

			/* Download dst timing */
			via_set_scale_path(crtc, VIA_SHRINK);
			via_load_crtc_timing(iga, adjusted_mode);
			/*
			 * very necessary to set IGA to none scaling
			 * status need to fix why so need.
			 */
			via_set_scale_path(crtc, VIA_NO_SCALING);
		} else {
			/*
			 * when not down scaling, we only need load
			 * one timing.
			 */
			via_load_crtc_timing(iga, adjusted_mode);

			/* II. up scaling */
			if (iga->scaling_mode & VIA_EXPAND) {
				/* Horizontal scaling */
				if (iga->scaling_mode &
					VIA_HOR_EXPAND) {
					via_set_iga_scale_function(
						crtc,
						VIA_HOR_EXPAND);
					via_load_iga_scale_factor_regs(
							dev_priv,
							mode,
							adjusted_mode,
							VIA_EXPAND,
							HOR_SCALE);
				}

				/* Vertical scaling */
				if (iga->scaling_mode &
					VIA_VER_EXPAND) {
					via_set_iga_scale_function(
							crtc,
							VIA_VER_EXPAND);
					via_load_iga_scale_factor_regs(
							dev_priv,
							mode,
							adjusted_mode,
							VIA_EXPAND,
							VER_SCALE);
				}
			}
		}
	}

	if (!iga->index) {
		/* Set non-interlace / interlace mode. */
		via_iga1_set_interlace_mode(VGABASE,
					adjusted_mode->flags &
					DRM_MODE_FLAG_INTERLACE);

		/* No HSYNC shift. */
		via_iga1_set_hsync_shift(VGABASE, 0x05);

		/* Load display FIFO. */
		ret = via_iga1_display_fifo_regs(dev, iga, adjusted_mode,
							crtc->primary->fb);
		if (ret) {
			goto exit;
		}

		/* Set PLL */
		if (adjusted_mode->clock) {
			u32 clock = adjusted_mode->clock * 1000;
			u32 pll_regs;

			if (iga->scaling_mode & VIA_SHRINK)
				clock *= 2;
			pll_regs = via_get_clk_value(crtc->dev, clock);
			via_set_vclock(crtc, pll_regs);
		}

		via_iga_common_init(dev);

		/* Set palette LUT to 8-bit mode. */
		via_iga1_set_palette_lut_resolution(VGABASE, true);
	} else {
		/* Set non-interlace / interlace mode. */
		via_iga2_set_interlace_mode(VGABASE,
					adjusted_mode->flags &
					DRM_MODE_FLAG_INTERLACE);

		/* Load display FIFO. */
		ret = via_iga2_display_fifo_regs(dev, iga, adjusted_mode,
							crtc->primary->fb);
		if (ret) {
			goto exit;
		}

		/* Set PLL */
		if (adjusted_mode->clock) {
			u32 clock = adjusted_mode->clock * 1000;
			u32 pll_regs;

			if (iga->scaling_mode & VIA_SHRINK)
				clock *= 2;
			pll_regs = via_get_clk_value(crtc->dev, clock);
			via_set_vclock(crtc, pll_regs);
		}

		via_iga_common_init(dev);

		/* Set palette LUT to 8-bit mode. */
		via_iga2_set_palette_lut_resolution(VGABASE, true);

		svga_wcrt_mask(VGABASE, 0x6A, BIT(7), BIT(7));
	}
exit:
	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}

static void via_crtc_helper_atomic_enable(struct drm_crtc *crtc,
					struct drm_atomic_state *state)
{
	struct drm_device *dev = crtc->dev;
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
	struct via_crtc *iga = container_of(crtc,
						struct via_crtc, base);

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	if (!iga->index) {
		svga_wseq_mask(VGABASE, 0x01, 0x00, BIT(5));
	} else {
		svga_wcrt_mask(VGABASE, 0x6B, 0x00, BIT(2));
	}

	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}

static void via_crtc_helper_atomic_disable(struct drm_crtc *crtc,
					struct drm_atomic_state *state)
{
	struct drm_device *dev = crtc->dev;
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
	struct via_crtc *iga = container_of(crtc,
						struct via_crtc, base);

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	if (!iga->index) {
		svga_wseq_mask(VGABASE, 0x01, BIT(5), BIT(5));
	} else {
		svga_wcrt_mask(VGABASE, 0x6B, BIT(2), BIT(2));
	}

	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}

static const struct drm_crtc_helper_funcs via_drm_crtc_helper_funcs = {
	.mode_set_nofb = via_mode_set_nofb,
	.atomic_enable = via_crtc_helper_atomic_enable,
	.atomic_disable = via_crtc_helper_atomic_disable,
};

static int via_primary_atomic_check(struct drm_plane *plane,
					struct drm_atomic_state *state)
{
	struct drm_plane_state *new_plane_state =
			drm_atomic_get_new_plane_state(state, plane);
	struct drm_crtc_state *new_crtc_state;
	struct drm_device *dev = plane->dev;
	struct drm_framebuffer *fb = new_plane_state->fb;
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
	uint32_t frame_buffer_size;
	int ret = 0;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	if ((!new_plane_state->crtc) || (!new_plane_state->visible)) {
		goto exit;
	}

	frame_buffer_size = (fb->width * fb->format->cpp[0]) *
				fb->height;
	if (frame_buffer_size > dev_priv->vram_size) {
		ret = -ENOMEM;
		goto exit;
	}

	if ((fb->width > dev->mode_config.max_width) ||
		(fb->width < dev->mode_config.min_width)) {
		ret = -EINVAL;
		goto exit;
	}

	new_crtc_state = drm_atomic_get_new_crtc_state(state,
						new_plane_state->crtc);
	ret = drm_atomic_helper_check_plane_state(
					new_plane_state,
					new_crtc_state,
					DRM_PLANE_NO_SCALING,
					DRM_PLANE_NO_SCALING,
					false, true);
exit:
	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
	return ret;
}

static void via_primary_atomic_disable(struct drm_plane *plane,
					struct drm_atomic_state *state)
{
	struct drm_device *dev = plane->dev;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
	return;
}

static void via_primary_atomic_update(struct drm_plane *plane,
					struct drm_atomic_state *state)
{
	struct drm_plane_state *new_state =
			drm_atomic_get_new_plane_state(state, plane);
	struct drm_crtc *crtc = new_state->crtc;
	struct drm_framebuffer *fb = new_state->fb;
	uint32_t pitch = (new_state->crtc_y * fb->pitches[0]) +
			(new_state->crtc_x * fb->format->cpp[0]);
	uint32_t addr;
	struct via_crtc *iga = container_of(crtc, struct via_crtc, base);
	struct drm_device *dev = crtc->dev;
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
	struct drm_gem_object *gem;
	struct ttm_buffer_object *ttm_bo;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	gem = new_state->fb->obj[0];
	ttm_bo = container_of(gem, struct ttm_buffer_object, base);

	if (!iga->index) {
		via_iga1_set_color_depth(dev,
						fb->format->cpp[0],
						fb->format->depth);

		/* Set the framebuffer offset */
		addr = round_up((ttm_bo->resource->start << PAGE_SHIFT) +
				pitch, 16) >> 1;

		vga_wcrt(VGABASE, 0x0D, addr & 0xFF);
		vga_wcrt(VGABASE, 0x0C, (addr >> 8) & 0xFF);
		/* Yes order of setting these registers matters on some hardware */
		svga_wcrt_mask(VGABASE, 0x48, ((addr >> 24) & 0x1F), 0x1F);
		vga_wcrt(VGABASE, 0x34, (addr >> 16) & 0xFF);

		/* Load fetch count registers */
		pitch = ALIGN(crtc->mode.hdisplay * fb->format->cpp[0],	16);
		load_value_to_registers(VGABASE, &iga->fetch, pitch >> 4);

		/* Set the primary pitch */
		pitch = ALIGN(fb->pitches[0], 16);
		/* Spec does not say that first adapter skips 3 bits but old
		 * code did it and seems to be reasonable in analogy to
		 * second adapter */
		load_value_to_registers(VGABASE, &iga->offset, pitch >> 3);
	} else {
		via_iga2_set_color_depth(dev,
						fb->format->cpp[0],
						fb->format->depth);

		/* Set the framebuffer offset */
		addr = round_up((ttm_bo->resource->start << PAGE_SHIFT) +
				pitch, 16);
		/* Bits 9 to 3 of the frame buffer go into bits 7 to 1
		 * of the register. Bit 0 is for setting tile mode or
		 * linear mode. A value of zero sets it to linear mode */
		vga_wcrt(VGABASE, 0x62, ((addr >> 3) & 0x7F) << 1);
		vga_wcrt(VGABASE, 0x63, (addr >> 10) & 0xFF);
		vga_wcrt(VGABASE, 0x64, (addr >> 18) & 0xFF);
		svga_wcrt_mask(VGABASE, 0xA3, ((addr >> 26) & 0x07), 0x07);

		/* Load fetch count registers */
		pitch = ALIGN(crtc->mode.hdisplay * fb->format->cpp[0], 16);
		load_value_to_registers(VGABASE, &iga->fetch, pitch >> 4);

		/* Set secondary pitch */
		pitch = ALIGN(fb->pitches[0], 16);
		load_value_to_registers(VGABASE, &iga->offset, pitch >> 3);
	}

	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}

static int via_primary_prepare_fb(struct drm_plane *plane,
				struct drm_plane_state *new_state)
{
	struct drm_device *dev = plane->dev;
	struct drm_gem_object *gem;
	struct ttm_buffer_object *ttm_bo;
	struct via_bo *bo;
	int ret = 0;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	if (!new_state->fb) {
		goto exit;
	}

	gem = new_state->fb->obj[0];
	ttm_bo = container_of(gem, struct ttm_buffer_object, base);
	bo = to_via_bo(ttm_bo);

	ret = ttm_bo_reserve(ttm_bo, true, false, NULL);
	if (ret) {
		goto exit;
	}

	ret = via_bo_pin(bo, TTM_PL_VRAM);
	ttm_bo_unreserve(ttm_bo);
exit:
	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
	return ret;
}

static void via_primary_cleanup_fb(struct drm_plane *plane,
				struct drm_plane_state *old_state)
{
	struct drm_device *dev = plane->dev;
	struct drm_gem_object *gem;
	struct ttm_buffer_object *ttm_bo;
	struct via_bo *bo;
	int ret;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	if (!old_state->fb) {
		goto exit;
	}

	gem = old_state->fb->obj[0];
	ttm_bo = container_of(gem, struct ttm_buffer_object, base);
	bo = to_via_bo(ttm_bo);

	ret = ttm_bo_reserve(ttm_bo, true, false, NULL);
	if (ret) {
		goto exit;
	}

	via_bo_unpin(bo);
	ttm_bo_unreserve(ttm_bo);
exit:
	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}

static const struct drm_plane_helper_funcs
via_primary_drm_plane_helper_funcs = {
	.prepare_fb = via_primary_prepare_fb,
	.cleanup_fb = via_primary_cleanup_fb,
	.atomic_check = via_primary_atomic_check,
	.atomic_update = via_primary_atomic_update,
	.atomic_disable = via_primary_atomic_disable,
};

static const struct drm_plane_funcs via_primary_drm_plane_funcs = {
	.update_plane	= drm_atomic_helper_update_plane,
	.disable_plane = drm_atomic_helper_disable_plane,
	.destroy = drm_plane_cleanup,
	.reset = drm_atomic_helper_plane_reset,
	.atomic_duplicate_state =
			drm_atomic_helper_plane_duplicate_state,
	.atomic_destroy_state =
			drm_atomic_helper_plane_destroy_state,
};

static void via_crtc_param_init(struct via_drm_priv *dev_priv,
					struct drm_crtc *crtc,
					uint32_t index)
{
	struct drm_device *dev = &dev_priv->dev;
	struct pci_dev *pdev = to_pci_dev(dev->dev);
	struct via_crtc *iga = container_of(crtc,
						struct via_crtc, base);

    drm_dbg_kms(dev, "Entered %s.\n", __func__);

	if (iga->index) {
		iga->timings.htotal.count = VIA_IGA2_HOR_TOTAL_SIZE;
		iga->timings.htotal.regs = iga2_hor_total;

		iga->timings.hdisplay.count = VIA_IGA2_HOR_ADDR_SIZE;
		iga->timings.hdisplay.regs = iga2_hor_addr;
		if (pdev->device != PCI_DEVICE_ID_VIA_CHROME9_HD)
			iga->timings.hdisplay.count--;

		iga->timings.hblank_start.count = VIA_IGA2_HOR_BLANK_START_SIZE;
		iga->timings.hblank_start.regs = iga2_hor_blank_start;
		if (pdev->device != PCI_DEVICE_ID_VIA_CHROME9_HD)
			iga->timings.hblank_start.count--;

		iga->timings.hblank_end.count = VIA_IGA2_HOR_BLANK_END_SIZE;
		iga->timings.hblank_end.regs = iga2_hor_blank_end;

		iga->timings.hsync_start.count = VIA_IGA2_HOR_SYNC_START_SIZE;
		iga->timings.hsync_start.regs = iga2_hor_sync_start;
		if (pdev->device == PCI_DEVICE_ID_VIA_CLE266_GFX
			|| pdev->device == PCI_DEVICE_ID_VIA_KM400_GFX)
			iga->timings.hsync_start.count--;

		/* Continue with all remaining timings using the defined sizes instead of ARRAY_SIZE */
		iga->timings.hsync_end.count = VIA_IGA2_HOR_SYNC_END_SIZE;
		iga->timings.hsync_end.regs = iga2_hor_sync_end;

		iga->timings.vtotal.count = VIA_IGA2_VER_TOTAL_SIZE;
		iga->timings.vtotal.regs = iga2_ver_total;

		iga->timings.vdisplay.count = VIA_IGA2_VER_ADDR_SIZE;
		iga->timings.vdisplay.regs = iga2_ver_addr;

		iga->timings.vblank_start.count = VIA_IGA2_VER_BLANK_START_SIZE;
		iga->timings.vblank_start.regs = iga2_ver_blank_start;

		iga->timings.vblank_end.count = VIA_IGA2_VER_BLANK_END_SIZE;
		iga->timings.vblank_end.regs = iga2_ver_blank_end;

		iga->timings.vsync_start.count = VIA_IGA2_VER_SYNC_START_SIZE;
		iga->timings.vsync_start.regs = iga2_ver_sync_start;

		iga->timings.vsync_end.count = VIA_IGA2_VER_SYNC_END_SIZE;
		iga->timings.vsync_end.regs = iga2_ver_sync_end;

		/* Secondary FIFO setup */
		if ((pdev->device == PCI_DEVICE_ID_VIA_CLE266_GFX) ||
			(pdev->device == PCI_DEVICE_ID_VIA_KM400_GFX)) {
			iga->fifo_depth.count = VIA_IGA2_CLE266_FIFO_DEPTH_SIZE;
			iga->fifo_depth.regs = iga2_cle266_fifo_depth_select;

			iga->threshold.count = VIA_IGA2_CLE266_FIFO_THRESHOLD_SIZE;
			iga->threshold.regs = iga2_cle266_fifo_threshold_select;
		} else {
			iga->fifo_depth.count = VIA_IGA2_K8M800_FIFO_DEPTH_SIZE;
			iga->fifo_depth.regs = iga2_k8m800_fifo_depth_select;

			iga->threshold.count = VIA_IGA2_K8M800_FIFO_THRESHOLD_SIZE;
			iga->threshold.regs = iga2_k8m800_fifo_threshold_select;

			iga->high_threshold.count = VIA_IGA2_FIFO_HIGH_THRESHOLD_SIZE;
			iga->high_threshold.regs = iga2_fifo_high_threshold_select;

			iga->display_queue.count = VIA_IGA2_DISPLAY_QUEUE_SIZE;
			iga->display_queue.regs = iga2_display_queue_expire_num;
		}

		iga->fetch.count = VIA_IGA2_FETCH_COUNT_SIZE;
		iga->fetch.regs = iga2_fetch_count;

		/* Older hardware only uses 12 bits */
		iga->offset.count = VIA_IGA2_OFFSET_SIZE - 1;
		iga->offset.regs = iga2_offset;
	} else {
		iga->timings.htotal.count = VIA_IGA1_HOR_TOTAL_SIZE;
		iga->timings.htotal.regs = iga1_hor_total;

		iga->timings.hdisplay.count = VIA_IGA1_HOR_ADDR_SIZE;
		iga->timings.hdisplay.regs = iga1_hor_addr;
		if (pdev->device != PCI_DEVICE_ID_VIA_CHROME9_HD)
			iga->timings.hdisplay.count--;

		iga->timings.hblank_start.count = VIA_IGA1_HOR_BLANK_START_SIZE;
		iga->timings.hblank_start.regs = iga1_hor_blank_start;
		if (pdev->device != PCI_DEVICE_ID_VIA_CHROME9_HD)
			iga->timings.hblank_start.count--;

		iga->timings.hblank_end.count = VIA_IGA1_HOR_BLANK_END_SIZE;
		iga->timings.hblank_end.regs = iga1_hor_blank_end;

		iga->timings.hsync_start.count = VIA_IGA1_HOR_SYNC_START_SIZE;
		iga->timings.hsync_start.regs = iga1_hor_sync_start;

		iga->timings.hsync_end.count = VIA_IGA1_HOR_SYNC_END_SIZE;
		iga->timings.hsync_end.regs = iga1_hor_sync_end;

		iga->timings.vtotal.count = VIA_IGA1_VER_TOTAL_SIZE;
		iga->timings.vtotal.regs = iga1_ver_total;

		iga->timings.vdisplay.count = VIA_IGA1_VER_ADDR_SIZE;
		iga->timings.vdisplay.regs = iga1_ver_addr;

		iga->timings.vblank_start.count = VIA_IGA1_VER_BLANK_START_SIZE;
		iga->timings.vblank_start.regs = iga1_ver_blank_start;

		iga->timings.vblank_end.count = VIA_IGA1_VER_BLANK_END_SIZE;
		iga->timings.vblank_end.regs = iga1_ver_blank_end;

		iga->timings.vsync_start.count = VIA_IGA1_VER_SYNC_START_SIZE;
		iga->timings.vsync_start.regs = iga1_ver_sync_start;

		iga->timings.vsync_end.count = VIA_IGA1_VER_SYNC_END_SIZE;
		iga->timings.vsync_end.regs = iga1_ver_sync_end;

		/* Primary FIFO setup */
		if ((pdev->device == PCI_DEVICE_ID_VIA_CLE266_GFX) ||
			(pdev->device == PCI_DEVICE_ID_VIA_KM400_GFX)) {
			iga->fifo_depth.count = VIA_IGA1_CLE266_FIFO_DEPTH_SIZE;
			iga->fifo_depth.regs = iga1_cle266_fifo_depth_select;

			iga->threshold.count = VIA_IGA1_CLE266_FIFO_THRESHOLD_SIZE;
			iga->threshold.regs = iga1_cle266_fifo_threshold_select;

			iga->high_threshold.count = VIA_IGA1_CLE266_FIFO_HIGH_THRESHOLD_SIZE;
			iga->high_threshold.regs = iga1_cle266_fifo_high_threshold_select;

			iga->display_queue.count = VIA_IGA1_CLE266_DISPLAY_QUEUE_SIZE;
			iga->display_queue.regs = iga1_cle266_display_queue_expire_num;
		} else {
			iga->fifo_depth.count = VIA_IGA1_K8M800_FIFO_DEPTH_SIZE;
			iga->fifo_depth.regs = iga1_k8m800_fifo_depth_select;

			iga->threshold.count = VIA_IGA1_K8M800_FIFO_THRESHOLD_SIZE;
			iga->threshold.regs = iga1_k8m800_fifo_threshold_select;

			iga->high_threshold.count = VIA_IGA1_K8M800_FIFO_HIGH_THRESHOLD_SIZE;
			iga->high_threshold.regs = iga1_k8m800_fifo_high_threshold_select;

			iga->display_queue.count = VIA_IGA1_K8M800_DISPLAY_QUEUE_SIZE;
			iga->display_queue.regs = iga1_k8m800_display_queue_expire_num;
		}

		iga->fetch.count = VIA_IGA1_FETCH_COUNT_SIZE;
		iga->fetch.regs = iga1_fetch_count;

		iga->offset.count = VIA_IGA1_OFFSET_SIZE;
		iga->offset.regs = iga1_offset;
	}
    drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}

static int via_gamma_init(struct drm_crtc *crtc)
{
	struct drm_device *dev = crtc->dev;
	u16 *gamma;
	uint32_t i;
	int ret;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	ret = drm_mode_crtc_set_gamma_size(crtc, 256);
	if (ret) {
		drm_err(dev, "Failed to set gamma size!\n");
		goto exit;
	}

	gamma = crtc->gamma_store;
	for (i = 0; i < 256; i++) {
		gamma[i] = i << 8 | i;
		gamma[i + 256] = i << 8 | i;
		gamma[i + 512] = i << 8 | i;
	}

exit:
	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
	return ret;
}

static const uint32_t via_primary_formats[] = {
	DRM_FORMAT_XRGB8888,
	DRM_FORMAT_RGB565,
	DRM_FORMAT_C8,
};

int via_crtc_init(struct via_drm_priv *dev_priv, uint32_t index)
{
	struct drm_device *dev = &dev_priv->dev;
	struct via_crtc *iga;
	struct drm_plane *primary;
	struct drm_plane *cursor;
	uint32_t possible_crtcs;
	int ret;

    drm_dbg_kms(dev, "Entered %s.\n", __func__);

	possible_crtcs = 1 << index;

	primary = kzalloc(sizeof(struct drm_plane), GFP_KERNEL);
	if (!primary) {
		ret = -ENOMEM;
		drm_err(dev, "Failed to allocate a primary plane.\n");
		goto exit;
	}

	ret = drm_universal_plane_init(dev, primary, possible_crtcs,
			&via_primary_drm_plane_funcs,
			via_primary_formats,
			ARRAY_SIZE(via_primary_formats),
			NULL, DRM_PLANE_TYPE_PRIMARY, NULL);
	if (ret) {
		drm_err(dev, "Failed to initialize a primary "
				"plane.\n");
		goto free_primary;
	}

	drm_plane_helper_add(primary, &via_primary_drm_plane_helper_funcs);

	cursor = kzalloc(sizeof(struct drm_plane), GFP_KERNEL);
	if (!cursor) {
		ret = -ENOMEM;
		drm_err(dev, "Failed to allocate a cursor plane.\n");
		goto cleanup_primary;
	}

	ret = drm_universal_plane_init(dev, cursor, possible_crtcs,
			&via_cursor_drm_plane_funcs,
			via_cursor_formats, 
			via_cursor_formats_size,
			NULL, DRM_PLANE_TYPE_CURSOR, NULL);
	if (ret) {
		drm_err(dev, "Failed to initialize a cursor "
				"plane.\n");
		goto cleanup_primary;
	}

	drm_plane_helper_add(cursor, &via_cursor_drm_plane_helper_funcs);

	iga = kzalloc(sizeof(struct via_crtc), GFP_KERNEL);
	if (!iga) {
		ret = -ENOMEM;
		drm_err(dev, "Failed to allocate CRTC storage.\n");
		goto free_cursor;
	}

	ret = drm_crtc_init_with_planes(dev, &iga->base,
					primary, cursor,
					&via_drm_crtc_funcs, NULL);

	iga->index = index;
	
	via_crtc_param_init(dev_priv, &iga->base, index);
	ret = via_gamma_init(&iga->base);
	if (ret) {
	    kfree(iga);
	}

	drm_crtc_helper_add(&iga->base, &via_drm_crtc_helper_funcs);

	goto exit;
free_cursor:
	drm_plane_cleanup(cursor);
cleanup_primary:
	drm_plane_cleanup(primary);
free_primary:
	kfree(primary);
exit:
    drm_dbg_kms(dev, "Exiting %s.\n", __func__);
	return ret;
}

/* Add the missing crtc initialization functions referenced in modeset.c */
/**
 * via_crtc1_init - Initialize primary CRTC (IGA1)
 * @dev: DRM device
 *
 * Initialize the primary display controller
 *
 * Returns:
 * Zero on success, error code on failure
 */
int via_crtc1_init(struct drm_device *dev)
{
    drm_dbg_kms(dev, "Initializing CRTC1\n");
    return via_crtc_init(to_via_drm_priv(dev), 0);
}
EXPORT_SYMBOL_GPL(via_crtc1_init);

/**
 * via_crtc2_init - Initialize secondary CRTC (IGA2)
 * @dev: DRM device
 *
 * Initialize the secondary display controller
 *
 * Returns:
 * Zero on success, error code on failure
 */
int via_crtc2_init(struct drm_device *dev)
{
    drm_dbg_kms(dev, "Initializing CRTC2\n");
    return via_crtc_init(to_via_drm_priv(dev), 1);
}
EXPORT_SYMBOL_GPL(via_crtc2_init);

[File Ends] drivers/gpu/drm/via/via_crtc.c

[File Begins] drivers/gpu/drm/via/via_crtc_hw.c
/*
 * Copyright 2023 The OpenChrome Project
 * [via_crtc_hw.c]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHOR(S) OR COPYRIGHT HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include "via_drv.h"
#include "via_crtc_hw.h"
#include "via_disp_reg.h"
#include "via_regset.h"
#include <drm/drm_print.h>
#include <linux/module.h>

/* Instead of defining these functions here, declare them as extern */
extern void load_register_tables(void __iomem *regbase, struct vga_registers *table);
extern void load_value_to_registers(void __iomem *regbase, const struct vga_registers *regs, u32 value);

/* Fix struct initializations - remove extra fields */
const struct vga_regset iga1_cle266_fifo_depth_select[] = {
    { VIA_PORT_SEQ, 0x17, 0, 6 }
};
EXPORT_SYMBOL_GPL(iga1_cle266_fifo_depth_select);

const struct vga_regset iga1_k8m800_fifo_depth_select[] = {
    { VIA_PORT_SEQ, 0x17, 0, 7 }
};
EXPORT_SYMBOL_GPL(iga1_k8m800_fifo_depth_select);

const struct vga_regset iga2_cle266_fifo_depth_select[] = {
    { VIA_PORT_CRT, 0x68, 4, 7 }
};
EXPORT_SYMBOL_GPL(iga2_cle266_fifo_depth_select);

const struct vga_regset iga2_k8m800_fifo_depth_select[] = {
    { VIA_PORT_CRT, 0x68, 4, 7 }
};
EXPORT_SYMBOL_GPL(iga2_k8m800_fifo_depth_select);

const struct vga_regset iga1_cle266_fifo_threshold_select[] = {
    { VIA_PORT_SEQ, 0x16, 0, 5 }
};
EXPORT_SYMBOL_GPL(iga1_cle266_fifo_threshold_select);

const struct vga_regset iga1_k8m800_fifo_threshold_select[] = {
    { VIA_PORT_SEQ, 0x16, 0, 5 }
};
EXPORT_SYMBOL_GPL(iga1_k8m800_fifo_threshold_select);

const struct vga_regset iga2_cle266_fifo_threshold_select[] = {
    { VIA_PORT_CRT, 0x68, 0, 3 }
};
EXPORT_SYMBOL_GPL(iga2_cle266_fifo_threshold_select);

const struct vga_regset iga2_k8m800_fifo_threshold_select[] = {
    { VIA_PORT_CRT, 0x68, 0, 3 }
};
EXPORT_SYMBOL_GPL(iga2_k8m800_fifo_threshold_select);

const struct vga_regset iga1_cle266_fifo_high_threshold_select[] = {
    { VIA_PORT_SEQ, 0x18, 0, 5 }
};
EXPORT_SYMBOL_GPL(iga1_cle266_fifo_high_threshold_select);

const struct vga_regset iga1_k8m800_fifo_high_threshold_select[] = {
    { VIA_PORT_SEQ, 0x18, 0, 5 }
};
EXPORT_SYMBOL_GPL(iga1_k8m800_fifo_high_threshold_select);

const struct vga_regset iga2_fifo_high_threshold_select[] = {
    { VIA_PORT_CRT, 0x92, 0, 3 }
};
EXPORT_SYMBOL_GPL(iga2_fifo_high_threshold_select);

const struct vga_regset iga1_cle266_display_queue_expire_num[] = {
    { VIA_PORT_SEQ, 0x22, 0, 4 }
};
EXPORT_SYMBOL_GPL(iga1_cle266_display_queue_expire_num);

const struct vga_regset iga1_k8m800_display_queue_expire_num[] = {
    { VIA_PORT_SEQ, 0x22, 0, 4 }
};
EXPORT_SYMBOL_GPL(iga1_k8m800_display_queue_expire_num);

const struct vga_regset iga2_display_queue_expire_num[] = {
    { VIA_PORT_CRT, 0x94, 0, 6 }
};
EXPORT_SYMBOL_GPL(iga2_display_queue_expire_num);

/* IGA2 mode setting functions */
void via_iga2_set_interlace_mode(void __iomem *regbase, bool enable)
{
    /* Implementation stub */
    if (enable) {
        svga_wcrt_mask(regbase, 0x67, 0x80, 0x80);
    } else {
        svga_wcrt_mask(regbase, 0x67, 0x00, 0x80);
    }
}
EXPORT_SYMBOL_GPL(via_iga2_set_interlace_mode);

void via_iga2_set_palette_lut_resolution(void __iomem *regbase, bool is_8bits)
{
    /* Implementation updated to use bool parameter instead of u8 */
    if (is_8bits) {
        svga_wseq_mask(regbase, 0x15, 0x80, 0x80); /* 8-bit */
    } else {
        svga_wseq_mask(regbase, 0x15, 0x00, 0x80); /* 6-bit */
    }
}
EXPORT_SYMBOL_GPL(via_iga2_set_palette_lut_resolution);

/* IGA1 mode setting functions - implementing missing symbols */
void via_iga1_set_interlace_mode(void __iomem *regbase, bool enable)
{
    /* Implementation stub */
    if (enable) {
        /* Set interlace mode for IGA1 */
        svga_wcrt_mask(regbase, 0x17, 0x80, 0x80);
    } else {
        /* Disable interlace mode for IGA1 */
        svga_wcrt_mask(regbase, 0x17, 0x00, 0x80);
    }
}
EXPORT_SYMBOL_GPL(via_iga1_set_interlace_mode);

void via_iga1_set_hsync_shift(void __iomem *regbase, u8 shift_value)
{
    /* Implementation stub */
    /* Set horizontal sync shift value for IGA1 */
    svga_wcrt_mask(regbase, 0x33, shift_value, 0x1F);
}
EXPORT_SYMBOL_GPL(via_iga1_set_hsync_shift);

void via_iga1_set_palette_lut_resolution(void __iomem *regbase, bool is_8bits)
{
    /* Implementation stub */
    if (is_8bits) {
        /* Set 8-bit palette LUT resolution for IGA1 */
        svga_wseq_mask(regbase, 0x15, 0x80, 0x80);
    } else {
        /* Set 6-bit palette LUT resolution for IGA1 */
        svga_wseq_mask(regbase, 0x15, 0x00, 0x80);
    }
}
EXPORT_SYMBOL_GPL(via_iga1_set_palette_lut_resolution);

/* Define the encoder function structures that were referenced but undefined */
const struct drm_encoder_funcs via_crtc_encoder_funcs = {
    .destroy = via_encoder_destroy,
};
EXPORT_SYMBOL_GPL(via_crtc_encoder_funcs);

const struct drm_encoder_helper_funcs via_crtc_helper_funcs = {
    /* Minimal required implementation */
    .disable = NULL,
    .enable = NULL,
};
EXPORT_SYMBOL_GPL(via_crtc_helper_funcs);

[File Ends] drivers/gpu/drm/via/via_crtc_hw.c

[File Begins] drivers/gpu/drm/via/via_crtc_hw.h
/*
 * Copyright 2023 The OpenChrome Project
 * [via_crtc_hw.h]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHOR(S) OR COPYRIGHT HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#ifndef __VIA_CRTC_HW_H__
#define __VIA_CRTC_HW_H__

/* Include the main header first to ensure struct definitions are available */
#include "via_drv.h"

/* Scaling mode definitions */
#define VIA_NO_SCALING      0x00000000
#define VIA_HOR_EXPAND      0x00000001
#define VIA_VER_EXPAND      0x00000002
#define VIA_EXPAND          (VIA_HOR_EXPAND | VIA_VER_EXPAND)
#define VIA_SHRINK          0x00000004

/* Scaling constants */
#define HOR_SCALE           0x00000001
#define VER_SCALE           0x00000002
#define HOR_VER_SCALE       (HOR_SCALE | VER_SCALE)

/* Hardware constants */
#define VX800_IGA1_FIFO_MAX_DEPTH            384
#define VX800_IGA1_FIFO_THRESHOLD            328
#define VX800_IGA1_FIFO_HIGH_THRESHOLD       296
#define VX800_IGA1_DISPLAY_QUEUE_EXPIRE_NUM  124

#define VX800_IGA2_FIFO_MAX_DEPTH            384
#define VX800_IGA2_FIFO_THRESHOLD            328
#define VX800_IGA2_FIFO_HIGH_THRESHOLD       296
#define VX800_IGA2_DISPLAY_QUEUE_EXPIRE_NUM  124

/* Helper macros for FIFO threshold calculation - comment out conflicting macros */
/* #define IGA1_FIFO_THRESHOLD_FORMULA(x)           ((x >> 1) - 1) */
/* #define IGA1_FIFO_HIGH_THRESHOLD_FORMULA(x)      ((x * 3 / 4) - 1) */
/* #define IGA1_FIFO_LOW_THRESHOLD_SELECT_FORMULA(x)   ((x >> 2) - 1) */

/* External register arrays declarations */
extern const struct vga_regset iga1_cle266_fifo_depth_select[];
extern const struct vga_regset iga1_k8m800_fifo_depth_select[];
extern const struct vga_regset iga2_k8m800_fifo_depth_select[];
extern const struct vga_regset iga1_cle266_fetch_count[];
extern const struct vga_regset iga1_k8m800_fetch_count[];
extern const struct vga_regset iga1_fifo_depth[];
extern const struct vga_regset iga1_fifo_threshold_select[];
extern const struct vga_regset iga1_display_queue_expire_num[];
extern const struct vga_regset iga2_fifo_depth[];
extern const struct vga_regset iga2_fifo_threshold[];
extern const struct vga_regset lcd_starting_address[];
extern const struct vga_regset iga1_starting_address[];
extern const struct vga_regset iga2_starting_address[];
extern const struct vga_regset iga1_offset[];
extern const struct vga_regset iga2_offset[];
extern const struct vga_regset iga1_fetch_count[];
extern const struct vga_regset iga2_fetch_count[];
extern const struct vga_regset burst_count[];
extern const struct vga_regset iga2_fifo_max_depth[];
extern const struct vga_regset lcd_enable_polarity[];
extern const struct vga_regset lcd_panel_type[];
extern const struct vga_regset lcd_mode[];
extern const struct vga_regset hor_scaling_factor[];
extern const struct vga_regset ver_scaling_factor[];
extern const struct vga_regset hor_scaling_enable[];
extern const struct vga_regset ver_scaling_enable[];
extern const struct vga_regset lcd_ver_scaling[];
extern const struct vga_regset iga2_cle266_fifo_depth_select[];

/* Function prototypes */

/* via_crtc.c */
void load_register_tables(void __iomem *regbase, struct vga_registers *table);
void via_iga1_set_palette_lut_resolution(void __iomem *regbase, bool is_8bit);
void via_iga2_set_palette_lut_resolution(void __iomem *regbase, bool is_8bit);
void via_iga1_set_interlace_mode(void __iomem *regbase, bool is_interlace);
void via_iga2_set_interlace_mode(void __iomem *regbase, bool is_interlace);
void via_iga1_set_hsync_shift(void __iomem *regbase, u8 value);
u32 via_get_clk_value(struct drm_device *dev, u32 clk);
void via_set_vclock(struct drm_crtc *crtc, u32 clk_value);
void via_load_crtc_pixel_timing(struct drm_crtc *crtc, struct drm_display_mode *mode);

#endif /* __VIA_CRTC_HW_H__ */

[File Ends] drivers/gpu/drm/via/via_crtc_hw.h

[File Begins] drivers/gpu/drm/via/via_cursor.c
/*
 * Copyright © 2019-2020 Kevin Brace.
 * Copyright 2012 James Simmons. All Rights Reserved.
 * Copyright 1998-2009 VIA Technologies, Inc. All Rights Reserved.
 * Copyright 2001-2009 S3 Graphics, Inc. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHOR(S) OR COPYRIGHT HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * Author(s):
 * Kevin Brace <kevinbrace@bracecomputerlab.com>
 * James Simmons <jsimmons@infradead.org>
 */

#include <linux/pci.h>
#include <linux/pci_ids.h>

#include <drm/drm_atomic.h>
#include <drm/drm_atomic_helper.h>
#include <drm/drm_atomic_state_helper.h>
#include <drm/drm_crtc.h>
#include <drm/drm_fourcc.h>
#include <drm/drm_framebuffer.h>
#include <drm/drm_gem.h>
#include <drm/drm_mode.h>
#include <drm/drm_modeset_helper_vtables.h>
#include <drm/drm_plane.h>

#include <drm/ttm/ttm_bo.h>

#include "via_drv.h"
#include "via_cursor_regs.h"


static void via_hide_cursor(struct drm_crtc *crtc)
{
	struct drm_device *dev = crtc->dev;
	struct pci_dev *pdev = to_pci_dev(dev->dev);
	struct via_crtc *iga = container_of(crtc,
					struct via_crtc, base);
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
	uint32_t temp;

	switch (pdev->device) {
	case PCI_DEVICE_ID_VIA_UNICHROME_PRO_II:
	case PCI_DEVICE_ID_VIA_P4M890_GFX:
	case PCI_DEVICE_ID_VIA_CHROME9_HC:
	case PCI_DEVICE_ID_VIA_CHROME9_HC3:
	case PCI_DEVICE_ID_VIA_CHROME9_HCM:
	case PCI_DEVICE_ID_VIA_CHROME9_HD:
		if (iga->index) {
			temp = VIA_READ(HI_CONTROL);
			VIA_WRITE(HI_CONTROL, temp & 0xFFFFFFFA);
		} else {
			temp = VIA_READ(PRIM_HI_CTRL);
			VIA_WRITE(PRIM_HI_CTRL, temp & 0xFFFFFFFA);
		}

		break;
	default:
		temp = VIA_READ(HI_CONTROL);
		VIA_WRITE(HI_CONTROL, temp & 0xFFFFFFFA);
		break;
	}
}

static void via_show_cursor(struct drm_crtc *crtc)
{
	struct drm_device *dev = crtc->dev;
	struct pci_dev *pdev = to_pci_dev(dev->dev);
	struct via_crtc *iga = container_of(crtc,
					struct via_crtc, base);
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);

	switch (pdev->device) {
	case PCI_DEVICE_ID_VIA_UNICHROME_PRO_II:
	case PCI_DEVICE_ID_VIA_P4M890_GFX:
	case PCI_DEVICE_ID_VIA_CHROME9_HC:
	case PCI_DEVICE_ID_VIA_CHROME9_HC3:
	case PCI_DEVICE_ID_VIA_CHROME9_HCM:
	case PCI_DEVICE_ID_VIA_CHROME9_HD:
		/*
		 * Program Hardware Icon (HI) FIFO, foreground color,
		 * and background color.
		 */
		if (iga->index) {
			VIA_WRITE(HI_TRANSPARENT_COLOR, 0x00000000);
			VIA_WRITE(HI_INVTCOLOR, 0x00FFFFFF);
			VIA_WRITE(ALPHA_V3_PREFIFO_CONTROL,
							0x000E0000);
			VIA_WRITE(ALPHA_V3_FIFO_CONTROL, 0x0E0F0000);
		} else {
			VIA_WRITE(PRIM_HI_TRANSCOLOR, 0x00000000);
			VIA_WRITE(PRIM_HI_INVTCOLOR, 0x00FFFFFF);
			VIA_WRITE(V327_HI_INVTCOLOR, 0x00FFFFFF);
			VIA_WRITE(PRIM_HI_FIFO, 0x0D000D0F);
		}

		break;
	default:
		/*
		 * Program Hardware Icon (HI) FIFO, foreground color,
		 * and background color.
		 */
		VIA_WRITE(HI_TRANSPARENT_COLOR, 0x00000000);
		VIA_WRITE(HI_INVTCOLOR, 0x00FFFFFF);
		VIA_WRITE(ALPHA_V3_PREFIFO_CONTROL, 0x000E0000);
		VIA_WRITE(ALPHA_V3_FIFO_CONTROL, 0xE0F0000);
		break;
	}

	switch (pdev->device) {
	case PCI_DEVICE_ID_VIA_UNICHROME_PRO_II:
	case PCI_DEVICE_ID_VIA_P4M890_GFX:
	case PCI_DEVICE_ID_VIA_CHROME9_HC:
	case PCI_DEVICE_ID_VIA_CHROME9_HC3:
	case PCI_DEVICE_ID_VIA_CHROME9_HCM:
	case PCI_DEVICE_ID_VIA_CHROME9_HD:
		/*
		 * Turn on Hardware Icon (HI).
		 */
		if (iga->index) {
			VIA_WRITE(HI_CONTROL, 0xB6000005);
		} else {
			VIA_WRITE(PRIM_HI_CTRL, 0x36000005);
		}

		break;
	default:
		/*
		 * Turn on Hardware Icon (HI).
		 */
		if (iga->index) {
			VIA_WRITE(HI_CONTROL, 0xB6000005);
		} else {
			VIA_WRITE(HI_CONTROL, 0x36000005);
		}

		break;
	}
}

static void via_cursor_address(struct drm_crtc *crtc,
				struct ttm_buffer_object *ttm_bo)
{
	struct drm_device *dev = crtc->dev;
	struct pci_dev *pdev = to_pci_dev(dev->dev);
	struct via_crtc *iga = container_of(crtc,
					struct via_crtc, base);
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);

	switch (pdev->device) {
	case PCI_DEVICE_ID_VIA_UNICHROME_PRO_II:
	case PCI_DEVICE_ID_VIA_P4M890_GFX:
	case PCI_DEVICE_ID_VIA_CHROME9_HC:
	case PCI_DEVICE_ID_VIA_CHROME9_HC3:
	case PCI_DEVICE_ID_VIA_CHROME9_HCM:
	case PCI_DEVICE_ID_VIA_CHROME9_HD:
		/*
		 * Program Hardware Icon (HI) offset.
		 */
		if (iga->index) {
			VIA_WRITE(HI_FBOFFSET,
				ttm_bo->resource->start << PAGE_SHIFT);
		} else {
			VIA_WRITE(PRIM_HI_FBOFFSET,
				ttm_bo->resource->start << PAGE_SHIFT);
		}
		break;
	default:
		/*
		 * Program Hardware Icon (HI) offset.
		 */
		VIA_WRITE(HI_FBOFFSET, ttm_bo->resource->start << PAGE_SHIFT);
		break;
	}

	return;
}

static void via_set_hi_location(struct drm_crtc *crtc, int crtc_x, int crtc_y)
{
	struct drm_device *dev = crtc->dev;
	struct pci_dev *pdev = to_pci_dev(dev->dev);
	struct via_crtc *iga = container_of(crtc,
					struct via_crtc, base);
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
	uint32_t location_x = 0, location_y = 0;
	uint32_t offset_x = 0, offset_y = 0;

	if (crtc_x < 0) {
		offset_x = -crtc_x;
	} else {
		location_x = crtc_x;
	}

	if (crtc_y < 0) {
		offset_y = -crtc_y;
	} else {
		location_y = crtc_y;
	}

	switch (pdev->device) {
	case PCI_DEVICE_ID_VIA_UNICHROME_PRO_II:
	case PCI_DEVICE_ID_VIA_P4M890_GFX:
	case PCI_DEVICE_ID_VIA_CHROME9_HC:
	case PCI_DEVICE_ID_VIA_CHROME9_HC3:
	case PCI_DEVICE_ID_VIA_CHROME9_HCM:
	case PCI_DEVICE_ID_VIA_CHROME9_HD:
		if (iga->index) {
			VIA_WRITE(HI_POSSTART,
				(((location_x & 0x07ff) << 16) |
				(location_y & 0x07ff)));
			VIA_WRITE(HI_CENTEROFFSET,
				(((offset_x & 0x07ff) << 16) |
				(offset_y & 0x07ff)));
		} else {
			VIA_WRITE(PRIM_HI_POSSTART,
				(((location_x & 0x07ff) << 16) |
				(location_y & 0x07ff)));
			VIA_WRITE(PRIM_HI_CENTEROFFSET,
				(((offset_x & 0x07ff) << 16) |
				(offset_y & 0x07ff)));
		}

		break;
	default:
		VIA_WRITE(HI_POSSTART,
				(((location_x & 0x07ff) << 16) |
				(location_y & 0x07ff)));
		VIA_WRITE(HI_CENTEROFFSET,
				(((offset_x & 0x07ff) << 16) |
				(offset_y & 0x07ff)));
		break;
	}
}

static int via_cursor_prepare_fb(struct drm_plane *plane,
					struct drm_plane_state *new_state)
{
	struct drm_gem_object *gem;
	struct ttm_buffer_object *ttm_bo;
	struct via_bo *bo;
	int ret = 0;

	if (!new_state->fb) {
		goto exit;
	}

	gem = new_state->fb->obj[0];
	ttm_bo = container_of(gem, struct ttm_buffer_object, base);
	bo = to_via_bo(ttm_bo);

	ret = ttm_bo_reserve(ttm_bo, true, false, NULL);
	if (ret) {
		goto exit;
	}

	ret = via_bo_pin(bo, TTM_PL_VRAM);
	ttm_bo_unreserve(ttm_bo);
	ret = ttm_bo_kmap(ttm_bo, 0, PFN_UP(ttm_bo->resource->size), &bo->kmap);
	if (ret) {
		goto exit;
	}

exit:
	return ret;
}

static void via_cursor_cleanup_fb(struct drm_plane *plane,
					struct drm_plane_state *old_state)
{
	struct drm_gem_object *gem;
	struct ttm_buffer_object *ttm_bo;
	struct via_bo *bo;
	int ret;

	if (!old_state->fb) {
		goto exit;
	}

	gem = old_state->fb->obj[0];
	ttm_bo = container_of(gem, struct ttm_buffer_object, base);
	bo = to_via_bo(ttm_bo);

	ttm_bo_kunmap(&bo->kmap);
	ret = ttm_bo_reserve(ttm_bo, true, false, NULL);
	if (ret) {
		goto exit;
	}

	via_bo_unpin(bo);
	ttm_bo_unreserve(ttm_bo);

exit:
	return;
}

static int via_cursor_atomic_check(struct drm_plane *plane,
					struct drm_atomic_state *state)
{
	struct drm_plane_state *new_plane_state =
			drm_atomic_get_new_plane_state(state, plane);
	struct drm_crtc_state *new_crtc_state;
	struct drm_device *dev = plane->dev;
	struct drm_framebuffer *fb = new_plane_state->fb;
	int ret = 0;

	if ((!new_plane_state->crtc) || (!new_plane_state->visible)) {
		goto exit;
	}

	if (fb->width != fb->height) {
		drm_err(dev, "Hardware cursor is expected to have "
				"square dimensions.\n");
		ret = -EINVAL;
		goto exit;
	}

	new_crtc_state = drm_atomic_get_new_crtc_state(state,
						new_plane_state->crtc);
	ret = drm_atomic_helper_check_plane_state(
					new_plane_state,
					new_crtc_state,
					DRM_PLANE_NO_SCALING,
					DRM_PLANE_NO_SCALING,
					true, true);
exit:
	return ret;
}

static void via_cursor_atomic_update(struct drm_plane *plane,
					struct drm_atomic_state *state)
{
	struct drm_plane_state *new_state =
			drm_atomic_get_new_plane_state(state, plane);
	struct drm_plane_state *old_state =
			drm_atomic_get_old_plane_state(state, plane);
	struct drm_crtc *crtc = new_state->crtc;
	struct drm_gem_object *gem;
	struct ttm_buffer_object *ttm_bo;

	if (new_state->fb != old_state->fb) {
		gem = new_state->fb->obj[0];
		ttm_bo = container_of(gem, struct ttm_buffer_object, base);
		via_cursor_address(crtc, ttm_bo);
	}

	via_set_hi_location(crtc, new_state->crtc_x, new_state->crtc_y);
	via_show_cursor(crtc);
}

static void via_cursor_atomic_enable(struct drm_plane *plane,
					struct drm_atomic_state *state)
{
	struct drm_plane_state *new_state =
			drm_atomic_get_new_plane_state(state, plane);
	struct drm_crtc *crtc = new_state->crtc;

	if (crtc) {
		via_show_cursor(crtc);
	}
}

static void via_cursor_atomic_disable(struct drm_plane *plane,
					struct drm_atomic_state *state)
{
	struct drm_plane_state *new_state =
			drm_atomic_get_new_plane_state(state, plane);
	struct drm_crtc *crtc = new_state->crtc;

	if (crtc) {
		via_hide_cursor(crtc);
	}
}

/* Mark the unused function to avoid warning */
#ifdef __unused_function
static void via_cursor_atomic_cleanup(struct drm_plane *plane,
				struct drm_plane_state *old_state)
{
	struct drm_gem_object *gem;
	struct ttm_buffer_object *ttm_bo;
	struct via_bo *bo;
	int ret;

	if (!old_state->fb) {
		goto exit;
	}

	gem = old_state->fb->obj[0];
	ttm_bo = container_of(gem, struct ttm_buffer_object, base);
	bo = to_via_bo(ttm_bo);

	ttm_bo_kunmap(&bo->kmap);
	ret = ttm_bo_reserve(ttm_bo, true, false, NULL);
	if (ret) {
		goto exit;
	}

	via_bo_unpin(bo);
	ttm_bo_unreserve(ttm_bo);

exit:
	return;
}
#endif

const struct drm_plane_helper_funcs via_cursor_drm_plane_helper_funcs = {
	.prepare_fb	= via_cursor_prepare_fb,
	.cleanup_fb	= via_cursor_cleanup_fb,
	.atomic_check	= via_cursor_atomic_check,
	.atomic_update	= via_cursor_atomic_update,
	.atomic_enable	= via_cursor_atomic_enable,
	.atomic_disable	= via_cursor_atomic_disable,
};

const struct drm_plane_funcs via_cursor_drm_plane_funcs = {
	.update_plane = drm_atomic_helper_update_plane,
	.disable_plane = drm_atomic_helper_disable_plane,
	.destroy = drm_plane_cleanup,
	.reset = drm_atomic_helper_plane_reset,
	.atomic_duplicate_state = drm_atomic_helper_plane_duplicate_state,
	.atomic_destroy_state = drm_atomic_helper_plane_destroy_state,
};

const uint32_t via_cursor_formats[] = {
	DRM_FORMAT_ARGB8888,
};

const size_t via_cursor_formats_size =
				ARRAY_SIZE(via_cursor_formats);

[File Ends] drivers/gpu/drm/via/via_cursor.c

[File Begins] drivers/gpu/drm/via/via_cursor_regs.h
/*
 * Copyright 2023 The OpenChrome Project
 * [via_cursor_regs.h]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHOR(S) OR COPYRIGHT HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#ifndef __VIA_CURSOR_REGS_H__
#define __VIA_CURSOR_REGS_H__

/* Hardware cursor register definitions */
#define HI_CONTROL                  0x0310
#define HI_TRANSPARENT_COLOR        0x0314
#define HI_INVTCOLOR                0x0318
#define HI_FBOFFSET                 0x031C
#define HI_POSSTART                 0x0320
#define HI_CENTEROFFSET             0x0324

/* Primary hardware cursor registers */
#define PRIM_HI_CTRL                0x0310
#define PRIM_HI_TRANSCOLOR          0x0314
#define PRIM_HI_INVTCOLOR           0x0318
#define PRIM_HI_FBOFFSET            0x031C
#define PRIM_HI_POSSTART            0x0320
#define PRIM_HI_CENTEROFFSET        0x0324

/* V327 hardware cursor registers */
#define V327_HI_INVTCOLOR           0x0518

/* Alpha blending registers for hardware cursor */
#define ALPHA_V3_PREFIFO_CONTROL    0x0508
#define ALPHA_V3_FIFO_CONTROL       0x050C
#define PRIM_HI_FIFO                0x0510

#endif /* __VIA_CURSOR_REGS_H__ */

[File Ends] drivers/gpu/drm/via/via_cursor_regs.h

[File Begins] drivers/gpu/drm/via/via_dac.c
/*
 * Copyright 2016 Kevin Brace
 * Copyright 2016 The OpenChrome Project
 * [via_dac.c]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHOR(S) OR COPYRIGHT HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

/* The DAC module handles VGA analog output */

#include "via_drv.h"
#include "via_crtc_hw.h"
#include "via_dac_regs.h"
#include "via_connector.h" // Include the new header

#include <linux/pci.h>

#include <drm/drm_atomic_state_helper.h>
#include <drm/drm_connector.h>
#include <drm/drm_crtc_helper.h>
#include <drm/drm_edid.h>
#include <drm/drm_modeset_helper_vtables.h>
#include <drm/drm_probe_helper.h>

// ... Keep existing code but add stubs for missing functions ...

/* 
 * Implementation stubs for missing functions
 */
void via_dac_set_dpms_control(void __iomem *regbase, int dpms_state)
{
    /* Implementation stub */
}

void via_dac_set_power(void __iomem *regbase, bool power_on)
{
    /* Implementation stub */
}

void via_dac_set_sync_polarity(void __iomem *regbase, u8 polarity)
{
    /* Implementation stub */
}

void via_dac_set_display_source(void __iomem *regbase, int source)
{
    /* Implementation stub */
}

/*
 * Set DAC (VGA) sync polarity.
 */
static void via_dac_sync_polarity(struct via_drm_priv *dev_priv,
					unsigned int flags)
{
	struct drm_device *dev = &dev_priv->dev;
	u8 syncPolarity = 0x00;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	if (flags & DRM_MODE_FLAG_NHSYNC) {
		syncPolarity |= BIT(0);
	}

	if (flags & DRM_MODE_FLAG_NVSYNC) {
		syncPolarity |= BIT(1);
	}

	via_dac_set_sync_polarity(VGABASE, syncPolarity);

	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}

/*
 * Routines for controlling stuff on the DAC port
 */

/* 
 * Reference the encoder destroy function from via_encoder.c
 * instead of defining it here
 */
extern void via_encoder_destroy(struct drm_encoder *encoder);

/*
 * Manage the power state of DAC (VGA).
 */
static void via_dac_dpms(struct drm_encoder *encoder, int mode)
{
	struct drm_device *dev = encoder->dev;
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	switch (mode) {
	case DRM_MODE_DPMS_ON:
		via_dac_set_dpms_control(VGABASE, VIA_DAC_DPMS_ON);
		via_dac_set_power(VGABASE, true);
		break;
	case DRM_MODE_DPMS_STANDBY:
		via_dac_set_dpms_control(VGABASE, VIA_DAC_DPMS_STANDBY);
		via_dac_set_power(VGABASE, true);
		break;
	case DRM_MODE_DPMS_SUSPEND:
		via_dac_set_dpms_control(VGABASE, VIA_DAC_DPMS_SUSPEND);
		via_dac_set_power(VGABASE, true);
		break;
	case DRM_MODE_DPMS_OFF:
		via_dac_set_dpms_control(VGABASE, VIA_DAC_DPMS_OFF);
		via_dac_set_power(VGABASE, false);
		break;
	default:
		drm_err(dev, "Bad DPMS mode.");
		break;
	}

	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}

/* Pass our mode to the connectors and the CRTC to give them a chance to
 * adjust it according to limitations or connector properties, and also
 * a chance to reject the mode entirely. Useful for things like scaling.
 */
static bool via_dac_mode_fixup(struct drm_encoder *encoder,
				const struct drm_display_mode *mode,
				struct drm_display_mode *adjusted_mode)
{
	drm_mode_set_crtcinfo(adjusted_mode, 0);
	return true;
}

/*
 * Handle DAC (VGA) mode setting.
 */
static void via_dac_mode_set(struct drm_encoder *encoder,
				struct drm_display_mode *mode,
				struct drm_display_mode *adjusted_mode)
{
	struct drm_device *dev = encoder->dev;
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
	struct via_crtc *iga = container_of(encoder->crtc, struct via_crtc, base);

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	via_dac_sync_polarity(dev_priv, adjusted_mode->flags);
	via_dac_set_display_source(VGABASE, iga->index);

	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}

static void via_dac_prepare(struct drm_encoder *encoder)
{
	struct drm_device *dev = encoder->dev;
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	if (encoder->crtc) {
		via_dac_set_dpms_control(VGABASE, VIA_DAC_DPMS_OFF);
		via_dac_set_power(VGABASE, false);
	}

	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}

static void via_dac_commit(struct drm_encoder *encoder)
{
	struct drm_device *dev = encoder->dev;
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	if (encoder->crtc) {
		via_dac_set_dpms_control(VGABASE, VIA_DAC_DPMS_ON);
		via_dac_set_power(VGABASE, true);
	}

	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}

static void via_dac_disable(struct drm_encoder *encoder)
{
	struct drm_device *dev = encoder->dev;
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	via_dac_set_dpms_control(VGABASE, VIA_DAC_DPMS_OFF);
	via_dac_set_power(VGABASE, false);

	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}

/* This is the canonical implementation exported to other files */
enum drm_connector_status
via_dac_detect(struct drm_connector *connector, bool force)
{
	struct drm_device *dev = connector->dev;
	struct via_connector *con = container_of(connector,
					struct via_connector, base);
	enum drm_connector_status ret = connector_status_disconnected;
	struct i2c_adapter *i2c_bus = NULL;
	struct edid *edid = NULL;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	if (con->i2c_bus & VIA_I2C_BUS1) {
		i2c_bus = via_find_ddc_bus(0x26);
	} else {
		i2c_bus = NULL;
	}

	if (i2c_bus) {
		edid = drm_get_edid(&con->base, i2c_bus);
		if (edid) {
			if (!(edid->input & DRM_EDID_INPUT_DIGITAL)) {
				ret = connector_status_connected;
			}

			kfree(edid);
			goto exit;
		}
	}

	if (con->i2c_bus & VIA_I2C_BUS2) {
		i2c_bus = via_find_ddc_bus(0x31);
	} else {
		i2c_bus = NULL;
	}

	if (i2c_bus) {
		edid = drm_get_edid(&con->base, i2c_bus);
		if (edid) {
			if (!(edid->input & DRM_EDID_INPUT_DIGITAL)) {
				ret = connector_status_connected;
			}

			kfree(edid);
			goto exit;
		}
	}

exit:
	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
	return ret;
}

/* This is the canonical implementation exported to other files */
const struct drm_connector_funcs via_dac_connector_funcs = {
	.dpms = drm_helper_connector_dpms,
	.detect = via_dac_detect,
	.fill_modes = drm_helper_probe_single_connector_modes,
	.destroy = via_connector_destroy,
	.reset = drm_atomic_helper_connector_reset,
	.atomic_duplicate_state =
			drm_atomic_helper_connector_duplicate_state,
	.atomic_destroy_state =
			drm_atomic_helper_connector_destroy_state,
};

static enum drm_mode_status via_dac_mode_valid(
					struct drm_connector *connector,
					struct drm_display_mode *mode)
{
	struct drm_device *dev = connector->dev;
	struct pci_dev *pdev = to_pci_dev(dev->dev);
	int min_clock, max_clock;
	enum drm_mode_status status = MODE_OK;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	min_clock = 25000;
	switch (pdev->device) {
	/* CLE266 Chipset */
	case PCI_DEVICE_ID_VIA_CLE266_GFX:
	/* KM400(A) / KN400(A) / P4M800 Chipset */
	case PCI_DEVICE_ID_VIA_KM400_GFX:
		max_clock = 250000;
		break;
	/* K8M800(A) / K8N800(A) Chipset */
	case PCI_DEVICE_ID_VIA_K8M800_GFX:
	/* P4M800 Pro / P4M800CE / VN800 / CN700 / CN333 / CN400 Chipset */
	case PCI_DEVICE_ID_VIA_P4M800_PRO_GFX:
		max_clock = 300000;
		break;
	/* PM800 / PN800 / PM880 / PN880 Chipset */
	case PCI_DEVICE_ID_VIA_PM800_GFX:
	/* P4M890 / P4N890 Chipset */
	case PCI_DEVICE_ID_VIA_P4M890_GFX:
	/* K8M890 / K8N890 Chipset */
	case PCI_DEVICE_ID_VIA_CHROME9:
	/* P4M900 / VN896 / CN896 Chipset */
	case PCI_DEVICE_ID_VIA_CHROME9_HC:
	/* CX700(M/M2) / VX700(M/M2) Chipset */
	case PCI_DEVICE_ID_VIA_UNICHROME_PRO_II:
	/* VX800 / VX820 Chipset */
	case PCI_DEVICE_ID_VIA_CHROME9_HC3:
	/* VX855 / VX875 Chipset */
	case PCI_DEVICE_ID_VIA_CHROME9_HCM:
	/* VX900(H) Chipset */
	case PCI_DEVICE_ID_VIA_CHROME9_HD:
		max_clock = 350000;
		break;
	/* Illegal condition (should never get here) */
	default:
		max_clock = 0;
		break;
	}

	if (mode->flags & DRM_MODE_FLAG_DBLSCAN) {
		status = MODE_NO_DBLESCAN;
		goto exit;
	}

	if (mode->clock < min_clock) {
		status = MODE_CLOCK_LOW;
		goto exit;
	}

	if (mode->clock > max_clock) {
		status = MODE_CLOCK_HIGH;
		goto exit;
	}

exit:
	drm_dbg_kms(dev, "status: %u\n", status);
	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
	return status;
}

static int via_dac_get_modes(struct drm_connector *connector)
{
	struct drm_device *dev = connector->dev;
	struct via_connector *con = container_of(connector,
					struct via_connector, base);
	int count = 0;
	struct i2c_adapter *i2c_bus;
	struct edid *edid = NULL;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	if (con->i2c_bus & VIA_I2C_BUS1) {
		i2c_bus = via_find_ddc_bus(0x26);
	} else {
		i2c_bus = NULL;
	}

	if (i2c_bus) {
		edid = drm_get_edid(&con->base, i2c_bus);
		if (edid) {
			if (!(edid->input & DRM_EDID_INPUT_DIGITAL)) {
				drm_connector_update_edid_property(connector,
									edid);
				count = drm_add_edid_modes(connector, edid);
			}

			kfree(edid);
			goto exit;
		}
	}

	if (con->i2c_bus & VIA_I2C_BUS2) {
		i2c_bus = via_find_ddc_bus(0x31);
	} else {
		i2c_bus = NULL;
	}

	if (i2c_bus) {
		edid = drm_get_edid(&con->base, i2c_bus);
		if (edid) {
			if (!(edid->input & DRM_EDID_INPUT_DIGITAL)) {
				drm_connector_update_edid_property(connector,
									edid);
				count = drm_add_edid_modes(connector, edid);
			}

			kfree(edid);
			goto exit;
		}
	}

exit:
	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
	return count;
}

/* 
 * Fix the declaration of via_dac_connector_helper_funcs
 * Make it non-static since it's declared as external in via_connector.h
 */
const struct drm_connector_helper_funcs via_dac_connector_helper_funcs = {
    .mode_valid = via_dac_mode_valid,
    .get_modes = via_dac_get_modes,
};

/* Define a proper encoder helper functions structure for the DAC encoder */
const struct drm_encoder_helper_funcs via_dac_encoder_helper_funcs = {
    .dpms = via_dac_dpms,
    .mode_fixup = via_dac_mode_fixup,
    .prepare = via_dac_prepare,
    .commit = via_dac_commit,
    .mode_set = via_dac_mode_set,
    .disable = via_dac_disable
};

/* Fix the function signature to match the declaration */
void via_dac_init(struct drm_device *dev)
{
    struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
    
    /* The function is now only used for hardware initialization */
    drm_dbg_kms(dev, "Performing DAC hardware initialization\n");
    
    /* Hardware-specific initialization can go here */
    /* Access the DAC encoder through dev_priv->dac if needed */
    if (dev_priv->dac) {
        /* Perform DAC-specific initialization */
        /* For example, configure the DAC registers for proper output */
    }
}

/* 
 * Use the functions directly rather than through these unused structures.
 * If they're needed in the future, add appropriate references to them.
 */
void via_dac_probe(struct drm_device *dev)
{
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
	struct pci_dev *pdev = to_pci_dev(dev->dev);
	u8 sr13, sr5a;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	switch (pdev->device) {
	case PCI_DEVICE_ID_VIA_UNICHROME_PRO_II:
	case PCI_DEVICE_ID_VIA_CHROME9_HC3:
	case PCI_DEVICE_ID_VIA_CHROME9_HCM:
	case PCI_DEVICE_ID_VIA_CHROME9_HD:
		sr5a = vga_rseq(VGABASE, 0x5a);
		drm_dbg_kms(dev, "SR5A: 0x%02x\n", sr5a);

		/* Setting SR5A[0] to 1.
		 * This allows the reading out the alternative
		 * pin strapping information from SR12 and SR13. */
		svga_wseq_mask(VGABASE, 0x5a, BIT(0), BIT(0));
		drm_dbg_kms(dev, "SR5A: 0x%02x\n", sr5a);

		sr13 = vga_rseq(VGABASE, 0x13);
		drm_dbg_kms(dev, "SR13: 0x%02x\n", sr13);

		if (!(sr13 & BIT(2))) {
			dev_priv->dac_presence = true;
			drm_dbg_kms(dev, "Detected the presence of VGA.\n");
		} else {
			dev_priv->dac_presence = false;
		}

		/* Restore SR5A. */
		vga_wseq(VGABASE, 0x5a, sr5a);
		break;
	default:
		dev_priv->dac_presence = true;
		drm_dbg_kms(dev, "Detected the presence of VGA.\n");
		break;
	}

	dev_priv->dac_i2c_bus = VIA_I2C_NONE;

	if (dev_priv->dac_presence) {
		dev_priv->dac_i2c_bus = VIA_I2C_BUS2 | VIA_I2C_BUS1;
	}

	dev_priv->mapped_i2c_bus |= dev_priv->dac_i2c_bus;

	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}

/* 
 * Use the functions directly rather than through these unused structures.
 * If they're needed in the future, add appropriate references to them.
 */

[File Ends] drivers/gpu/drm/via/via_dac.c

[File Begins] drivers/gpu/drm/via/via_dac_regs.h
/*
 * Copyright 2023 The OpenChrome Project
 * [via_dac_regs.h]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHOR(S) OR COPYRIGHT HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#ifndef __VIA_DAC_REGS_H__
#define __VIA_DAC_REGS_H__

/* DAC DPMS states */
#define VIA_DAC_DPMS_ON       0
#define VIA_DAC_DPMS_STANDBY  1
#define VIA_DAC_DPMS_SUSPEND  2
#define VIA_DAC_DPMS_OFF      3

/* Encoder types */
#define VIA_ENCODER_DAC       0
#define VIA_ENCODER_TMDS      1
#define VIA_ENCODER_LVDS      2
#define VIA_ENCODER_TV        3

/* I2C related definitions - use VIA_I2C_* constants from via_drv.h */

/* Function prototypes */
void via_dac_set_dpms_control(void __iomem *regbase, int dpms_state);
void via_dac_set_power(void __iomem *regbase, bool power_on);
void via_dac_set_sync_polarity(void __iomem *regbase, u8 polarity);
void via_dac_set_display_source(void __iomem *regbase, int source);
struct i2c_adapter *via_find_ddc_bus(int ddc_id);
void via_encoder_destroy(struct drm_encoder *encoder);

/* Function prototypes for dac.c exported functions */
void via_dac_probe(struct drm_device *dev);
void via_dac_init(struct drm_device *dev);

#endif /* __VIA_DAC_REGS_H__ */

[File Ends] drivers/gpu/drm/via/via_dac_regs.h

[File Begins] drivers/gpu/drm/via/via_disp_reg.h
/*
 * Copyright 2023 The OpenChrome Project
 * [via_disp_reg.h]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHOR(S) OR COPYRIGHT HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#ifndef __VIA_DISP_REG_H__
#define __VIA_DISP_REG_H__

/* VIA display register definitions */
#define VIA_REG_DISPLAY_CTRL      0x0080
#define VIA_REG_DISPLAY_STATUS    0x0084
#define VIA_REG_DISPLAY_CONFIG    0x0088

/* Display engine control bits */
#define VIA_DISP_ENABLE           0x00000001
#define VIA_DISP_RESET            0x00000002
#define VIA_DISP_SUSPEND          0x00000004

/* Pixel timing register definitions - comment out the conflicting definition */
/* #define IGA1_PIX_HALF_LINE_REG    0x8DD4 */
#define IGA1_PIX_HALF_LINE_MASK   0x1FFF

/* IGA1 timing formulas */
#define IGA1_HOR_TOTAL_FORMULA(x) ((x) / 8 - 5)
#define IGA1_HOR_ADDR_FORMULA(x) ((x) / 8 - 1)
#define IGA1_HOR_BLANK_START_FORMULA(x) ((x) / 8 - 1)
#define IGA1_HOR_BLANK_END_FORMULA(x) ((x) / 8 - 1)
#define IGA1_HOR_SYNC_START_FORMULA(x) ((x) / 8)
#define IGA1_HOR_SYNC_END_FORMULA(x) ((x) / 8)
#define IGA1_VER_TOTAL_FORMULA(x) ((x) - 2)
#define IGA1_VER_ADDR_FORMULA(x) ((x) - 1)
#define IGA1_VER_BLANK_START_FORMULA(x) ((x) - 1)
#define IGA1_VER_BLANK_END_FORMULA(x) ((x) - 1)
#define IGA1_VER_SYNC_START_FORMULA(x) ((x) - 1)
#define IGA1_VER_SYNC_END_FORMULA(x) ((x) - 1)

/* IGA2 timing formulas */
#define IGA2_HOR_TOTAL_FORMULA(x) ((x) / 8 - 5)
#define IGA2_HOR_ADDR_FORMULA(x) ((x) / 8 - 1)
#define IGA2_HOR_BLANK_START_FORMULA(x) ((x) / 8 - 1)
#define IGA2_HOR_BLANK_END_FORMULA(x) ((x) / 8 - 1)
#define IGA2_HOR_SYNC_START_FORMULA(x) ((x) / 8)
#define IGA2_HOR_SYNC_END_FORMULA(x) ((x) / 8)
#define IGA2_VER_TOTAL_FORMULA(x) ((x) - 2)
#define IGA2_VER_ADDR_FORMULA(x) ((x) - 1)
#define IGA2_VER_BLANK_START_FORMULA(x) ((x) - 1)
#define IGA2_VER_BLANK_END_FORMULA(x) ((x) - 1)
#define IGA2_VER_SYNC_START_FORMULA(x) ((x) - 1)
#define IGA2_VER_SYNC_END_FORMULA(x) ((x) - 1)

/* Pixel timing formulas */
#define IGA1_PIXELTIMING_HOR_TOTAL_FORMULA(x) ((x) - 1)
#define IGA1_PIXELTIMING_HOR_ADDR_FORMULA(x) ((x) - 1)
#define IGA1_PIXELTIMING_HOR_BLANK_START_FORMULA(x) ((x) - 1)
#define IGA1_PIXELTIMING_HOR_BLANK_END_FORMULA(x) ((x) - 1)
#define IGA1_PIXELTIMING_HOR_SYNC_START_FORMULA(x) ((x) - 1)
#define IGA1_PIXELTIMING_HOR_SYNC_END_FORMULA(x) ((x) - 1)
#define IGA1_PIXELTIMING_VER_TOTAL_FORMULA(x) ((x) - 1)
#define IGA1_PIXELTIMING_VER_ADDR_FORMULA(x) ((x) - 1)
#define IGA1_PIXELTIMING_VER_BLANK_START_FORMULA(x) ((x) - 1)
#define IGA1_PIXELTIMING_VER_BLANK_END_FORMULA(x) ((x) - 1)
#define IGA1_PIXELTIMING_VER_SYNC_START_FORMULA(x) ((x) - 1)
#define IGA1_PIXELTIMING_VER_SYNC_END_FORMULA(x) ((x) - 1)
#define IGA1_PIXELTIMING_HVSYNC_OFFSET_END_FORMULA(h, s) (((h) - (s)) / 2)

/* FIFO depth and threshold formulas */
#define IGA1_FIFO_DEPTH_SELECT_FORMULA(x) ((x) >> 1)
#define IGA1_FIFO_THRESHOLD_FORMULA(x) (((x) >> 1) - 1)
#define IGA1_FIFO_HIGH_THRESHOLD_FORMULA(x) (((x) * 3 / 4) - 1)
#define IGA1_FIFO_LOW_THRESHOLD_SELECT_FORMULA(x) (((x) >> 2) - 1)
#define IGA2_FIFO_DEPTH_SELECT_FORMULA(x) ((x) >> 2)

/* VX800 FIFO constants */
#define CN700_IGA1_FIFO_MAX_DEPTH            192
#define CN700_IGA1_FIFO_THRESHOLD            128
#define CN700_IGA1_FIFO_HIGH_THRESHOLD       64
#define CN700_IGA1_DISPLAY_QUEUE_EXPIRE_NUM  124

#define CX700_IGA1_FIFO_MAX_DEPTH            192
#define CX700_IGA1_FIFO_THRESHOLD            128
#define CX700_IGA1_FIFO_HIGH_THRESHOLD       64
#define CX700_IGA1_DISPLAY_QUEUE_EXPIRE_NUM  124

#define K8M890_IGA1_FIFO_MAX_DEPTH           384
#define K8M890_IGA1_FIFO_THRESHOLD           328
#define K8M890_IGA1_FIFO_HIGH_THRESHOLD      296
#define K8M890_IGA1_DISPLAY_QUEUE_EXPIRE_NUM 124

#define P4M890_IGA1_FIFO_MAX_DEPTH           384
#define P4M890_IGA1_FIFO_THRESHOLD           328
#define P4M890_IGA1_FIFO_HIGH_THRESHOLD      296
#define P4M890_IGA1_DISPLAY_QUEUE_EXPIRE_NUM 124

#define P4M900_IGA1_FIFO_MAX_DEPTH           384
#define P4M900_IGA1_FIFO_THRESHOLD           328
#define P4M900_IGA1_FIFO_HIGH_THRESHOLD      296
#define P4M900_IGA1_DISPLAY_QUEUE_EXPIRE_NUM 124

#define VX855_IGA1_FIFO_MAX_DEPTH            384
#define VX855_IGA1_FIFO_THRESHOLD            328
#define VX855_IGA1_FIFO_HIGH_THRESHOLD       296
#define VX855_IGA1_DISPLAY_QUEUE_EXPIRE_NUM  124

#define VX900_IGA1_FIFO_MAX_DEPTH            384
#define VX900_IGA1_FIFO_THRESHOLD            328
#define VX900_IGA1_FIFO_HIGH_THRESHOLD       296
#define VX900_IGA1_DISPLAY_QUEUE_EXPIRE_NUM  124

/* IGA2 FIFO constants */
#define CN700_IGA2_FIFO_MAX_DEPTH            96
#define CN700_IGA2_FIFO_THRESHOLD            64
#define CN700_IGA2_FIFO_HIGH_THRESHOLD       32
#define CN700_IGA2_DISPLAY_QUEUE_EXPIRE_NUM  124

#define CX700_IGA2_FIFO_MAX_DEPTH            96
#define CX700_IGA2_FIFO_THRESHOLD            64
#define CX700_IGA2_FIFO_HIGH_THRESHOLD       32
#define CX700_IGA2_DISPLAY_QUEUE_EXPIRE_NUM  124

#define K8M890_IGA2_FIFO_MAX_DEPTH           384
#define K8M890_IGA2_FIFO_THRESHOLD           328
#define K8M890_IGA2_FIFO_HIGH_THRESHOLD      296
#define K8M890_IGA2_DISPLAY_QUEUE_EXPIRE_NUM 124

#define P4M890_IGA2_FIFO_MAX_DEPTH           384
#define P4M890_IGA2_FIFO_THRESHOLD           328
#define P4M890_IGA2_FIFO_HIGH_THRESHOLD      296
#define P4M890_IGA2_DISPLAY_QUEUE_EXPIRE_NUM 124

#define P4M900_IGA2_FIFO_MAX_DEPTH           384
#define P4M900_IGA2_FIFO_THRESHOLD           328
#define P4M900_IGA2_FIFO_HIGH_THRESHOLD      296
#define P4M900_IGA2_DISPLAY_QUEUE_EXPIRE_NUM 124

#define VX855_IGA2_FIFO_MAX_DEPTH            384
#define VX855_IGA2_FIFO_THRESHOLD            328
#define VX855_IGA2_FIFO_HIGH_THRESHOLD       296
#define VX855_IGA2_DISPLAY_QUEUE_EXPIRE_NUM  124

#define VX900_IGA2_FIFO_MAX_DEPTH            384
#define VX900_IGA2_FIFO_THRESHOLD            328
#define VX900_IGA2_FIFO_HIGH_THRESHOLD       296
#define VX900_IGA2_DISPLAY_QUEUE_EXPIRE_NUM  124

#endif /* __VIA_DISP_REG_H__ */

[File Ends] drivers/gpu/drm/via/via_disp_reg.h

[File Begins] drivers/gpu/drm/via/via_display_port.h
/*
 * Copyright 2023 The OpenChrome Project
 * [via_display_port.h]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#ifndef __VIA_DISPLAY_PORT_H__
#define __VIA_DISPLAY_PORT_H__

/* Include via_hdmi_regs.h to get shared definitions */
#include "via_hdmi_regs.h"

/* Display Interface Port definitions - using values compatible with via_hdmi_regs.h */
/* VIA_DI_PORT_NONE already defined in via_hdmi_regs.h (0) */
#define VIA_DI_PORT_DVP0     0x02  /* Digital Video Port 0 (most basic) */
#define VIA_DI_PORT_DVP1     0x03  /* Digital Video Port 1 */
#define VIA_DI_PORT_DFPLOW   0x04  /* DFP Low (Digital Flat Panel, usually DVI) */
#define VIA_DI_PORT_DFPHIGH  0x05  /* DFP High */
#define VIA_DI_PORT_LVDS     0x06  /* LVDS (Low-Voltage Differential Signaling) for laptop panels */
/* VIA_DI_PORT_HDMI already defined in via_hdmi_regs.h (1) */

#endif /* __VIA_DISPLAY_PORT_H__ */

[File Ends] drivers/gpu/drm/via/via_display_port.h

[File Begins] drivers/gpu/drm/via/via_dmablit.c
/*
 * Copyright 2023 The OpenChrome Project
 * [via_dmablit.c]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

/*
 * DMA BLIT functionality for VIA/OpenChrome DRM driver
 * This is a stub implementation to satisfy module build requirements
 */

#include <linux/module.h>
#include "via_drv.h"

/**
 * via_dmablit_init - Initialize DMA BLIT functionality
 * @dev: DRM device
 *
 * Stub implementation of DMA BLIT initialization
 *
 * Returns:
 * Zero on success, negative error code on failure.
 */
int via_dmablit_init(struct drm_device *dev)
{
    drm_dbg_driver(dev, "Entered %s.\n", __func__);
    
    /* DMA BLIT disabled in this build */
    drm_dbg_driver(dev, "DMA BLIT functionality not implemented\n");
    
    drm_dbg_driver(dev, "Exiting %s.\n", __func__);
    return 0;
}

/**
 * via_dmablit_fini - Clean up DMA BLIT resources
 * @dev: DRM device
 *
 * Stub implementation for cleaning up DMA BLIT resources
 */
void via_dmablit_fini(struct drm_device *dev)
{
    drm_dbg_driver(dev, "Entered %s.\n", __func__);
    /* No resources to clean up in this stub */
    drm_dbg_driver(dev, "Exiting %s.\n", __func__);
}

[File Ends] drivers/gpu/drm/via/via_dmablit.c

[File Begins] drivers/gpu/drm/via/via_drm.h
// ...existing code...

/*
 * Below are the existing definitions - keep these and remove duplicates
 */
#define DRM_VIA_GEM_ALLOC 0x20
#define DRM_VIA_GEM_MMAP 0x21

struct drm_via_gem_alloc {
    uint64_t size;
    uint32_t handle;
    uint32_t alignment;
    uint32_t initial_domain;
    uint32_t pad;
};

struct drm_via_gem_mmap {
    uint32_t handle;
    uint32_t pad;
    uint64_t offset;
    uint64_t size;
    uint64_t addr_ptr;
};

/*
 * IOCTL definitions - using the existing values defined above
 */
#define DRM_IOCTL_VIA_GEM_ALLOC DRM_IOWR(DRM_COMMAND_BASE + DRM_VIA_GEM_ALLOC, struct drm_via_gem_alloc)
#define DRM_IOCTL_VIA_GEM_MMAP  DRM_IOWR(DRM_COMMAND_BASE + DRM_VIA_GEM_MMAP, struct drm_via_gem_mmap)

// ...existing code...

/* REMOVE THE FOLLOWING DUPLICATE DEFINITIONS:
#define DRM_VIA_GEM_ALLOC 0x00
#define DRM_VIA_GEM_MMAP  0x01

struct drm_via_gem_alloc {
    uint64_t size;
    uint32_t handle;
    uint32_t alignment;
    uint32_t initial_domain;
    uint32_t pad;
};

struct drm_via_gem_mmap {
    uint32_t handle;
    uint32_t pad;
    uint64_t offset;
    uint64_t size;
    uint64_t addr_ptr;
};
*/

// ...existing code...

[File Ends] drivers/gpu/drm/via/via_drm.h

[File Begins] drivers/gpu/drm/via/via_drm_uapi.h

[File Ends] drivers/gpu/drm/via/via_drm_uapi.h

[File Begins] drivers/gpu/drm/via/via_drv.c
/*
 * Copyright © 2019-2021 Kevin Brace.
 * Copyright 2012 James Simmons. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHOR(S) OR COPYRIGHT HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * Author(s):
 * Kevin Brace <kevinbrace@bracecomputerlab.com>
 * James Simmons <jsimmons@infradead.org>
 */

#include "via_drv.h"
#include <uapi/drm/via_drm.h> // Add this include near the top of the file, just after via_drv.h
#include "via_drv_main.h" // Include the new header file with function declarations
#include "via_ioctl.h" /* Add for ioctl function declarations */
#include "via_pm.h"    /* Add for PM function declarations */
#include "via_init.h"  /* Add for init/fini function declarations */

#include <linux/pci.h>

#include <drm/drm_aperture.h>
#include <drm/drm_drv.h>
#include <drm/drm_fb_helper.h>
#include <drm/drm_file.h>
#include <drm/drm_gem.h>
#include <drm/drm_ioctl.h>
#include <drm/drm_prime.h>
#include <drm/drm_gem_ttm_helper.h>

#include <drm/ttm/ttm_bo.h>

#include "via_object.h"  // Include the object handling functions
#include "via_pm.h"      // Include the power management functions
#include "via_i2c.h"     // Include I2C functions

/* Remove redefinitions of IOCTL numbers - use the ones from via_drm.h */
/*
#define DRM_VIA_ALLOCMEM          0x00
#define DRM_VIA_FREEMEM           0x01
#define DRM_VIA_AGP_INIT          0x02
#define DRM_VIA_FB_INIT           0x03
#define DRM_VIA_MAP_INIT          0x04
#define DRM_VIA_DMA_INIT          0x05
#define DRM_VIA_CMDBUFFER         0x06
#define DRM_VIA_FLUSH             0x07
#define DRM_VIA_PCICMD            0x08
#define DRM_VIA_CMDBUF_SIZE       0x09
#define DRM_VIA_GEM_ALLOC         0x0d
#define DRM_VIA_GEM_MMAP          0x0e
*/

/* Use the IOCTL commands from via_drm.h */
/* 
 * No need to redefine these since they're already defined in via_drm.h
 * 
#define DRM_IOCTL_VIA_GEM_ALLOC   DRM_IOWR(DRM_COMMAND_BASE + DRM_VIA_GEM_ALLOC, struct drm_via_gem_alloc)
#define DRM_IOCTL_VIA_GEM_MMAP    DRM_IOWR(DRM_COMMAND_BASE + DRM_VIA_GEM_MMAP, struct drm_via_gem_mmap)
*/

/* Forward declaration for fb helper function */
/* Remove the external declaration and implement our own version for compatibility */
/* extern int drm_fb_helper_fbdev_setup(struct drm_device *dev, unsigned int preferred_bpp); */

/* Provide a compatibility function for systems without drm_fb_helper_fbdev_setup */
static int via_fb_helper_setup(struct drm_device *dev, unsigned int preferred_bpp)
{
#if defined(CONFIG_DRM_FBDEV_EMULATION)
    /* Use built-in function if available, otherwise no-op */
    #if defined(drm_fb_helper_fbdev_setup)
        return drm_fb_helper_fbdev_setup(dev, preferred_bpp);
    #else
        /* For older kernel versions, we could add a basic FB helper init here if needed */
        return 0;
    #endif
#else
    /* FB emulation disabled */
    return 0;
#endif
}

/* Define the scanout alignment constant */
#define DRM_SCANOUT_ALIGN 64

/* Add forward declaration of via_device_init */
int via_device_init(struct drm_device *dev) __attribute__((warn_unused_result));

/* 
 * Create GEM handle from buffer object - Exported 
 * This is used to create a handle for the dumb create interface 
 */
int via_dumb_create_mapping(struct drm_file *file_priv,
                struct drm_device *dev,
                struct via_bo *bo,
                uint32_t *handle)
{
    int ret;
    
    /* Create a gem object to export a handle using the TTM buffer object's base field */
    ret = drm_gem_handle_create(file_priv, &bo->ttm_bo.base, handle);

    /* Drop the reference from handle creation */
    drm_gem_object_put(&bo->ttm_bo.base);
    
    return ret;
}

/* Stub/placeholder implementations for required functions */
extern int via_ttm_domain_to_placement(struct via_bo *bo, uint32_t domain);

void via_ttm_placement(struct ttm_buffer_object *bo, uint32_t domain)
{
    /* Implementation stub */
}

/* Remove via_gem_alloc_ioctl - keep in via_ioctl.c */
/* Remove via_gem_mmap_ioctl - keep in via_ioctl.c */
/* Remove via_drm_init - keep in via_init.c */
/* Remove via_drm_fini - keep in via_init.c */
/* Remove via_dev_pm_ops_suspend - keep in via_pm.c */
/* Remove via_dev_pm_ops_resume - keep in via_pm.c */

/*
 * For now, this device driver will be disabled, unless the
 * user decides to enable it.
 */
int via_modeset = 0;

MODULE_PARM_DESC(modeset, "Enable DRM device driver "
                "(Default: Disabled, "
                "0 = Disabled,"
                "1 = Enabled)");
module_param_named(modeset, via_modeset, int, 0400);

static int __maybe_unused via_driver_open(struct drm_device *dev,
                    struct drm_file *file_priv)
{
    int ret = 0;

    drm_dbg_driver(dev, "Entered %s.\n", __func__);

    drm_dbg_driver(dev, "Exiting %s.\n", __func__);
    return ret;
}

static void __maybe_unused via_driver_postclose(struct drm_device *dev,
                    struct drm_file *file_priv)
{
    drm_dbg_driver(dev, "Entered %s.\n", __func__);

    drm_dbg_driver(dev, "Exiting %s.\n", __func__);
}

static int __maybe_unused via_driver_dumb_create(struct drm_file *file_priv,
                    struct drm_device *dev,
                    struct drm_mode_create_dumb *args)
{
    struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
    struct via_bo *bo;
    int ret;
    int align;

    align = DRM_SCANOUT_ALIGN;

    args->pitch = ALIGN(args->width * ((args->bpp + 7) >> 3), align);
    args->size = PAGE_ALIGN(args->pitch * args->height);

    /* Call via_bo_create with the correct parameter list */
    ret = via_bo_create(dev, &dev_priv->bdev, args->size,
                ttm_bo_type_device, TTM_PL_VRAM, false, &bo);
    if (ret) {
        drm_err(dev, "Failed to create BO: %d\n", ret);
        return ret;
    }

    ret = via_dumb_create_mapping(file_priv, dev, bo, &args->handle);
    if (ret) {
        drm_err(dev, "Failed to create BO mapping: %d\n", ret);
        via_bo_destroy(bo, false);
        return ret;
    }

    return 0;
}

/* Remove the static implementation of via_driver_dumb_map_offset 
 * that starts around line 202 - since we now have a non-static 
 * implementation in via_ioctl.c */

/* Add function prototype for via_driver_dumb_map_offset */
int via_driver_dumb_map_offset(struct drm_file *file_priv,
                        struct drm_device *dev,
                        uint32_t handle,
                        uint64_t *offset);

/* 
 * These driver interface structures are being built up and will be
 * used in future implementations. They're retained but marked with 
 * __maybe_unused to prevent warnings.
 */
static const struct drm_ioctl_desc via_driver_ioctls[] __maybe_unused = {
    /* Only include the GEM IOCTLs we actually implement */
    DRM_IOCTL_DEF_DRV(VIA_GEM_ALLOC, via_gem_alloc_ioctl, DRM_AUTH),
    DRM_IOCTL_DEF_DRV(VIA_GEM_MMAP, via_gem_mmap_ioctl, DRM_AUTH),
};

static const struct file_operations via_driver_fops __maybe_unused = {
    .owner      = THIS_MODULE,
    .open       = drm_open,
    .release    = drm_release,
    .unlocked_ioctl = drm_ioctl,
    .mmap       = drm_gem_mmap,
    .poll       = drm_poll,
    .llseek     = noop_llseek,
};

/* Remove the static keyword to match the extern declaration in the header */
extern const struct drm_driver via_driver;

const struct drm_driver via_driver = {
    .load = via_drm_init,
    .unload = via_drm_fini,
    /* Add the dumb_map_offset handler */
    .dumb_map_offset = via_driver_dumb_map_offset,
};

static struct pci_device_id via_pci_table[] = {
    {0x1106, 0x3122, PCI_ANY_ID, PCI_ANY_ID, 0, 0, 0},
    {0x1106, 0x7205, PCI_ANY_ID, PCI_ANY_ID, 0, 0, 0},
    {0x1106, 0x3108, PCI_ANY_ID, PCI_ANY_ID, 0, 0, 0},
    {0x1106, 0x3344, PCI_ANY_ID, PCI_ANY_ID, 0, 0, 0},
    {0x1106, 0x3118, PCI_ANY_ID, PCI_ANY_ID, 0, 0, 0},
    {0x1106, 0x3343, PCI_ANY_ID, PCI_ANY_ID, 0, 0, 0},
    {0x1106, 0x3230, PCI_ANY_ID, PCI_ANY_ID, 0, 0, 0},
    {0x1106, 0x3371, PCI_ANY_ID, PCI_ANY_ID, 0, 0, 0},
    {0x1106, 0x3157, PCI_ANY_ID, PCI_ANY_ID, 0, 0, 0},
    {0x1106, 0x1122, PCI_ANY_ID, PCI_ANY_ID, 0, 0, 0},
    {0x1106, 0x5122, PCI_ANY_ID, PCI_ANY_ID, 0, 0, 0},
    {0x1106, 0x7122, PCI_ANY_ID, PCI_ANY_ID, 0, 0, 0},
    {0, 0, 0}
};

MODULE_DEVICE_TABLE(pci, via_pci_table);

static int via_pci_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
{
    struct drm_device *dev;
    struct via_drm_priv *dev_priv;
    int ret;

    dev_info(&pdev->dev, "Entered %s.\n", __func__);

    ret = drm_aperture_remove_conflicting_pci_framebuffers(pdev,
                                &via_driver);
    if (ret) {
        goto exit;
    }

    ret = pci_enable_device(pdev);
    if (ret) {
        goto exit;
    }

    dev_priv = devm_drm_dev_alloc(&pdev->dev,
                    &via_driver,
                    struct via_drm_priv,
                    dev);
    if (IS_ERR(dev_priv)) {
        ret = PTR_ERR(dev_priv);
        goto exit;
    }

    dev = &dev_priv->dev;

    pci_set_drvdata(pdev, dev);

    ret = via_drm_init(dev, 0);
    if (ret) {
        goto error_disable_pci;
    }

    ret = drm_dev_register(dev, ent->driver_data);
    if (ret) {
        goto error_fini;  // Changed from error_disable_pci to ensure proper cleanup
    }

    /* 
     * Register a framebuffer for the primary display
     * Use our compatibility function instead
     */
    via_fb_helper_setup(dev, 32);
    goto exit;
error_disable_pci:
    pci_disable_device(pdev);
error_fini:  // Added new error handling label
    via_drm_fini(dev);
exit:
    dev_info(&pdev->dev, "Exiting %s.\n", __func__);
    return ret;
}

static void via_pci_remove(struct pci_dev *pdev)
{
    struct drm_device *dev = pci_get_drvdata(pdev);

    dev_info(&pdev->dev, "Entered %s.\n", __func__);

    via_drm_fini(dev);
    drm_dev_unregister(dev);

    dev_info(&pdev->dev, "Exiting %s.\n", __func__);
}

static const struct dev_pm_ops via_dev_pm_ops = {
    .suspend    = via_dev_pm_ops_suspend,
    .resume     = via_dev_pm_ops_resume,
};

static struct pci_driver via_pci_driver = {
    .name       = DRIVER_NAME,
    .id_table   = via_pci_table,
    .probe      = via_pci_probe,
    .remove     = via_pci_remove,
    .driver.pm  = &via_dev_pm_ops,
};

static int __init via_init(void)
{
    int ret = 0;

    if ((via_modeset == -1) &&
        (drm_firmware_drivers_only())) {
        via_modeset = 0;
    }

    if (!via_modeset) {
        ret = -EINVAL;
        goto exit;
    }

    ret = pci_register_driver(&via_pci_driver);

exit:
    return ret;
}

static void __exit via_exit(void)
{
    if (!via_modeset) {
        return;
    }

    pci_unregister_driver(&via_pci_driver);
}

module_init(via_init);
module_exit(via_exit);

MODULE_AUTHOR("Various contributors, Kevin Brace <kevinbrace@bracecomputerlab.com>");
MODULE_DESCRIPTION("OpenChrome DRM/KMS Driver");
MODULE_LICENSE("GPL");

// Add explicit module information
MODULE_AUTHOR("OpenChrome Project");
MODULE_DESCRIPTION("VIA/OpenChrome DRM Driver");
MODULE_LICENSE("GPL and additional rights");
MODULE_ALIAS(DRIVER_NAME);

// Add explicit dependencies
MODULE_SOFTDEP("pre: ttm");
MODULE_SOFTDEP("pre: drm_kms_helper");
MODULE_SOFTDEP("pre: drm");

[File Ends] drivers/gpu/drm/via/via_drv.c

[File Begins] drivers/gpu/drm/via/via_drv.h
/*
 * Copyright © 2019-2023 Kevin Brace.
 * Copyright 2016 James Simmons. All Rights Reserved.
 * Copyright 2013 Intel Corporation
 * Copyright 1998-2009 VIA Technologies, Inc. All Rights Reserved.
 * Copyright 2001-2008 S3 Graphics, Inc. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#ifndef __VIA_DRV_H__
#define __VIA_DRV_H__

#include <asm/io.h>

// Standard C includes *before* any DRM headers
#include <linux/delay.h>
#include <linux/errno.h>
#include <linux/module.h>
#include <linux/pci.h>
#include <linux/pci_ids.h>
#include <linux/ioport.h>
#include <linux/uaccess.h>
#include <linux/i2c.h>
#include <linux/i2c-algo-bit.h>
#include <video/vga.h>

// DRM headers *after* standard headers and PCI headers
#include <drm/drm_drv.h>  // Explicitly include drm_drv.h for struct drm_driver definition
#include <drm/drm_atomic.h>
#include <drm/drm_atomic_helper.h>
#include <drm/drm_atomic_state_helper.h>
#include <drm/drm_crtc.h>
#include <drm/drm_crtc_helper.h>
#include <drm/drm_connector.h>
#include <drm/drm_encoder.h>
#include <drm/drm_framebuffer.h>
#include <drm/drm_gem.h>
#include <drm/drm_managed.h>
#include <drm/drm_modeset_helper_vtables.h>
#include <drm/drm_probe_helper.h>
#include <drm/drm_print.h>

// TTM Headers
#include <drm/ttm/ttm_bo.h>
#include <drm/ttm/ttm_device.h>
#include <drm/ttm/ttm_placement.h>
#include <drm/ttm/ttm_tt.h>
#include <drm/drm_gem_ttm_helper.h>

// Forward declarations to break circular dependencies
struct via_crtc;
struct via_connector;
struct via_encoder;
struct via_block;
struct ttm_buffer_object;
struct via_bo;
struct via_i2c_stuff;

/* Register definitions */

/* VGA register access macros */
#define VGA_SEQ_I          0x3C4
#define VGA_SEQ_D          0x3C5
#define VGA_CRT_IC         0x3D4
#define VGA_CRT_DC         0x3D5

/* Register definitions */
#define IGA1_PIX_HALF_LINE_REG     0x3C
#define IGA1_FIFO_DEPTH_SELECT_REG 0x3C5

/* LVDS/DVI flags */
#define VIA_LVDS1          BIT(0)
#define VIA_LVDS2          BIT(1)
#define VIA_DVI            BIT(2)

/* VIA chipset types */
enum via_chip {
    VIA_CLE266 = 0,
    VIA_KM400,
    VIA_K8M800,
    VIA_PM800,
    VIA_P4M800_PRO,
    VIA_CX700,
    VIA_P4M890,
    VIA_K8M890,
    VIA_P4M900,
    VIA_VX800,
    VIA_VX855,
    VIA_VX900
};

/* VIA CLE266 revisions */
enum via_revision {
    CLE266_REVISION_AX = 0,
    CLE266_REVISION_CX
};

/* CX700 revision definitions */
#define CX700_REVISION_700    0
#define CX700_REVISION_700M   1
#define CX700_REVISION_700M2  2

/* Register data structures for describing control registers */
struct vga_regset {
    unsigned char type;      /* Register type (VGA_SEQ_I, etc.) */
    unsigned char index;     /* Register index */
    unsigned char low;       /* Start bit position */
    unsigned char high;      /* End bit position */
};

struct vga_reg {
    int type;    /* Register type */
    int index;   /* Register index */
    int value;   /* Register value */
    int low;     /* For bit range operations, low bit */
    int high;    /* For bit range operations, high bit */
    int start_bit; /* For helping with bit range calculations */
    int mask;    /* For masking operations */
};

struct vga_registers {
    int count;
    const struct vga_regset *regs;
};

/* Define VGA base address */
#define VGABASE (dev_priv->mmio)

/* Function prototypes */
void load_value_to_registers(void __iomem *regbase, const struct vga_registers *regs,
                           unsigned int value);
                           
/* These are declared in via_vgahw.h */
void svga_wcrt_mask(void __iomem *vgabase, u8 index, u8 value, u8 mask);
void svga_wseq_mask(void __iomem *vgabase, u8 index, u8 value, u8 mask);

/* Structure definitions */
struct crtc_timings {
    struct vga_registers htotal;
    struct vga_registers hdisplay;
    struct vga_registers hblank_start;
    struct vga_registers hblank_end;
    struct vga_registers hsync_start;
    struct vga_registers hsync_end;
    struct vga_registers vtotal;
    struct vga_registers vdisplay;
    struct vga_registers vblank_start;
    struct vga_registers vblank_end;
    struct vga_registers vsync_start;
    struct vga_registers vsync_end;
};

/* VIA connector */
struct via_connector {
    struct drm_connector base;
    int port;
    int i2c_bus;
    struct list_head props;
    uint32_t flags;  
};

static inline struct via_connector *
to_via_connector(struct drm_connector *connector)
{
    return container_of(connector, struct via_connector, base);
}

struct via_encoder {
    struct drm_encoder base;
    struct via_connector con;
    u32 encoder_type; 
    int index;
    u32 i2c_bus;
    u32 di_port;  /* Add di_port field for HDMI/DP support */
};

static inline struct via_encoder *to_via_encoder(struct drm_encoder *encoder)
{
    return container_of(encoder, struct via_encoder, base);
}

struct via_crtc {
    struct drm_crtc base;
    struct drm_plane *plane;
    enum via_chip chip;
    int index;
    u32 address;
    u32 id;
    struct vga_registers fifo_depth;
    struct vga_registers threshold;
    struct vga_registers high_threshold;
    struct vga_registers display_queue;
    struct vga_registers fetch;
    struct vga_registers offset;
    u8 gamma_lut_adjust[256 * 3];
    struct crtc_timings timings;
    u32 scaling_mode;
    struct drm_display_mode native_mode;
};

static inline struct via_crtc *to_via_crtc(struct drm_crtc *crtc)
{
    return container_of(crtc, struct via_crtc, base);
}

struct via_bo {
    struct ttm_buffer_object ttm_bo;
    struct ttm_placement placement;
    struct ttm_place placements[3];
    struct ttm_bo_kmap_obj kmap;
    int pin_count;   /* Add pin_count field */
};

static inline struct via_bo *to_via_bo(struct ttm_buffer_object *bo)
{
    return container_of(bo, struct via_bo, ttm_bo);
}

struct via_i2c {
    struct i2c_adapter adapter;
    struct i2c_algo_bit_data algo;
    void __iomem *mmio;
    u8 port;
};

/* Via driver private structure */
struct via_properties {
    /* properties placeholder */
    int dummy;
};

/**
 * Subclass for struct drm_device
 */
struct via_drm_priv {
    struct drm_device dev;
    /* Memory management */
    phys_addr_t vram_start;
    u64 vram_size;
    void __iomem *mmio;
    phys_addr_t mmio_base;
    u32 mmio_size;
    u8 revision;
    u8 vram_type;
    int vram_mtrr;
    
    /* TTM memory management */
    bool ttm_initialized;
    struct ttm_device bdev;
    struct drm_vma_offset_manager vma_manager;  /* Add VMA manager */
    
    /* Power Management saved registers */
    /* Sequencer registers */
    u8 saved_sr14;
    u8 saved_sr66;
    u8 saved_sr67;
    u8 saved_sr68;
    u8 saved_sr69;
    u8 saved_sr6a;
    u8 saved_sr6b;
    u8 saved_sr6c;
    u8 saved_sr6d;
    u8 saved_sr6e;
    u8 saved_sr6f;
    
    /* CRT Controller registers */
    u8 saved_cr3b;
    u8 saved_cr3c;
    u8 saved_cr3d;
    u8 saved_cr3e;
    u8 saved_cr3f;
    
    /* Display output configuration */
    /* Counter for different display types */
    u32 number_fp;
    u32 number_dvi;
    
    /* I2C bus mapping */
    u32 mapped_i2c_bus;
    
    /* External TMDS (DVI) */
    bool ext_tmds_presence;
    u32 ext_tmds_i2c_bus;
    u32 ext_tmds_di_port;
    struct via_encoder *ext_tmds_encoder;
    
    /* VGA DAC */
    bool dac_presence;
    u32 dac_i2c_bus;
    struct via_encoder *dac;
    
    /* LVDS */
    struct via_encoder *lvds;
    
    /* HDMI */
    struct via_encoder *hdmi;    /* HDMI output */
    
    /* Presence flags */
    bool int_lvds_presence;
    bool hdmi_presence;
    
    /* Hardware-specific quirk flags */
    bool is_via_nanobook;  /* VIA Nanobook specific quirks */
    bool is_quanta_il1;    /* Quanta IL1 specific quirks */
    bool is_samsung_nc20;  /* Samsung NC20 specific quirks */

    /* Display outputs */
    struct via_encoder *tmds;    /* TMDS (DVI) output */

    /* I2C buses for each encoder */
    u32 int_lvds_i2c_bus;
    u32 hdmi_i2c_bus;

    /* Display interface ports */
    u32 int_lvds_di_port;
    u32 hdmi_di_port;
};

// ... rest of existing code ...

static inline struct via_drm_priv *to_via_drm_priv(struct drm_device *dev)
{
    if (!dev) {
        DRM_ERROR("NULL drm_device pointer!\n");
        return NULL;
    }
    return container_of(dev, struct via_drm_priv, dev);
}

/* Register access functions - use vga.h functions */
#define VIA_BASE dev_priv->mmio
#define VIA_READ(reg) ioread32(dev_priv->mmio + (reg))
#define VIA_WRITE(reg, val) iowrite32((val), dev_priv->mmio + (reg))
#define VIA_WRITE_MASK(reg, val, mask) \
    iowrite32(((ioread32(dev_priv->mmio + (reg)) & ~(mask)) | ((val) & (mask))), \
              dev_priv->mmio + (reg))

/* VIA PCI Device IDs */
#define PCI_DEVICE_ID_VIA_CLE266_GFX      0x3122
#define PCI_DEVICE_ID_VIA_KM400_GFX       0x3205
#define PCI_DEVICE_ID_VIA_K8M800_GFX      0x3108
#define PCI_DEVICE_ID_VIA_PM800_GFX       0x3118
#define PCI_DEVICE_ID_VIA_P4M800_PRO_GFX  0x3344
#define PCI_DEVICE_ID_VIA_UNICHROME_PRO_II 0x3258
#define PCI_DEVICE_ID_VIA_CHROME9         0x3157
#define PCI_DEVICE_ID_VIA_P4M890_GFX      0x3343
#define PCI_DEVICE_ID_VIA_CHROME9_HC      0x3225
#define PCI_DEVICE_ID_VIA_CHROME9_HC3     0x3371
#define PCI_DEVICE_ID_VIA_CHROME9_HCM     0x3327
#define PCI_DEVICE_ID_VIA_CHROME9_HD      0x3317

/* PCI Device IDs for host bridges - rename to avoid conflicts */
#define VIA_HOST_BRIDGE_VX800  0x0314
#define VIA_HOST_BRIDGE_VX855  0x0324 
#define VIA_HOST_BRIDGE_VX900  0x0410

/* Memory types - fix naming inconsistencies and add missing types */
#define VIA_MEM_SDR66      0
#define VIA_MEM_SDR100     1
#define VIA_MEM_SDR133     2 
#define VIA_MEM_DDR200     3
#define VIA_MEM_DDR266     4
#define VIA_MEM_DDR333     5
#define VIA_MEM_DDR400     6

/* Add DDR2 memory types */
#define VIA_MEM_DDR2_400   7
#define VIA_MEM_DDR2_533   8
#define VIA_MEM_DDR2_667   9
#define VIA_MEM_DDR2_800   10
#define VIA_MEM_DDR2_1066  11

/* Add DDR3 memory types */
#define VIA_MEM_DDR3_533   12
#define VIA_MEM_DDR3_667   13
#define VIA_MEM_DDR3_800   14
#define VIA_MEM_DDR3_1066  15
#define VIA_MEM_DDR3_1333  16
#define VIA_MEM_DDR3_1600  17

/* Define missing constants */
#define VIA_CURSOR_SIZE    64
#define VIA_MAX_CRTC       2

/* Function prototypes for connector functions */
void via_connector_destroy(struct drm_connector *connector);
int via_connector_init(struct drm_connector *connector,
                     const struct drm_connector_funcs *funcs,
                     int connector_type);
enum drm_connector_status via_dac_detect(struct drm_connector *connector,
                                       bool force);
enum drm_connector_status via_tmds_detect(struct drm_connector *connector,
                                        bool force);
enum drm_connector_status via_lvds_detect(struct drm_connector *connector,
                                        bool force);
                                        
/* Connector function prototypes */
struct drm_connector *via_connector_dac_init(struct drm_device *dev);
struct drm_connector *via_connector_digital_init(struct drm_device *dev);
struct drm_connector *via_connector_lvds_init(struct drm_device *dev);
int via_connector_create(struct drm_device *dev);

/* Function prototypes for encoder/crtc functions */
extern const struct drm_connector_funcs via_dac_connector_funcs;
extern const struct drm_connector_funcs via_dvi_connector_funcs;
extern const struct drm_connector_funcs via_lvds_connector_funcs;
extern const struct drm_encoder_funcs via_crtc_encoder_funcs;
extern const struct drm_encoder_helper_funcs via_crtc_helper_funcs;
extern const struct drm_plane_helper_funcs via_cursor_drm_plane_helper_funcs;
extern const struct drm_plane_funcs via_cursor_drm_plane_funcs;
extern const uint32_t via_cursor_formats[];
extern const size_t via_cursor_formats_size; // Ensure consistent declaration as size_t

int via_crtc_init(struct via_drm_priv *dev_priv, uint32_t index);

/* Forward declarations for I2C functions */
int via_analog_i2c_init(struct via_drm_priv *dev_priv, int bus_index);
int via_digital_i2c_init(struct via_drm_priv *dev_priv, int bus_index);
int via_lvds_i2c_init(struct via_drm_priv *dev_priv, int bus_index);
void via_i2c_readbytes(struct i2c_adapter *adapter,
                     u8 slave_addr, char offset,
                     u8 *buffer, unsigned int size);
void via_i2c_writebytes(struct i2c_adapter *adapter,
                       u8 slave_addr, char offset,
                       u8 *data, unsigned int size);

/* I2C helper functions */
void via_i2c_writebytes(struct i2c_adapter *adapter,
                      u8 slave_addr, char offset,
                      u8 *data, unsigned int size);
void via_i2c_readbytes(struct i2c_adapter *adapter,
                      u8 slave_addr, char offset, 
                      u8 *buffer, unsigned int size);
struct i2c_adapter *via_find_ddc_bus(int ddc_id);

/* Update the externally-declared variable name here back to original */
extern struct via_i2c_par_t via_i2c_par;

/* I2C initialization functions */
int via_i2c_init(struct drm_device *dev);
void via_i2c_exit(void);
void via_i2c_reg_init(struct via_drm_priv *dev_priv);
int via_analog_i2c_init(struct via_drm_priv *dev_priv, int bus_index);
int via_digital_i2c_init(struct via_drm_priv *dev_priv, int bus_index);
int via_lvds_i2c_init(struct via_drm_priv *dev_priv, int bus_index);

/* Scaling mode definitions */
#define VIA_NO_SCALING      0x00000000
#define VIA_HOR_EXPAND      0x00000001
#define VIA_VER_EXPAND      0x00000002
#define VIA_EXPAND          (VIA_HOR_EXPAND | VIA_VER_EXPAND)
#define VIA_SHRINK          0x00000004

/* Scaling constants */
#define HOR_SCALE           0x00000001
#define VER_SCALE           0x00000002
#define HOR_VER_SCALE       (HOR_SCALE | VER_SCALE)

/* Hardware constants */
#define VX800_IGA1_FIFO_MAX_DEPTH            384
#define VX800_IGA1_FIFO_THRESHOLD            328
#define VX800_IGA1_FIFO_HIGH_THRESHOLD       296
#define VX800_IGA1_DISPLAY_QUEUE_EXPIRE_NUM  124

#define VX800_IGA2_FIFO_MAX_DEPTH            384
#define VX800_IGA2_FIFO_THRESHOLD            328
#define VX800_IGA2_FIFO_HIGH_THRESHOLD       296
#define VX800_IGA2_DISPLAY_QUEUE_EXPIRE_NUM  124

/* Function prototypes */
int via_bo_pin(struct via_bo *bo, int mem_type);
void via_bo_unpin(struct via_bo *bo);
extern void via_ttm_bo_destroy(struct ttm_buffer_object *bo);
int via_mm_init(struct drm_device *dev);

/* Add forward declarations for device initialization/finalization functions */
int via_device_init(struct drm_device *dev);
void via_device_fini(struct drm_device *dev);

void via_mm_fini(struct drm_device *dev);
void via_ttm_debugfs_init(struct drm_device *dev);

/* Add missing function prototypes */
int via_bo_create(struct drm_device *dev, struct ttm_device *bdev, 
                 size_t size, enum ttm_bo_type type, uint32_t placement,
                 bool interruptible, struct via_bo **p_bo);
void via_bo_destroy(struct via_bo *bo, bool force);
int via_ttm_domain_to_placement(struct via_bo *bo, uint32_t domain);
void via_ttm_placement(struct ttm_buffer_object *bo, uint32_t domain);
void via_ttm_bo_destroy(struct ttm_buffer_object *bo);
int via_mm_init(struct drm_device *dev);
void via_mm_fini(struct drm_device *dev);
void via_ttm_debugfs_init(struct drm_device *dev);

/* Driver init/cleanup */
int via_drm_init(struct drm_device *dev, unsigned long flags);
void via_drm_fini(struct drm_device *dev);

/* Power management */
int via_dev_pm_ops_suspend(struct device *dev);
int via_dev_pm_ops_resume(struct device *dev);

/* GEM/TTM functions */
int via_gem_alloc_ioctl(struct drm_device *dev, void *data, struct drm_file *file_priv);
int via_gem_mmap_ioctl(struct drm_device *dev, void *data, struct drm_file *file_priv);

/* Function prototypes for encoder/dac functions */
void via_encoder_destroy(struct drm_encoder *encoder);
void via_dac_set_dpms_control(void __iomem *regbase, int dpms_state);
void via_dac_set_power(void __iomem *regbase, bool power_on);
void via_dac_set_sync_polarity(void __iomem *regbase, u8 polarity);
void via_dac_set_display_source(void __iomem *regbase, int source);

/* Function prototypes for crtc functions */
void via_load_crtc_pixel_timing(struct drm_crtc *crtc, struct drm_display_mode *mode);
int via_crtc_init(struct via_drm_priv *dev_priv, uint32_t index);

/* Function prototypes for missing functions */
void svga_wmisc_mask(void __iomem *vgabase, u8 value, u8 mask);
void via_dac_probe(struct drm_device *dev);
void via_dac_init(struct drm_device *dev);
void via_tmds_probe(struct drm_device *dev);
void via_tmds_init(struct drm_device *dev);
void via_lvds_probe(struct drm_device *dev);
void via_lvds_init(struct drm_device *dev);
void via_ext_dvi_probe(struct drm_device *dev);
void via_ext_dvi_init(struct drm_device *dev);
int via_mm_init(struct drm_device *dev);
void via_mm_fini(struct drm_device *dev);

/* Function prototypes for lvds.c exported functions */
void via_lvds_probe(struct drm_device *dev);
void via_lvds_init(struct drm_device *dev);
int via_lvds_power_on(struct drm_device *dev);
int via_lvds_power_off(struct drm_device *dev);
int via_lvds_set_mode(struct drm_device *dev, struct drm_display_mode *mode);

/* Define VGA register port constants as unsigned int to avoid overflow warnings */
#ifndef VGA_SEQ_I
#define VGA_SEQ_I          0x14  /* Use a value that fits in unsigned char */
#endif

#ifndef VGA_CRT_IC
#define VGA_CRT_IC         0x15  /* Use a value that fits in unsigned char */
#endif

#ifndef VGA_GFX_I
#define VGA_GFX_I          0x16  /* Use a value that fits in unsigned char */
#endif

/* Define VGA register port types as enum values instead of constants */
enum via_vga_port_type {
    VIA_PORT_NONE = 0,
    VIA_PORT_SEQ = 1,    /* Sequencer port */
    VIA_PORT_CRT = 2,    /* CRT Controller port */
    VIA_PORT_GFX = 3     /* Graphics Controller port */
};

/* Map standard VGA port defines to our enum values */
#ifndef VGA_SEQ_I
#define VGA_SEQ_I          VIA_PORT_SEQ
#endif

#ifndef VGA_CRT_IC
#define VGA_CRT_IC         VIA_PORT_CRT
#endif

#ifndef VGA_GFX_I
#define VGA_GFX_I          VIA_PORT_GFX
#endif

/* 
 * Forward declarations for via_driver and initialization functions 
 * to ensure proper linking and visibility
 * Update function signature to match implementation in via_drv.c
 */
extern const struct drm_driver via_driver;
extern int via_drm_init(struct drm_device *dev, unsigned long flags);
extern void via_drm_fini(struct drm_device *dev);
extern int via_device_init(struct drm_device *dev);
extern void via_device_fini(struct drm_device *dev);

/* Driver name for identification purposes */
#define DRIVER_NAME "via"

/* Safe modeset initialization functions with timeout protection */
int via_modeset_init_safe(struct drm_device *dev);
void via_modeset_fini_safe(struct drm_device *dev);

/* CRTC initialization functions */
int via_crtc1_init(struct drm_device *dev);
int via_crtc2_init(struct drm_device *dev);

/* Add function prototypes for PCIe functions */
int via_pcie_init(struct drm_device *dev);
void via_pcie_fini(struct drm_device *dev);

/* Add function prototypes for memory manager */
int via_mm_init(struct drm_device *dev);
void via_mm_fini(struct drm_device *dev);

/* Add function prototypes for IRQ handler */
int via_irq_init(struct drm_device *dev);
void via_irq_fini(struct drm_device *dev);
irqreturn_t via_irq_handler(int irq, void *arg);

/* Add function prototypes for command verifier */
int via_verifier_init(struct drm_device *dev);
void via_verifier_fini(struct drm_device *dev);

/* Add function prototypes for DMA BLIT */
int via_dmablit_init(struct drm_device *dev);
void via_dmablit_fini(struct drm_device *dev);

/* CRTC init functions */
int via_crtc1_init(struct drm_device *dev);
int via_crtc2_init(struct drm_device *dev);

/* Add missing prototype for via_driver_dumb_map_offset */
int via_driver_dumb_map_offset(struct drm_file *file_priv,
                              struct drm_device *dev,
                              uint32_t handle,
                              uint64_t *offset);

/* I2C bus identifiers - keep only one definition, not both
 * Remove the duplicate definitions and keep only these:
 */
#define VIA_I2C_NONE  0x00
#define VIA_I2C_BUS1  0x01
#define VIA_I2C_BUS2  0x02
#define VIA_I2C_BUS3  0x04
#define VIA_I2C_BUS4  0x08
#define VIA_I2C_BUS5  0x10

/* Encoder type definitions */
enum via_encoder_type {
    VIA_ENCODER_NONE = 0,
    VIA_ENCODER_DAC,     /* VGA analog output */
    VIA_ENCODER_TMDS,    /* Integrated TMDS/DVI */
    VIA_ENCODER_LVDS,    /* LVDS output for laptop panels */
    VIA_ENCODER_TV,      /* TV encoders */
    VIA_ENCODER_HDMI,    /* HDMI output */
    VIA_ENCODER_DVO      /* Digital Video Output */
};

#endif /* __VIA_DRV_H__ */

[File Ends] drivers/gpu/drm/via/via_drv.h

[File Begins] drivers/gpu/drm/via/via_drv_main.h
/*
 * Copyright 2023 The OpenChrome Project
 * [via_drv_main.h]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHOR(S) OR COPYRIGHT HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#ifndef __VIA_DRV_MAIN_H__
#define __VIA_DRV_MAIN_H__

#include <drm/drm_drv.h>

/* Forward declaration of the driver main structure */
extern const struct drm_driver via_driver;

/* Function prototype for via_dumb_create_mapping */
int via_dumb_create_mapping(struct drm_file *file_priv,
                struct drm_device *dev,
                struct via_bo *bo,
                uint32_t *handle);

#endif /* __VIA_DRV_MAIN_H__ */

[File Ends] drivers/gpu/drm/via/via_drv_main.h

[File Begins] drivers/gpu/drm/via/via_encoder.c
/*
 * Copyright 2012 James Simmons. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the next
 * paragraph) shall be included in all copies or substantial portions of the
 * Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * Author(s):
 * James Simmons <jsimmons@infradead.org>
 */

#include <drm/drm_encoder.h>

#include "via_drv.h"
#include "via_encoder.h" // Make sure to include the header file

void via_encoder_destroy(struct drm_encoder *encoder)
{
	struct via_encoder *enc = container_of(encoder, struct via_encoder, base);

	drm_encoder_cleanup(encoder);
	kfree(enc);
}

[File Ends] drivers/gpu/drm/via/via_encoder.c

[File Begins] drivers/gpu/drm/via/via_encoder.h
/*
 * Copyright 2023 The OpenChrome Project
 * [via_encoder.h]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#ifndef __VIA_ENCODER_H__
#define __VIA_ENCODER_H__

#include <drm/drm_encoder.h>

/* Basic encoder functions */
extern const struct drm_encoder_funcs via_crtc_encoder_funcs;
void via_encoder_destroy(struct drm_encoder *encoder);

/* DAC encoder helper functions */
extern const struct drm_encoder_helper_funcs via_dac_encoder_helper_funcs;

/* TMDS encoder helper functions */
extern const struct drm_encoder_helper_funcs via_tmds_encoder_helper_funcs;

/* LVDS encoder helper functions */
extern const struct drm_encoder_helper_funcs via_lvds_encoder_helper_funcs;

/* HDMI encoder helper functions */
extern const struct drm_encoder_helper_funcs via_hdmi_encoder_helper_funcs;

#endif /* __VIA_ENCODER_H__ */

[File Ends] drivers/gpu/drm/via/via_encoder.h

[File Begins] drivers/gpu/drm/via/via_hdmi.c
/*
 * Copyright 2016 The OpenChrome Project
 * [via_hdmi.c]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHOR(S) OR COPYRIGHT HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * Authors:
 * Kevin Brace <kevinbrace@bracecomputerlab.com>
 * Philippe Bruhat <pbruhat@alioth.debian.org>
 */

#include "via_drv.h"
#include "via_hdmi_regs.h"

#include <linux/pci.h>
#include <linux/delay.h>

#include <drm/drm_crtc_helper.h>
#include <drm/drm_edid.h>
#include <drm/drm_modeset_helper_vtables.h>
#include <drm/drm_probe_helper.h>
#include <drm/drm_print.h>


#define HDMI_AUDIO_ENABLED	BIT(0)

int via_hdmi_audio = 0;

MODULE_PARM_DESC(audio, "HDMI Audio enable (1 = enable)");
module_param_named(audio, via_hdmi_audio, int, 0444);

/*
 * Routines for controlling stuff on the HDMI port
 */
static const struct drm_encoder_funcs via_hdmi_enc_funcs = {
	.destroy = via_encoder_destroy,
};

static void via_hdmi_enc_dpms(struct drm_encoder *encoder, int mode)
{
	struct drm_device *dev = encoder->dev;
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);

	switch (mode) {
	case DRM_MODE_DPMS_SUSPEND:
	case DRM_MODE_DPMS_STANDBY:
	case DRM_MODE_DPMS_OFF:
		/* disable HDMI */
		VIA_WRITE_MASK(0xC280, 0x0, 0x2);
		break;

	case DRM_MODE_DPMS_ON:
	default:
		/* enable band gap */
		VIA_WRITE_MASK(0xC740, BIT(0), BIT(0));
		/* enable video */
		VIA_WRITE_MASK(0xC640, BIT(3), BIT(3));
		/* enable HDMI */
		VIA_WRITE_MASK(0xC280, BIT(1), BIT(1));
		break;
	}
}

static bool via_hdmi_enc_mode_fixup(struct drm_encoder *encoder,
				const struct drm_display_mode *mode,
				struct drm_display_mode *adjusted_mode)
{
	uint32_t panelHSyncTime = 0, panelHBlankStart = 0, newHBlankStart = 0;
	uint32_t panelVSyncTime = 0, panelVBlankStart = 0, newVBlankStart = 0;
	uint32_t left_border = 0, right_border = 0;
	uint32_t top_border = 0, bottom_border = 0;

	if (adjusted_mode->flags & DRM_MODE_FLAG_INTERLACE) {
		/* when interlace mode, we should consider halve vertical
		 * timings. */
		panelHSyncTime = adjusted_mode->hsync_end -
					adjusted_mode->hsync_start;
		panelVSyncTime = adjusted_mode->vsync_end / 2 -
					adjusted_mode->vsync_start / 2;
		panelHBlankStart = adjusted_mode->hdisplay;
		panelVBlankStart = adjusted_mode->vdisplay / 2;
		newHBlankStart = adjusted_mode->hdisplay - left_border;
		newVBlankStart = adjusted_mode->vdisplay / 2 - top_border;

		adjusted_mode->hdisplay =
			adjusted_mode->hdisplay - left_border - right_border;
		adjusted_mode->hsync_start =
			(adjusted_mode->hsync_start - panelHBlankStart) +
				newHBlankStart;
		adjusted_mode->hsync_end =
			adjusted_mode->hsync_start + panelHSyncTime;

		adjusted_mode->vdisplay = adjusted_mode->vdisplay / 2 -
						top_border - bottom_border;
		adjusted_mode->vsync_start =
				(adjusted_mode->vsync_start / 2 - panelVBlankStart) +
				newVBlankStart;
		adjusted_mode->vsync_end =
				adjusted_mode->vsync_start + panelVSyncTime;
	} else {
		panelHSyncTime =
			adjusted_mode->hsync_end - adjusted_mode->hsync_start;
		panelVSyncTime =
			adjusted_mode->vsync_end - adjusted_mode->vsync_start;
		panelHBlankStart = adjusted_mode->hdisplay;
		panelVBlankStart = adjusted_mode->vdisplay;
		newHBlankStart = adjusted_mode->hdisplay - left_border;
		newVBlankStart = adjusted_mode->vdisplay - top_border;

		adjusted_mode->hdisplay =
			adjusted_mode->hdisplay - left_border - right_border;
		adjusted_mode->hsync_start =
			(adjusted_mode->hsync_start - panelHBlankStart) +
			newHBlankStart;
		adjusted_mode->hsync_end =
			adjusted_mode->hsync_start + panelHSyncTime;

		adjusted_mode->vdisplay =
			adjusted_mode->vdisplay - top_border - bottom_border;
		adjusted_mode->vsync_start =
			(adjusted_mode->vsync_start - panelVBlankStart) +
			newVBlankStart;
		adjusted_mode->vsync_end =
			adjusted_mode->vsync_start + panelVSyncTime;
	}

	/* Adjust crtc H and V */
	adjusted_mode->crtc_hdisplay = adjusted_mode->hdisplay;
	adjusted_mode->crtc_hblank_start = newHBlankStart;
	adjusted_mode->crtc_hblank_end =
	adjusted_mode->crtc_htotal - left_border;
	adjusted_mode->crtc_hsync_start = adjusted_mode->hsync_start;
	adjusted_mode->crtc_hsync_end = adjusted_mode->hsync_end;

	adjusted_mode->crtc_vdisplay = adjusted_mode->vdisplay;
	adjusted_mode->crtc_vblank_start = newVBlankStart;
	adjusted_mode->crtc_vblank_end =
	adjusted_mode->crtc_vtotal - top_border;
	adjusted_mode->crtc_vsync_start = adjusted_mode->vsync_start;
	adjusted_mode->crtc_vsync_end = adjusted_mode->vsync_end;

	drm_mode_set_crtcinfo(adjusted_mode, 0);
	return true;
}

static void via_hdmi_native_mode_set(struct via_crtc *iga,
					struct drm_display_mode *mode,
					bool audio_off)
{
	struct drm_device *dev = iga->base.dev;
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
	u32 reg_c280, reg_c284;
	int max_packet, delay;
	u8 value = BIT(0);

	/* 135MHz ~ 270MHz */
	if (mode->clock >= 135000)
		VIA_WRITE_MASK(DP_EPHY_PLL_REG, 0x00000000, 0xC0000000);
	/* 67.5MHz ~ <135MHz */
	else if (mode->clock >= 67500)
		VIA_WRITE_MASK(DP_EPHY_PLL_REG, 0x40000000, 0xC0000000);
	/* 33.75MHz ~ <67.5MHz */
	else if (mode->clock >= 33750)
		VIA_WRITE_MASK(DP_EPHY_PLL_REG, 0x80000000, 0xC0000000);
	/* 25MHz ~ <33.75MHz */
	else
		VIA_WRITE_MASK(DP_EPHY_PLL_REG, 0xC0000000, 0xC0000000);

	/* touch C282 when init HDMI by mode 720x576, 720x480,
	 * or other modes */
	if ((mode->hdisplay == 720) && (mode->vdisplay == 576))
		VIA_WRITE(0xC280, 0x18232402);
	else if ((mode->hdisplay == 720) && (mode->vdisplay == 480))
		VIA_WRITE(0xC280, 0x181f2402);
	else
		VIA_WRITE(0xC280, 0x18330002);

	/* init C280 */
	reg_c280 = 0x18000002 | (VIA_READ(0xC280) & 0x40);
	/* sync polarity */
	if (mode->flags & DRM_MODE_FLAG_NHSYNC)
		reg_c280 |= BIT(10);

	if (mode->flags & DRM_MODE_FLAG_NVSYNC)
		reg_c280 |= BIT(13);

	/* calculate correct delay of regC280[22:16] */
	if ((mode->crtc_hsync_start - mode->crtc_hdisplay) > (58 - 11))
		delay = 0;
	else
		delay = 58 - (mode->crtc_hsync_start - mode->crtc_hdisplay) - 11;

	/* calculate max_packet */
	max_packet = (mode->crtc_hblank_end - mode->crtc_hsync_start - 16 - 11 - delay) / 32;
	if (0 == delay)
		delay = mode->crtc_hblank_end - mode->crtc_hsync_start - (32 * max_packet + 16 + 11);

	reg_c280 |= (delay << 16);
	VIA_WRITE(0xC280, reg_c280);
	reg_c284 = 0x00000102 | (max_packet << 28);

	/* power down to reset */
	VIA_WRITE_MASK(0xC740, 0x00000000, 0x06000000);
	/* enable DP data pass */
	VIA_WRITE_MASK(DP_DATA_PASS_ENABLE_REG, 0x00000001, 0x00000001);
	/* select HDMI mode */
	VIA_WRITE_MASK(0xC748, 0, BIT(0));
	/* enable HDMI with HDMI mode */
	VIA_WRITE_MASK(0xC280, 0x00, 0x40);
	/* select AC mode */
	VIA_WRITE_MASK(0xC74C, 0x40, 0x40);
	/* enable InfoFrame */
	VIA_WRITE(0xC284, reg_c284);
	/* set status of Lane0~3 */
	VIA_WRITE_MASK(0xC744, 0x00FFFF82, 0x00FFFF82);
	VIA_WRITE(0xC0B4, 0x92000000);
	/* enable audio packet */
	if (!audio_off)
		VIA_WRITE_MASK(0xC294, 0x10000000, 0x10000000);
	/* enable InfoFrame */
	VIA_WRITE(0xC284, reg_c284);
	VIA_WRITE(0xC284, reg_c284);
	VIA_WRITE_MASK(0xC740, 0x1E4CBE7F, 0x3FFFFFFF);
	VIA_WRITE_MASK(0xC748, 0x84509180, 0x001FFFFF);
	/* Select PHY Function as HDMI */
	/* Select HDTV0 source */
	if (iga->index)
		value |= BIT(1);
	svga_wcrt_mask(VGABASE, 0xFF, value, BIT(1) | BIT(0));
}

static void via_hdmi_enc_mode_set(struct drm_encoder *encoder,
				struct drm_display_mode *mode,
				struct drm_display_mode *adjusted_mode)
{
	struct via_encoder *enc = container_of(encoder, struct via_encoder, base);
	struct via_crtc *iga = container_of(encoder->crtc, struct via_crtc, base);
	struct drm_connector *connector = NULL, *con;
	struct drm_device *dev = encoder->dev;
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);

	list_for_each_entry(con, &dev->mode_config.connector_list, head) {
		if (encoder == con->encoder) {
			connector = con;
			break;
		}
	}

	if (!connector) {
		drm_dbg_driver(dev, "HDMI encoder is not used by any connector\n");
		return;
	}

	if (connector->connector_type == DRM_MODE_CONNECTOR_HDMIA) {
		struct via_connector *con = container_of(connector, struct via_connector, base);
		bool audio_off = (con->flags & HDMI_AUDIO_ENABLED);

		if (enc->di_port == VIA_DI_PORT_NONE)
			via_hdmi_native_mode_set(iga, adjusted_mode, audio_off);

		if (!iga->index)
			via_load_crtc_pixel_timing(encoder->crtc, adjusted_mode);

		/* Set Hsync Offset, delay one clock (To meet 861-D spec.) */
		svga_wcrt_mask(VGABASE, 0x8A, 0x01, 0x7);

		/* If CR8A +1, HSyc must -1 */
		vga_wcrt(VGABASE, 0x56, vga_rcrt(VGABASE, 0x56) - 1);
		vga_wcrt(VGABASE, 0x57, vga_rcrt(VGABASE, 0x57) - 1);

		if (adjusted_mode->flags & DRM_MODE_FLAG_INTERLACE) {
			if (iga->index) {
				/* FIXME VIA where do you get this value from ??? */
				u32 v_sync_adjust = 0;

				svga_wcrt_mask(VGABASE, 0xAB, v_sync_adjust & 0xFF, 0xFF);
				svga_wcrt_mask(VGABASE, 0xAC, (v_sync_adjust & 0x700) >> 8, 0x07);
			}
		} else { /* non-interlace, clear interlace setting. */
			if (iga->index) {
				vga_wcrt(VGABASE, 0xFB, 0);
				svga_wcrt_mask(VGABASE, 0xFC, 0, 0x07);
			}
		}
	} else if (connector->connector_type == DRM_MODE_CONNECTOR_DVID) {
		/* 135MHz ~ 270MHz */
		if (mode->clock >= 135000)
			VIA_WRITE_MASK(DP_EPHY_PLL_REG, 0x00000000, 0xC0000000);
		/* 67.5MHz ~ < 135MHz */
		else if (mode->clock >= 67500)
			VIA_WRITE_MASK(DP_EPHY_PLL_REG, 0x40000000, 0xC0000000);
		/* 33.75MHz ~ < 67.5MHz */
		else if (mode->clock >= 33750)
			VIA_WRITE_MASK(DP_EPHY_PLL_REG, 0x80000000, 0xC0000000);
		/* 25MHz ~ < 33.75MHz */
		else
			VIA_WRITE_MASK(DP_EPHY_PLL_REG, 0xC0000000, 0xC0000000);

		/* Power down TPLL to reset */
		VIA_WRITE_MASK(DP_EPHY_PLL_REG, 0x00000000, 0x06000000);
		/* Enable DP data pass */
		VIA_WRITE_MASK(DP_DATA_PASS_ENABLE_REG, 0x00000001, 0x00000001);
		/* Select EPHY as HDMI mode */
		VIA_WRITE_MASK(DP_EPHY_MISC_PWR_REG, 0, BIT(0));
		/* Enable HDMI with DVI mode */
		VIA_WRITE_MASK(0xC280, 0x40, 0x40);
		/* select AC mode */
		VIA_WRITE_MASK(0xC74C, 0x40, 0x40);
		/* Set status of Lane0~3 */
		VIA_WRITE_MASK(0xC744, 0x00FFFF00, 0x00FFFF00);
		/* Disable InfoFrame */
		VIA_WRITE_MASK(0xC284, 0x00000000, 0x00000002);
		/* EPHY Control Register */
		VIA_WRITE_MASK(DP_EPHY_PLL_REG, 0x1EC46E6F, 0x3FFFFFFF);
		/* Select PHY Function as HDMI */
		svga_wcrt_mask(VGABASE, 0xFF, BIT(0), BIT(0));
		/* Select HDTV0 source */
		if (!iga->index)
			svga_wcrt_mask(VGABASE, 0xFF, 0, BIT(1));
		else
			svga_wcrt_mask(VGABASE, 0xFF, BIT(1), BIT(1));

		/* in 640x480 case, MPLL is different */
		/* For VT3410 internal transmitter 640x480 issue */
		if (mode->hdisplay == 640 && mode->vdisplay == 480) {
			VIA_WRITE(DP_EPHY_PLL_REG, 0xD8C29E6F);
			VIA_WRITE(DP_EPHY_PLL_REG, 0xDEC29E6F);
		}
	}
}

static const struct drm_encoder_helper_funcs via_hdmi_enc_helper_funcs = {
	.dpms = via_hdmi_enc_dpms,
	.mode_fixup = via_hdmi_enc_mode_fixup,
	.mode_set = via_hdmi_enc_mode_set,
};

static unsigned int via_check_hdmi_i2c_status(struct via_drm_priv *dev_priv,
						unsigned int check_bits,
						unsigned int condition)
{
	unsigned int status = true, max = 50, loop = 0;

	if (condition) {
		while ((VIA_READ(0xC0B8) & check_bits) && loop < max) {
			/* delay 20 us */
			udelay(20);

			if (++loop == max)
				status = false;
		}
	} else {
		while (!(VIA_READ(0xC0B8) & check_bits) && loop < max) {
			/* delay 20 us */
			udelay(20);

			if (++loop == max)
				status = false;
		}
	}
	return status;
}

static unsigned int via_ddc_read_bytes_by_hdmi(struct via_drm_priv *dev_priv,
					unsigned int offset,
					unsigned char *block)
{
	unsigned int status = true, temp = 0, i;

	/* Enable DDC */
	VIA_WRITE_MASK(0xC000, 0x00000001, 0x00000001);
	VIA_WRITE(0xC0C4, (VIA_READ(0xC0C4) & 0xFC7FFFFF) | 0x00800000);
	VIA_WRITE(0xC0B8, 0x00000001);

	/* START */
	VIA_WRITE(0xC0B8, 0x0011);
	VIA_WRITE(0xC0B8, 0x0019);
	if (status)
		status = via_check_hdmi_i2c_status(dev_priv, 0x0018, true);

	/* Slave Address */
	temp = 0xA0;
	temp <<= 16;
	temp |= VIA_READ(0xC0B4) & 0xFF00FFFF;
	VIA_WRITE(0xC0B4, temp);
	VIA_WRITE(0xC0B8, 0x0009);
	if (status)
		status = via_check_hdmi_i2c_status(dev_priv, 0x0008, true);

	/* Offset */
	temp = offset;
	temp <<= 16;
	temp |= VIA_READ(0xC0B4) & 0xFF00FFFF;
	VIA_WRITE(0xC0B4, temp);
	VIA_WRITE(0xC0B8, 0x0009);
	if (status)
		status = via_check_hdmi_i2c_status(dev_priv, 0x0008, true);

	/* START */
	VIA_WRITE(0xC0B8, 0x0011);
	VIA_WRITE(0xC0B8, 0x0019);
	if (status)
		status = via_check_hdmi_i2c_status(dev_priv, 0x0018, true);

	/* Slave Address + 1 */
	temp = 0xA1;
	temp <<= 16;
	temp |= VIA_READ(0xC0B4) & 0xFF00FFFF;
	VIA_WRITE(0xC0B4, temp);
	VIA_WRITE(0xC0B8, 0x0009);
	if (status)
		status = via_check_hdmi_i2c_status(dev_priv, 0x0008, true);

	for (i = 0; i < EDID_LENGTH; i++) {
		/* Read Data */
		VIA_WRITE(0xC0B8, 0x0009);
		via_check_hdmi_i2c_status(dev_priv, 0x0008, true);
		via_check_hdmi_i2c_status(dev_priv, 0x0080, false);
		*block++ = (unsigned char) ((VIA_READ(0xC0B4) & 0x0000FF00) >> 8);
		VIA_WRITE(0xC0B8, (VIA_READ(0xC0B8) & ~0x80));
	}

	/* STOP */
	VIA_WRITE(0xC0B8, 0x0021);
	VIA_WRITE(0xC0B8, 0x0029);

	status = via_check_hdmi_i2c_status(dev_priv, 0x0828, true);
	if (!status) {
		/* Reset */
		VIA_WRITE_MASK(0xC0C4, 0x00000080, 0x00000080);
		VIA_WRITE_MASK(0xC0C4, 0x00000000, 0x00000080);
	}
	return status;
}

/* 
 * Fix function signature to match the declaration in the header
 * The function now accepts the i2c_adapter parameter (unused)
 */
struct edid* via_hdmi_get_edid(struct drm_connector *connector, struct i2c_adapter *i2c)
{
	bool print_bad_edid = !connector->bad_edid_counter || (drm_debug_enabled(DRM_UT_KMS));
	struct drm_device *dev = connector->dev;
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
	struct edid *edid = NULL;
	int i, j = 0;
	u8 *block;

	/* Clear out old EDID block */
	drm_connector_update_edid_property(connector, edid);

	block = kmalloc(EDID_LENGTH, GFP_KERNEL);
	if (!block)
		return edid;

	/* base block fetch */
	for (i = 0; i < 4; i++) {
		if (!via_ddc_read_bytes_by_hdmi(dev_priv, 0, block))
			goto out;

		 /* Cast the raw block to struct edid * when calling drm_edid_is_valid */
		if (drm_edid_is_valid((struct edid *)block))
			break;

		if (i == 0 && !memchr_inv(block, 0, EDID_LENGTH)) {
			connector->null_edid_counter++;
			goto carp;
		}
	}
	if (i == 4)
		goto carp;

	/* parse the extensions if present */
	if (block[0x7e]) {
		u8 *new = krealloc(block, (block[0x7e] + 1) * EDID_LENGTH, GFP_KERNEL);
		int valid_extensions = 0, offset = 0;

		if (!new)
			goto out;
		block = new;

		for (j = 1; j <= block[0x7e]; j++) {
			for (i = 0; i < 4; i++) {
				offset = (valid_extensions + 1) * EDID_LENGTH;
				new = block + offset;

				if (!via_ddc_read_bytes_by_hdmi(dev_priv,
								 offset, new))
					goto out;

				 /* Cast the raw block to struct edid * when calling drm_edid_is_valid */
				if (drm_edid_is_valid((struct edid *)new)) {
					valid_extensions++;
					break;
				}
			}

			if (i == 4 && print_bad_edid) {
				dev_warn(connector->dev->dev,
					"%s: Ignoring invalid EDID block %d.\n",
					connector->name, j);

				connector->bad_edid_counter++;
			}
		}

		if (valid_extensions != block[0x7e]) {
			block[EDID_LENGTH - 1] += block[0x7e] - valid_extensions;
			block[0x7e] = valid_extensions;

			new = krealloc(block, (valid_extensions + 1) * EDID_LENGTH, GFP_KERNEL);
			if (!new)
				goto out;
			block = new;
		}
	}
	edid = (struct edid *) block;
	drm_connector_update_edid_property(connector, edid);
	return edid;

carp:
	if (print_bad_edid) {
		dev_warn(connector->dev->dev, "%s: EDID block %d invalid.\n",
			 connector->name, j);
	}
	connector->bad_edid_counter++;
out:
	kfree(block);
	return edid;
}

/* Remove static keyword to match the external declaration */
enum drm_connector_status
via_hdmi_detect(struct drm_connector *connector, bool force)
{
	struct drm_device *dev = connector->dev;
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
	enum drm_connector_status ret = connector_status_disconnected;
	u32 mm_c730 = VIA_READ(0xc730) & 0xC0000000;
	struct edid *edid = NULL;

	if (VIA_IRQ_DP_HOT_UNPLUG == mm_c730) {
		drm_connector_update_edid_property(connector, NULL);
		return ret;
	}

	/* Pass NULL for i2c since our implementation doesn't use it */
	edid = via_hdmi_get_edid(connector, NULL);
	if (edid) {
		if ((connector->connector_type != DRM_MODE_CONNECTOR_HDMIA) ^
			(drm_detect_hdmi_monitor(edid)))
			ret = connector_status_connected;
	}
	return ret;
}

static int via_hdmi_set_property(struct drm_connector *connector,
					struct drm_property *property,
					uint64_t value)
{
	struct drm_device *dev = connector->dev;

	if (property == dev->mode_config.dpms_property && connector->encoder)
		via_hdmi_enc_dpms(connector->encoder, (uint32_t)(value & 0xf));
	return 0;
}

static const struct drm_connector_funcs via_hdmi_connector_funcs = {
	.dpms = drm_helper_connector_dpms,
	.detect = via_hdmi_detect,
	.fill_modes = drm_helper_probe_single_connector_modes,
	.set_property = via_hdmi_set_property,
	.destroy = via_connector_destroy,
	.reset = drm_atomic_helper_connector_reset,
	.atomic_duplicate_state =
			drm_atomic_helper_connector_duplicate_state,
	.atomic_destroy_state =
			drm_atomic_helper_connector_destroy_state,
};

static int via_hdmi_mode_valid(struct drm_connector *connector,
				struct drm_display_mode *mode)
{
	return MODE_OK;
}

static int via_hdmi_get_modes(struct drm_connector *connector)
{
	/* Pass NULL for i2c since our implementation doesn't use it */
	struct edid *edid = via_hdmi_get_edid(connector, NULL);

	if (edid) {
		struct via_connector *con;

		if (edid->input & DRM_EDID_INPUT_DIGITAL) {
			con = container_of(connector, struct via_connector, base);

			if (via_hdmi_audio)
				con->flags |= drm_detect_monitor_audio(edid);
		}
	}
	return drm_add_edid_modes(connector, edid);
}

static const struct drm_connector_helper_funcs via_hdmi_connector_helper_funcs = {
	.mode_valid = via_hdmi_mode_valid,
	.get_modes = via_hdmi_get_modes,
};

void via_hdmi_init(struct drm_device *dev, u32 di_port)
{
	struct via_connector *dvi, *hdmi;
	struct via_encoder *enc;

	/* Allocate one encoder and two connectors */
	enc = kzalloc(sizeof(*enc), GFP_KERNEL);
	if (!enc) {
		drm_err(dev, "Failed to allocate encoder\n");
		return;
	}
	
	hdmi = kzalloc(sizeof(*hdmi), GFP_KERNEL);
	if (!hdmi) {
		kfree(enc);
		drm_err(dev, "Failed to allocate HDMI connector\n");
		return;
	}
	
	dvi = kzalloc(sizeof(*dvi), GFP_KERNEL);
	if (!dvi) {
		kfree(enc);
		kfree(hdmi);
		drm_err(dev, "Failed to allocate DVI connector\n");
		return;
	}

	/* Setup the encoders and attach them */
	drm_encoder_init(dev, &enc->base, &via_hdmi_enc_funcs,
						DRM_MODE_ENCODER_TMDS, NULL);
	drm_encoder_helper_add(&enc->base, &via_hdmi_enc_helper_funcs);

	enc->base.possible_crtcs = BIT(1) | BIT(0);
	enc->base.possible_clones = 0;
	enc->di_port = di_port;

	/* Setup the HDMI connector */
	via_connector_init(&hdmi->base, &via_hdmi_connector_funcs, DRM_MODE_CONNECTOR_HDMIA);
	drm_connector_helper_add(&hdmi->base, &via_hdmi_connector_helper_funcs);
	drm_connector_register(&hdmi->base);

	hdmi->base.polled = DRM_CONNECTOR_POLL_HPD;
	hdmi->base.doublescan_allowed = false;
	hdmi->base.interlace_allowed = true;
	INIT_LIST_HEAD(&hdmi->props);

	drm_connector_attach_encoder(&hdmi->base, &enc->base);

	/* Setup the DVI connector */
	via_connector_init(&dvi->base, &via_hdmi_connector_funcs, DRM_MODE_CONNECTOR_DVID);
	drm_connector_helper_add(&dvi->base, &via_hdmi_connector_helper_funcs);
	drm_connector_register(&dvi->base);

	dvi->base.polled = DRM_CONNECTOR_POLL_HPD;
	dvi->base.doublescan_allowed = false;
	dvi->base.interlace_allowed = true;
	INIT_LIST_HEAD(&dvi->props);

	drm_connector_attach_encoder(&dvi->base, &enc->base);
}

[File Ends] drivers/gpu/drm/via/via_hdmi.c

[File Begins] drivers/gpu/drm/via/via_hdmi_regs.h
/*
 * Copyright 2023 The OpenChrome Project
 * [via_hdmi_regs.h]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHOR(S) OR COPYRIGHT HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#ifndef __VIA_HDMI_REGS_H__
#define __VIA_HDMI_REGS_H__

/* DisplayPort/HDMI register definitions */
#define DP_EPHY_PLL_REG             0xC280
#define DP_DATA_PASS_ENABLE_REG     0xC640
#define DP_EPHY_MISC_PWR_REG        0xC288

/* DisplayPort/HDMI IRQ definitions */
#define VIA_IRQ_DP_HOT_UNPLUG       0x00000001

/* Digital Interface port types */
#define VIA_DI_PORT_NONE            0
#define VIA_DI_PORT_HDMI            1
#define VIA_DI_PORT_DP              2

/* Function prototypes - update to match implementation */
void via_hdmi_init(struct drm_device *dev, u32 di_port);
enum drm_connector_status via_hdmi_detect(struct drm_connector *connector, bool force);
struct edid *via_hdmi_get_edid(struct drm_connector *connector, struct i2c_adapter *i2c);

#endif /* __VIA_HDMI_REGS_H__ */

[File Ends] drivers/gpu/drm/via/via_hdmi_regs.h

[File Begins] drivers/gpu/drm/via/via_i2c.c
// SPDX-License-Identifier: GPL-2.0-or-later
/*
 * Copyright 2012 James Simmons. All Rights Reserved.
 * Copyright 1998-2009 VIA Technologies, Inc. All Rights Reserved.
 * Copyright 2001-2008 S3 Graphics, Inc. All Rights Reserved.
 *
 * Author(s):
 * James Simmons <jsimmons@infradead.org>
 * Kevin Brace <kevinbrace@bracecomputerlab.com>  2017-2020, 2024
 */

/*
 * Copyright 2023 The OpenChrome Project
 * [via_i2c.c]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <linux/delay.h>
#include <linux/i2c.h>
#include <linux/i2c-algo-bit.h>
#include <linux/module.h>

#include <uapi/linux/i2c.h>

#include "via_drv.h"
#include "via_i2c.h"
#include "via_connector.h"

#define SERIAL	0
#define	GPIO	1

/* I2C bus adapter structure array - holds configuration for all supported I2C buses */
struct via_i2c_stuff {
    u16 i2c_port;          /* GPIO or I2C port */
    u16 is_active;         /* Being used as I2C? */
    struct i2c_adapter adapter;
    struct i2c_algo_bit_data algo;
};

/* Make the adapter array global so other modules can find it */
struct via_i2c_stuff via_i2c_adapters[5] = {
    { .i2c_port = 0, .is_active = 0, .adapter = { .name = "" }, .algo = { 0 } },
    { .i2c_port = 0, .is_active = 0, .adapter = { .name = "" }, .algo = { 0 } },
    { .i2c_port = 0, .is_active = 0, .adapter = { .name = "" }, .algo = { 0 } },
    { .i2c_port = 0, .is_active = 0, .adapter = { .name = "" }, .algo = { 0 } },
    { .i2c_port = 0, .is_active = 0, .adapter = { .name = "" }, .algo = { 0 } }
};
EXPORT_SYMBOL_GPL(via_i2c_adapters);

/* Provide a global I2C parameters structure for compatibility with older code */
struct via_i2c_par_t {
    struct drm_device *dev;
    u32 bus_index;
    u32 ddc_base;
};

struct via_i2c_par_t via_i2c_par;
EXPORT_SYMBOL_GPL(via_i2c_par);

/* 
 * Set I2C SDA line
 * Sets the I2C SDA line to high (1) or low (0)
 */
static void via_i2c_setsda(void *data, int state)
{
    struct via_i2c_stuff *i2c = data;
    struct drm_device *dev = i2c_get_adapdata(&i2c->adapter);
    struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
    u8 value, mask;

    if (i2c->is_active == GPIO) {
        mask = state ? BIT(6) : BIT(6) | BIT(4);
        value = state ? 0x00 : BIT(6);
    } else {
        value = state ? BIT(4) | BIT(0) : BIT(0);
        mask = BIT(4) | BIT(0);
    }

    svga_wseq_mask(VGABASE, i2c->i2c_port, value, mask);
}

/* 
 * Set I2C SCL line
 * Sets the I2C SCL (clock) line to high (1) or low (0)
 */
static void via_i2c_setscl(void *data, int state)
{
    struct via_i2c_stuff *i2c = data;
    struct drm_device *dev = i2c_get_adapdata(&i2c->adapter);
    struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
    u8 value, mask;

    if (i2c->is_active == GPIO) {
        mask = state ? BIT(7) : BIT(7) | BIT(5);
        value = state ? 0x00 : BIT(7);
    } else {
        value = state ? BIT(5) | BIT(0) : BIT(0);
        mask = BIT(5) | BIT(0);
    }

    svga_wseq_mask(VGABASE, i2c->i2c_port, value, mask);
}

/* 
 * Get I2C SDA line state
 * Returns the state of the I2C SDA line (1 for high, 0 for low)
 */
static int via_i2c_getsda(void *data)
{
    struct via_i2c_stuff *i2c = data;
    struct drm_device *dev = i2c_get_adapdata(&i2c->adapter);
    struct via_drm_priv *dev_priv = to_via_drm_priv(dev);

    return !!(vga_rseq(VGABASE, i2c->i2c_port) & BIT(2));
}

/* 
 * Get I2C SCL line state
 * Returns the state of the I2C SCL line (1 for high, 0 for low)
 */
static int via_i2c_getscl(void *data)
{
    struct via_i2c_stuff *i2c = data;
    struct drm_device *dev = i2c_get_adapdata(&i2c->adapter);
    struct via_drm_priv *dev_priv = to_via_drm_priv(dev);

    return !!(vga_rseq(VGABASE, i2c->i2c_port) & BIT(3));
}

/* 
 * Create I2C bus
 * Sets up an I2C bus with the specified parameters
 */
static int create_i2c_bus(struct drm_device *dev,
                         struct via_i2c_stuff *i2c_par)
{
    struct i2c_adapter *adapter = &i2c_par->adapter;
    struct i2c_algo_bit_data *algo = &i2c_par->algo;
    int ret;

    /* Set up the algorithm structure with our bit-banging functions */
    algo->setsda = via_i2c_setsda;
    algo->setscl = via_i2c_setscl;
    algo->getsda = via_i2c_getsda;
    algo->getscl = via_i2c_getscl;
    algo->udelay = 15;  /* 15 microseconds delay between clock edges */
    algo->timeout = usecs_to_jiffies(2200); /* 2.2ms timeout from VESA spec */
    algo->data = i2c_par;

    /* Set up the adapter structure */
    snprintf(adapter->name, sizeof(adapter->name),
             "via i2c bit bus 0x%02x", i2c_par->i2c_port);
    adapter->owner = THIS_MODULE;
    adapter->algo_data = algo;
    i2c_set_adapdata(adapter, dev);

    /* Initialize the bus lines to idle state (high) */
    via_i2c_setsda(i2c_par, 1);
    via_i2c_setscl(i2c_par, 1);
    udelay(20);

    /* Register the adapter with the I2C subsystem */
    ret = i2c_bit_add_bus(adapter);
    if (ret < 0) {
        drm_err(dev, "Failed to register I2C bus 0x%02x: %d\n", 
                i2c_par->i2c_port, ret);
    } else {
        drm_dbg_kms(dev, "Registered I2C bus 0x%02x\n", i2c_par->i2c_port);
    }

    return ret;
}

/* 
 * Read bytes from I2C device
 * Reads data from the specified I2C device at the specified offset
 */
void via_i2c_readbytes(struct i2c_adapter *adapter,
                      u8 slave_addr, char offset,
                      u8 *buffer, unsigned int size)
{
    u8 out_buf[2];
    u8 in_buf[256]; /* Ensure buffer is large enough for any request */
    int ret;
    struct via_i2c_stuff *i2c = i2c_get_adapdata(adapter);
    struct drm_device *dev = i2c_get_adapdata(&i2c->adapter);
    struct i2c_msg msgs[] = {
        {
            .addr = slave_addr,
            .flags = 0,
            .len = 1,
            .buf = out_buf,
        },
        {
            .addr = slave_addr,
            .flags = I2C_M_RD,
            .len = size,
            .buf = in_buf,
        }
    };

    /* Safety check for buffer size */
    if (size > sizeof(in_buf)) {
        drm_err(dev, "I2C read request too large (%u bytes)\n", size);
        return;
    }

    /* Prepare the write message with the offset */
    out_buf[0] = offset;

    /* Execute the transaction */
    ret = i2c_transfer(adapter, msgs, 2);
    if (ret != 2) {
        drm_err(dev, "I2C read failed: %d\n", ret);
        return;
    }

    /* Copy the data to the output buffer */
    memcpy(buffer, in_buf, size);
}

/* 
 * Write bytes to I2C device
 * Writes data to the specified I2C device at the specified offset
 */
void via_i2c_writebytes(struct i2c_adapter *adapter,
                       u8 slave_addr, char offset,
                       u8 *data, unsigned int size)
{
    u8 *out_buf;
    int ret;
    struct via_i2c_stuff *i2c = i2c_get_adapdata(adapter);
    struct drm_device *dev = i2c_get_adapdata(&i2c->adapter);
    struct i2c_msg msg = { 0 };

    /* Allocate a buffer for the offset + data */
    out_buf = kzalloc(size + 1, GFP_KERNEL);
    if (!out_buf) {
        drm_err(dev, "Failed to allocate I2C write buffer\n");
        return;
    }

    /* Prepare the message with offset and data */
    out_buf[0] = offset;
    memcpy(&out_buf[1], data, size);
    
    msg.addr = slave_addr;
    msg.flags = 0;
    msg.len = size + 1;
    msg.buf = out_buf;

    /* Execute the transaction */
    ret = i2c_transfer(adapter, &msg, 1);
    if (ret != 1) {
        drm_err(dev, "I2C write failed: %d\n", ret);
    }

    /* Free the allocated buffer */
    kfree(out_buf);
}

/* 
 * Initialize I2C registers
 * Sets up the I2C registers for the OpenChrome hardware
 */
void via_i2c_reg_init(struct via_drm_priv *dev_priv)
{
    struct drm_device *dev = &dev_priv->dev;

    drm_dbg_kms(dev, "Initializing I2C registers\n");

    /* Initialize I2C registers based on VIA hardware documentation */
    svga_wseq_mask(VGABASE, 0x31, 0x30, 0x30);
    svga_wseq_mask(VGABASE, 0x26, 0x30, 0x30);
    vga_wseq(VGABASE, 0x2C, 0xc2);
    vga_wseq(VGABASE, 0x3D, 0xc0);
    svga_wseq_mask(VGABASE, 0x2C, 0x30, 0x30);
    svga_wseq_mask(VGABASE, 0x3D, 0x30, 0x30);
}

/* 
 * Initialize I2C subsystem
 * Sets up all I2C buses for the OpenChrome driver
 */
int via_i2c_init(struct drm_device *dev)
{
    /* Define types and ports for all 5 supported I2C buses */
    int types[] = { SERIAL, SERIAL, GPIO, GPIO, GPIO };
    int ports[] = { VIA_I2C_PORT_0, VIA_I2C_PORT_1, VIA_I2C_PORT_2, 
                   VIA_I2C_PORT_3, VIA_I2C_PORT_4 };
    int count = ARRAY_SIZE(via_i2c_adapters);
    int ret, i;
    struct via_i2c_stuff *i2c = via_i2c_adapters;

    drm_dbg_kms(dev, "Initializing I2C buses\n");

    /* Initialize each I2C bus */
    for (i = 0; i < count; i++) {
        i2c->is_active = types[i];
        i2c->i2c_port = ports[i];

        ret = create_i2c_bus(dev, i2c);
        if (ret < 0) {
            drm_err(dev, "Failed to create I2C bus %d (port 0x%x): %d\n",
                   i, ports[i], ret);
        } else {
            drm_dbg_kms(dev, "Created I2C bus %d (port 0x%x)\n", 
                        i, ports[i]);
        }
        i2c++;
    }

    return 0;
}

/* 
 * Clean up I2C subsystem
 * Releases I2C resources when the driver is unloaded
 */
void via_i2c_exit(void)
{
    int i;

    /* Unregister each I2C adapter */
    for (i = 0; i < ARRAY_SIZE(via_i2c_adapters); i++) {
        if (via_i2c_adapters[i].adapter.algo_data) {
            i2c_del_adapter(&via_i2c_adapters[i].adapter);
        }
    }
}

/* 
 * Find I2C bus by port number
 * Returns the I2C adapter for the specified port
 */
struct i2c_adapter *via_find_ddc_bus(int port)
{
    int i;

    for (i = 0; i < ARRAY_SIZE(via_i2c_adapters); i++) {
        if (via_i2c_adapters[i].i2c_port == port) {
            return &via_i2c_adapters[i].adapter;
        }
    }
    
    return NULL;
}
[File Ends] drivers/gpu/drm/via/via_i2c.c

[File Begins] drivers/gpu/drm/via/via_i2c.h
/*
 * Copyright 2023 The OpenChrome Project
 * [via_i2c.h]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#ifndef __VIA_I2C_H__
#define __VIA_I2C_H__

#include <linux/i2c.h>

/* I2C bus port definitions (used by via_i2c_adapters) */
#define VIA_I2C_PORT_0     0x26
#define VIA_I2C_PORT_1     0x31
#define VIA_I2C_PORT_2     0x25
#define VIA_I2C_PORT_3     0x2C
#define VIA_I2C_PORT_4     0x3D

/* I2C functions */
int via_i2c_init(struct drm_device *dev);
void via_i2c_exit(void);
void via_i2c_reg_init(struct via_drm_priv *dev_priv);

/* I2C transfer functions for device communication */
void via_i2c_readbytes(struct i2c_adapter *adapter,
                      u8 slave_addr, char offset,
                      u8 *buffer, unsigned int size);
                      
void via_i2c_writebytes(struct i2c_adapter *adapter, 
                       u8 slave_addr, char offset,
                       u8 *data, unsigned int size);

/* Find I2C adapter by port */
struct i2c_adapter *via_find_ddc_bus(int port);

/* External variables */
extern struct via_i2c_par_t via_i2c_par;

#endif /* __VIA_I2C_H__ */

[File Ends] drivers/gpu/drm/via/via_i2c.h

[File Begins] drivers/gpu/drm/via/via_init.c
/*
 * Copyright © 2019 Kevin Brace.
 * Copyright 2012 James Simmons. All Rights Reserved.
 * Copyright 2006-2009 Luc Verhaegen.
 * Copyright 1998-2009 VIA Technologies, Inc. All Rights Reserved.
 * Copyright 2001-2009 S3 Graphics, Inc. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHOR(S) OR COPYRIGHT HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES, OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * Author(s):
 * Kevin Brace <kevinbrace@bracecomputerlab.com>
 * James Simmons <jsimmons@infradead.org>
 * Luc Verhaegen
 */

#include <linux/pci.h>

#include <drm/drm_atomic_helper.h>
#include <drm/drm_crtc_helper.h>
#include <drm/drm_gem_framebuffer_helper.h>
#include <drm/drm_mode_config.h>
#include <drm/drm_probe_helper.h>
/* Remove the drm_irq.h include as it doesn't exist in this kernel version */

#include "via_drv.h"
#include "via_hdmi_regs.h"

/* Add external declarations for variables defined in via_drv.c */
extern int via_modeset;
extern struct pci_driver via_pci_driver;


static int cle266_mem_type(struct drm_device *dev)
{
	struct pci_dev *gfx_dev = to_pci_dev(dev->dev);
	struct pci_dev *bridge_fn0_dev;
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
	u8 fsb, freq, type;
	int ret;

	bridge_fn0_dev =
		pci_get_domain_bus_and_slot(pci_domain_nr(gfx_dev->bus), 0,
						PCI_DEVFN(0, 0));
	if (!bridge_fn0_dev) {
		ret = -ENODEV;
		drm_err(dev, "Host Bridge Function 0 not found! errno: %d\n",
			ret);
		goto exit;
	}

	/* Always use bridge_fn0_dev for PCI reads, not gfx_dev */
	ret = pci_read_config_byte(bridge_fn0_dev, 0x54, &fsb);
	if (ret) {
		goto error_pci_cfg_read;
	}

	ret = pci_read_config_byte(bridge_fn0_dev, 0x69, &freq);
	if (ret) {
		goto error_pci_cfg_read;
	}

	fsb >>= 6;
	freq >>= 6;

	/* FSB frequency */
	switch (fsb) {
	case 0x01: /* 100MHz */
		switch (freq) {
		case 0x00:
			freq = 100;
			break;
		case 0x01:
			freq = 133;
			break;
		case 0x02:
			freq = 66;
			break;
		default:
			freq = 0;
			break;
		}

		break;
	case 0x02: /* 133 MHz */
	case 0x03:
		switch (freq) {
		case 0x00:
			freq = 133;
			break;
		case 0x02:
			freq = 100;
			break;
		default:
			freq = 0;
			break;
		}

		break;
	default:
		freq = 0;
		break;
	}

	ret = pci_read_config_byte(bridge_fn0_dev, 0x60, &fsb);
	if (ret) {
		goto error_pci_cfg_read;
	}

	ret = pci_read_config_byte(bridge_fn0_dev, 0xe3, &type);
	if (ret) {
		goto error_pci_cfg_read;
	}

	/* On bank 2/3 */
	if (type & 0x02) {
		fsb >>= 2;
	}

	/* Memory type */
	switch (fsb & 0x03) {
	case 0x00: /* SDR */
		switch (freq) {
		case 66:
			dev_priv->vram_type = VIA_MEM_SDR66;
			break;
		case 100:
			dev_priv->vram_type = VIA_MEM_SDR100;
			break;
		case 133:
			dev_priv->vram_type = VIA_MEM_SDR133;
			break;
		default:
			break;
		}

		break;
	case 0x02: /* DDR */
		switch (freq) {
		case 100:
			dev_priv->vram_type = VIA_MEM_DDR200;
			break;
		case 133:
			dev_priv->vram_type = VIA_MEM_DDR266;
			break;
		default:
			break;
		}

		break;
	default:
		break;
	}

	goto exit;
error_pci_cfg_read:
	drm_err(dev, "PCI configuration space read error! errno: %d\n", ret);
exit:
	return ret;
}

static int km400_mem_type(struct drm_device *dev)
{
	struct pci_dev *gfx_dev = to_pci_dev(dev->dev);
	struct pci_dev *bridge_fn0_dev;
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
	u8 fsb, freq, rev;
	int ret;

	bridge_fn0_dev =
		pci_get_domain_bus_and_slot(pci_domain_nr(gfx_dev->bus), 0,
						PCI_DEVFN(0, 0));
	if (!bridge_fn0_dev) {
		ret = -ENODEV;
		drm_err(dev, "Host Bridge Function 0 not found! errno: %d\n",
			ret);
		goto exit;
	}

	/* Always use bridge_fn0_dev for PCI reads, not gfx_dev */
	ret = pci_read_config_byte(bridge_fn0_dev, 0x54, &fsb);
	if (ret) {
		goto error_pci_cfg_read;
	}

	ret = pci_read_config_byte(bridge_fn0_dev, 0x69, &freq);
	if (ret) {
		goto error_pci_cfg_read;
	}

	fsb >>= 6;
	freq >>= 6;

	ret = pci_read_config_byte(bridge_fn0_dev, 0xf6, &rev);
	if (ret) {
		goto error_pci_cfg_read;
	}

	/* KM400 */
	if (rev < 0x80) {
		/* FSB frequency */
		switch (fsb) {
		case 0x00:
			switch (freq) {
			case 0x00:
				dev_priv->vram_type = VIA_MEM_DDR200;
				break;
			case 0x01:
				dev_priv->vram_type = VIA_MEM_DDR266;
				break;
			case 0x02:
				dev_priv->vram_type = VIA_MEM_DDR400;
				break;
			case 0x03:
				dev_priv->vram_type = VIA_MEM_DDR333;
				break;
			default:
				break;
			}

			break;
		case 0x01:
			switch (freq) {
			case 0x00:
				dev_priv->vram_type = VIA_MEM_DDR266;
				break;
			case 0x01:
				dev_priv->vram_type = VIA_MEM_DDR333;
				break;
			case 0x02:
				dev_priv->vram_type = VIA_MEM_DDR400;
				break;
			default:
				break;
			}

			break;
		case 0x02:
		case 0x03:
			switch (freq) {
			case 0x00:
				dev_priv->vram_type = VIA_MEM_DDR333;
				break;
			case 0x02:
				dev_priv->vram_type = VIA_MEM_DDR400;
				break;
			case 0x03:
				dev_priv->vram_type = VIA_MEM_DDR266;
				break;
			default:
				break;
			}

			break;
		default:
			break;
		}
	} else {
		/* KM400A */
		ret = pci_read_config_byte(bridge_fn0_dev, 0x67, &rev);
		if (ret) {
			goto error_pci_cfg_read;
		}

		if (rev & 0x80)
			freq |= 0x04;

		switch (fsb) {
		case 0x00:
			switch (freq) {
			case 0x00:
				dev_priv->vram_type = VIA_MEM_DDR200;
				break;
			case 0x01:
				dev_priv->vram_type = VIA_MEM_DDR266;
				break;
			case 0x03:
				dev_priv->vram_type = VIA_MEM_DDR333;
				break;
			case 0x07:
				dev_priv->vram_type = VIA_MEM_DDR400;
				break;
			default:
				break;
			}

			break;
		case 0x01:
			switch (freq) {
			case 0x00:
				dev_priv->vram_type = VIA_MEM_DDR266;
				break;
			case 0x01:
				dev_priv->vram_type = VIA_MEM_DDR333;
				break;
			case 0x03:
				dev_priv->vram_type = VIA_MEM_DDR400;
				break;
			default:
				break;
			}

			break;
		case 0x02:
			switch (freq) {
			case 0x00:
				dev_priv->vram_type = VIA_MEM_DDR400;
				break;
			case 0x04:
				dev_priv->vram_type = VIA_MEM_DDR333;
				break;
			case 0x06:
				dev_priv->vram_type = VIA_MEM_DDR266;
				break;
			default:
				break;
			}

			break;
		case 0x03:
			switch (freq) {
			case 0x00:
				dev_priv->vram_type = VIA_MEM_DDR333;
				break;
			case 0x01:
				dev_priv->vram_type = VIA_MEM_DDR400;
				break;
			case 0x04:
				dev_priv->vram_type = VIA_MEM_DDR266;
				break;
			default:
				break;
			}

			break;
		default:
			break;
		}
	}

	goto exit;
error_pci_cfg_read:
	drm_err(dev, "PCI configuration space read error! errno: %d\n", ret);
exit:
	return ret;
}

static int p4m800_mem_type(struct drm_device *dev)
{
	struct pci_dev *gfx_dev = to_pci_dev(dev->dev);
	struct pci_dev *bridge_fn3_dev, *bridge_fn4_dev;
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
	int freq = 0;
	u8 fsb, type;
	int ret;

	bridge_fn3_dev =
		pci_get_domain_bus_and_slot(pci_domain_nr(gfx_dev->bus), 0,
						PCI_DEVFN(0, 3));
	if (!bridge_fn3_dev) {
		ret = -ENODEV;
		drm_err(dev, "Host Bridge Function 3 not found! errno: %d\n",
			ret);
		goto exit;
	}

	bridge_fn4_dev =
		pci_get_domain_bus_and_slot(pci_domain_nr(gfx_dev->bus), 0,
						PCI_DEVFN(0, 4));
	if (!bridge_fn4_dev) {
		ret = -ENODEV;
		drm_err(dev, "Host Bridge Function 4 not found! errno: %d\n",
			ret);
		goto exit;
	}

	/* VIA Scratch region - make sure to use bridge_fn4_dev, not gfx_dev */
	ret = pci_read_config_byte(bridge_fn4_dev, 0xf3, &fsb);
	if (ret) {
		goto error_pci_cfg_read;
	}

	fsb >>= 5;
	switch (fsb) {
	case 0x00:
		freq = 0x03; /* 100 MHz */
		break;
	case 0x01:
		freq = 0x04; /* 133 MHz */
		break;
	case 0x02:
		freq = 0x06; /* 200 MHz */
		break;
	default:
		break;
	}

	/* Make sure to use bridge_fn3_dev, not gfx_dev */
	ret = pci_read_config_byte(bridge_fn3_dev, 0x68, &type);
	if (ret) {
		goto error_pci_cfg_read;
	}

	type &= 0x0f;
	if (type & 0x02) {
		freq -= type >> 2;
	} else {
		freq += type >> 2;
		if (type & 0x01)
			freq++;
	}

	switch (freq) {
	case 0x03:
		dev_priv->vram_type = VIA_MEM_DDR200;
		break;
	case 0x04:
		dev_priv->vram_type = VIA_MEM_DDR266;
		break;
	case 0x05:
		dev_priv->vram_type = VIA_MEM_DDR333;
		break;
	case 0x06:
		dev_priv->vram_type = VIA_MEM_DDR400;
		break;
	default:
		break;
	}

	goto exit;
error_pci_cfg_read:
	drm_err(dev, "PCI configuration space read error! errno: %d\n", ret);
exit:
	return ret;
}

static int km8xx_mem_type(struct drm_device *dev)
{
	struct pci_dev *dram, *misc = NULL;
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
	u8 type, tmp;
	int ret = -ENXIO;

	dram = pci_get_device(PCI_VENDOR_ID_AMD,
				PCI_DEVICE_ID_AMD_K8_NB_MEMCTL, NULL);
	if (dram) {
		misc = pci_get_device(PCI_VENDOR_ID_AMD,
					PCI_DEVICE_ID_AMD_K8_NB_MISC, NULL);

		ret = pci_read_config_byte(misc, 0xfd, &type);
		if (ret) {
			goto error_pci_cfg_read;
		}

		if (type) {
			pci_read_config_byte(dram, 0x94, &type);
			if (ret) {
				goto error_pci_cfg_read;
			}

			switch (type & 0x03) {
			case 0x00:
				dev_priv->vram_type = VIA_MEM_DDR2_400;
				break;
			case 0x01:
				dev_priv->vram_type = VIA_MEM_DDR2_533;
				break;
			case 0x02:
				dev_priv->vram_type = VIA_MEM_DDR2_667;
				break;
			case 0x03:
				dev_priv->vram_type = VIA_MEM_DDR2_800;
				break;
			default:
				break;
			}
		} else {
			ret = pci_read_config_byte(dram, 0x96, &type);
			if (ret) {
				goto error_pci_cfg_read;
			}

			type >>= 4;
			type &= 0x07;

			switch (type) {
			case 0x00:
				dev_priv->vram_type = VIA_MEM_DDR200;
				break;
			case 0x02:
				dev_priv->vram_type = VIA_MEM_DDR266;
				break;
			case 0x05:
				dev_priv->vram_type = VIA_MEM_DDR333;
				break;
			case 0x07:
				dev_priv->vram_type = VIA_MEM_DDR400;
				break;
			default:
				break;
			}
		}
	}

	/* AMD 10h DRAM Controller */
	dram = pci_get_device(PCI_VENDOR_ID_AMD,
				PCI_DEVICE_ID_AMD_10H_NB_DRAM, NULL);
	if (dram) {
		ret = pci_read_config_byte(misc, 0x94, &tmp);
		if (ret) {
			goto error_pci_cfg_read;
		}

		ret = pci_read_config_byte(misc, 0x95, &type);
		if (ret) {
			goto error_pci_cfg_read;
		}

		if (type & 0x01) {	/* DDR3 */
			switch (tmp & 0x07) {
			case 0x03:
				dev_priv->vram_type = VIA_MEM_DDR3_800;
				break;
			case 0x04:
				dev_priv->vram_type = VIA_MEM_DDR3_1066;
				break;
			case 0x05:
				dev_priv->vram_type = VIA_MEM_DDR3_1333;
				break;
			case 0x06:
				dev_priv->vram_type = VIA_MEM_DDR3_1600;
				break;
			default:
				break;
			}
		} else {		/* DDR2 */
			switch (tmp & 0x07) {
			case 0x00:
				dev_priv->vram_type = VIA_MEM_DDR2_400;
				break;
			case 0x01:
				dev_priv->vram_type = VIA_MEM_DDR2_533;
				break;
			case 0x02:
				dev_priv->vram_type = VIA_MEM_DDR2_667;
				break;
			case 0x03:
				dev_priv->vram_type = VIA_MEM_DDR2_800;
				break;
			case 0x04:
				dev_priv->vram_type = VIA_MEM_DDR2_1066;
				break;
			default:
				break;
			}
		}
	}

	/* AMD 11h DRAM Controller */
	dram = pci_get_device(PCI_VENDOR_ID_AMD,
				PCI_DEVICE_ID_AMD_11H_NB_DRAM, NULL);
	if (dram) {
		ret = pci_read_config_byte(misc, 0x94, &type);
		if (ret) {
			goto error_pci_cfg_read;
		}

		switch (tmp & 0x07) {
		case 0x01:
			dev_priv->vram_type = VIA_MEM_DDR2_533;
			break;
		case 0x02:
			dev_priv->vram_type = VIA_MEM_DDR2_667;
			break;
		case 0x03:
			dev_priv->vram_type = VIA_MEM_DDR2_800;
			break;
		default:
			break;
		}
	}

	goto exit;
error_pci_cfg_read:
	drm_err(dev, "PCI configuration space read error! errno: %d\n", ret);
exit:
	return ret;
}

static int cn400_mem_type(struct drm_device *dev)
{
	struct pci_dev *gfx_dev = to_pci_dev(dev->dev);
	struct pci_dev *bridge_fn2_dev, *bridge_fn3_dev;
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
	int freq = 0;
	u8 fsb, type;
	int ret;

	bridge_fn2_dev =
		pci_get_domain_bus_and_slot(pci_domain_nr(gfx_dev->bus), 0,
						PCI_DEVFN(0, 2));
	if (!bridge_fn2_dev) {
		ret = -ENODEV;
		drm_err(dev, "Host Bridge Function 2 not found! errno: %d\n",
			ret);
		goto exit;
	}

	bridge_fn3_dev =
		pci_get_domain_bus_and_slot(pci_domain_nr(gfx_dev->bus), 0,
						PCI_DEVFN(0, 3));
	if (!bridge_fn3_dev) {
		ret = -ENODEV;
		drm_err(dev, "Host Bridge Function 3 not found! errno: %d\n",
			ret);
		goto exit;
	}

	/* Make sure to use bridge_fn2_dev, not gfx_dev */
	ret = pci_read_config_byte(bridge_fn2_dev, 0x54, &fsb);
	if (ret) {
		goto error_pci_cfg_read;
	}

	fsb >>= 5;
	switch (fsb) {
	case 0x00:
		freq = 0x03; /* 100 MHz */
		break;
	case 0x01:
		freq = 0x04; /* 133 MHz */
		break;
	case 0x02:
		freq = 0x06; /* 200 MHz */
		break;
	case 0x04:
		freq = 0x07; /* 233 MHz */
		break;
	default:
		break;
	}

	/* Make sure to use bridge_fn3_dev, not gfx_dev */
	ret = pci_read_config_byte(bridge_fn3_dev, 0x68, &type);
	if (ret) {
		goto error_pci_cfg_read;
	}

	type &= 0x0f;
	if (type & 0x01) {
		freq += 1 + (type >> 2);
	} else {
		freq -= 1 + (type >> 2);
	}

	switch (freq) {
	case 0x03:
		dev_priv->vram_type = VIA_MEM_DDR200;
		break;
	case 0x04:
		dev_priv->vram_type = VIA_MEM_DDR266;
		break;
	case 0x05:
		dev_priv->vram_type = VIA_MEM_DDR333;
		break;
	case 0x06:
		dev_priv->vram_type = VIA_MEM_DDR400;
		break;
	default:
		break;
	}

	goto exit;
error_pci_cfg_read:
	drm_err(dev, "PCI configuration space read error! errno: %d\n", ret);
exit:
	return ret;
}

static int cn700_mem_type(struct drm_device *dev)
{
	struct pci_dev *gfx_dev = to_pci_dev(dev->dev);
	struct pci_dev *bridge_fn3_dev;
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
	u8 type, clock;
	int ret;

	bridge_fn3_dev =
		pci_get_domain_bus_and_slot(pci_domain_nr(gfx_dev->bus), 0,
						PCI_DEVFN(0, 3));
	if (!bridge_fn3_dev) {
		ret = -ENODEV;
		drm_err(dev, "Host Bridge Function 3 not found! errno: %d\n",
			ret);
		goto exit;
	}

	/* Make sure to use bridge_fn3_dev, not gfx_dev */
	ret = pci_read_config_byte(bridge_fn3_dev, 0x6c, &type);
	if (ret) {
		goto error_pci_cfg_read;
	}

	ret = pci_read_config_byte(bridge_fn3_dev, 0x90, &clock);
	if (ret) {
		goto error_pci_cfg_read;
	}

	type &= 0x40;
	type >>= 6;
	switch (type) {
	case 0x00:
		switch (clock & 0x07) {
		case 0x00:
			dev_priv->vram_type = VIA_MEM_DDR200;
			break;
		case 0x01:
			dev_priv->vram_type = VIA_MEM_DDR266;
			break;
		case 0x02:
			dev_priv->vram_type = VIA_MEM_DDR333;
			break;
		case 0x03:
			dev_priv->vram_type = VIA_MEM_DDR400;
			break;
		default:
			break;
		}

		break;
	case 0x01:
		switch (clock & 0x07) {
		case 0x03:
			dev_priv->vram_type = VIA_MEM_DDR2_400;
			break;
		case 0x04:
			dev_priv->vram_type = VIA_MEM_DDR2_533;
			break;
		case 0x05:
			dev_priv->vram_type = VIA_MEM_DDR2_667;
			break;
		case 0x06:
			dev_priv->vram_type = VIA_MEM_DDR2_800;
			break;
		default:
			break;
		}

		break;
	default:
		break;
	}

	goto exit;
error_pci_cfg_read:
	drm_err(dev, "PCI configuration space read error! errno: %d\n", ret);
exit:
	return ret;
}

static int vx900_mem_type(struct drm_device *dev)
{
	struct pci_dev *gfx_dev = to_pci_dev(dev->dev);
	struct pci_dev *bridge_fn3_dev;
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
	u8 type, clock, volt;
	int ret;

	bridge_fn3_dev =
		pci_get_domain_bus_and_slot(pci_domain_nr(gfx_dev->bus), 0,
						PCI_DEVFN(0, 3));
	if (!bridge_fn3_dev) {
		ret = -ENODEV;
		drm_err(dev, "Host Bridge Function 3 not found! errno: %d\n",
			ret);
		goto exit;
	}

	/* Make sure to use bridge_fn3_dev, not gfx_dev */
	ret = pci_read_config_byte(bridge_fn3_dev, 0x6c, &type);
	if (ret) {
		goto error_pci_cfg_read;
	}

	ret = pci_read_config_byte(bridge_fn3_dev, 0x90, &clock);
	if (ret) {
		goto error_pci_cfg_read;
	}

	volt = type;
	type &= 0xc0;
	type >>= 6;
	volt &= 0x20;
	volt >>= 5;
	switch (type) {
	case 0x01:
		switch (clock & 0x0f) {
		case 0x00:
			if (volt) {
				dev_priv->vram_type = VIA_MEM_DDR2_800;
			} else {
				dev_priv->vram_type = VIA_MEM_DDR2_533;
			}

			break;
		case 0x04:
			dev_priv->vram_type = VIA_MEM_DDR2_533;
			break;
		case 0x05:
			dev_priv->vram_type = VIA_MEM_DDR2_667;
			break;
		case 0x06:
			dev_priv->vram_type = VIA_MEM_DDR2_800;
			break;
		case 0x07:
			dev_priv->vram_type = VIA_MEM_DDR2_1066;
			break;
		default:
			break;
		}

		break;
	case 0x02:
		switch (clock & 0x0f) {
		case 0x00:
			if (volt) {
				dev_priv->vram_type = VIA_MEM_DDR3_800;
			} else {
				dev_priv->vram_type = VIA_MEM_DDR3_533;
			}

			break;
		case 0x04:
			dev_priv->vram_type = VIA_MEM_DDR3_533;
			break;
		case 0x05:
			dev_priv->vram_type = VIA_MEM_DDR3_667;
			break;
		case 0x06:
			dev_priv->vram_type = VIA_MEM_DDR3_800;
			break;
		case 0x07:
			dev_priv->vram_type = VIA_MEM_DDR3_1066;
			break;
		default:
			break;
		}

		break;
	}

	goto exit;
error_pci_cfg_read:
	drm_err(dev, "PCI configuration space read error! errno: %d\n", ret);
exit:
	return ret;
}

static void via_quirks_init(struct drm_device *dev)
{
	struct pci_dev *pdev;
	struct via_drm_priv *dev_priv;

	drm_dbg_driver(dev, "Entered %s.\n", __func__);

	/* Safety checks to prevent NULL pointer access */
	if (!dev || !dev->dev) {
		DRM_ERROR("Invalid device in via_quirks_init\n");
		return;
	}
	
	pdev = to_pci_dev(dev->dev);
	if (!pdev) {
		DRM_ERROR("Invalid PCI device in via_quirks_init\n");
		return;
	}

	dev_priv = to_via_drm_priv(dev);
	if (!dev_priv) {
		DRM_ERROR("NULL dev_priv in via_quirks_init\n");
		return;
	}

	/* Initialize boolean fields with defaults */
	dev_priv->is_via_nanobook = false;
	dev_priv->is_quanta_il1 = false;
	dev_priv->is_samsung_nc20 = false;

	/* Set quirk flags for specific hardware */
	if (pdev->device == PCI_DEVICE_ID_VIA_UNICHROME_PRO_II &&
		pdev->subsystem_vendor == 0x1509 &&
		pdev->subsystem_device == 0x2f00) {
		dev_priv->is_via_nanobook = true;
		drm_info(dev, "VIA Nanobook detected\n");
	}

	if (pdev->device == PCI_DEVICE_ID_VIA_CHROME9_HC3 &&
		pdev->subsystem_vendor == 0x1558 &&
		pdev->subsystem_device == 0x5409) {
		dev_priv->is_quanta_il1 = true;
		drm_info(dev, "Quanta IL1 detected\n");
	}

	if (pdev->device == PCI_DEVICE_ID_VIA_CHROME9_HC3 &&
		pdev->subsystem_vendor == 0x144d &&
		pdev->subsystem_device == 0xc04e) {
		dev_priv->is_samsung_nc20 = true;
		drm_info(dev, "Samsung NC20 detected\n");
	}

	drm_dbg_driver(dev, "Exiting %s.\n", __func__);
}

static int via_vram_init(struct drm_device *dev)
{
	struct pci_dev *gfx_dev = to_pci_dev(dev->dev);
	struct pci_dev *bridge_fn0_dev = NULL;
	struct pci_dev *bridge_fn3_dev = NULL;
	char *name = "unknown";
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
	u8 size;
	int ret = 0;

	drm_dbg_driver(dev, "Entered %s.\n", __func__);

	bridge_fn0_dev =
		pci_get_domain_bus_and_slot(pci_domain_nr(gfx_dev->bus), 0,
						PCI_DEVFN(0, 0));
	if (!bridge_fn0_dev) {
		ret = -ENODEV;
		drm_err(dev, "Host Bridge Function 0 not found! "
				"errno: %d\n", ret);
		goto exit;
	}

	if ((gfx_dev->device != PCI_DEVICE_ID_VIA_CLE266_GFX) ||
		(gfx_dev->device != PCI_DEVICE_ID_VIA_KM400_GFX)) {
		bridge_fn3_dev =
			pci_get_domain_bus_and_slot(pci_domain_nr(gfx_dev->bus), 0,
							PCI_DEVFN(0, 3));
		if (!bridge_fn3_dev) {
			ret = -ENODEV;
			drm_err(dev, "Host Bridge Function 3 not found! "
					"errno: %d\n", ret);
			goto exit;
		}
	}

	switch (bridge_fn0_dev->vendor) {
	case PCI_VENDOR_ID_VIA:
		switch (bridge_fn0_dev->device) {
		/* CLE266 */
		case PCI_DEVICE_ID_VIA_862X_0:
			/* Read memory size from pci config space */
			ret = pci_read_config_byte(bridge_fn0_dev, 0xE1, &size);
			if (ret) {
				goto error_pci_cfg_read;
			}
			
			dev_priv->vram_type = VIA_MEM_SDR133;
			dev_priv->vram_size = (1 << ((size & 0x70) >> 4)) << 20;
			ret = cle266_mem_type(dev);
			break;

		/* KM400(A) / KN400(A) */
		case PCI_DEVICE_ID_VIA_8378_0:
			/* Read memory size from pci config space */
			ret = pci_read_config_byte(bridge_fn0_dev, 0xE1, &size);
			if (ret) {
				goto error_pci_cfg_read;
			}
			
			dev_priv->vram_type = VIA_MEM_DDR400;
			dev_priv->vram_size = (1 << ((size & 0x70) >> 4)) << 20;
			ret = km400_mem_type(dev);
			break;

		/* P4M800 */
		case PCI_DEVICE_ID_VIA_3296_0:
			/* Use bridge_fn3_dev instead of gfx_dev for PCI reads */
			ret = pci_read_config_byte(bridge_fn3_dev, 0xA1, &size);
			if (ret) {
				goto error_pci_cfg_read;
			}
			
			if (size & 0x80) {
				dev_priv->vram_size = 16 << 20;
			} else {
				dev_priv->vram_size = 64 << 20;
			}

			ret = p4m800_mem_type(dev);
			break;
			
		/* K8M800(A) / K8N800(A) */
		case PCI_DEVICE_ID_VIA_8380_0:
		/* K8M890 / K8N890 */
		case PCI_DEVICE_ID_VIA_VT3336:
			/* Use bridge_fn3_dev instead of gfx_dev for PCI reads */
			ret = pci_read_config_byte(bridge_fn3_dev, 0xA1, &size);
			if (ret) {
				goto error_pci_cfg_read;
			}
			
			dev_priv->vram_type = VIA_MEM_DDR400;
			switch (size & 0x07) {
			case 0:
			case 5:
				dev_priv->vram_size = 64 << 20;
				break;
			case 1:
				dev_priv->vram_size = 32 << 20;
				break;
			case 2:
			case 6:
				dev_priv->vram_size = 128 << 20;
				break;
			case 3:
			case 7:
				dev_priv->vram_size = 256 << 20;
				break;
			default:
				dev_priv->vram_size = 16 << 20;
				break;
			}

			ret = km8xx_mem_type(dev);
			break;
			
		/* CN400 / PM800 / PN800 / PM880 / PN880 */
		case PCI_DEVICE_ID_VIA_PX8X0_0:
			/* Use bridge_fn3_dev instead of gfx_dev for PCI reads */
			ret = pci_read_config_byte(bridge_fn3_dev, 0xA1, &size);
			if (ret) {
				goto error_pci_cfg_read;
			}
			
			if (size & 0x80) {
				dev_priv->vram_size = 64 << 20;
			} else {
				dev_priv->vram_size = 128 << 20;
			}

			ret = cn400_mem_type(dev);
			break;
			
		/* P4M800CE / P4M800 Pro / VN800 / CN700 */
		case PCI_DEVICE_ID_VIA_P4M800CE:
		/* P4M890 / VN890 / CN800 */
		case PCI_DEVICE_ID_VIA_P4M890:
		/* CX700(M / M2) / VX700(M / M2) */
		case PCI_DEVICE_ID_VIA_VT3324:
		/* P4M900 / VN896 / CN896 */
		case PCI_DEVICE_ID_VIA_VT3364:
			/* Use bridge_fn3_dev instead of gfx_dev for PCI reads */
			ret = pci_read_config_byte(bridge_fn3_dev, 0xA1, &size);
			if (ret) {
				goto error_pci_cfg_read;
			}

			if (bridge_fn0_dev->device == PCI_DEVICE_ID_VIA_VT3324) {
				switch (size & 0x07) {
				case 0:
					dev_priv->vram_size = 8 << 20;
					break;
				case 1:
					dev_priv->vram_size = 16 << 20;
					break;
				case 2:
					dev_priv->vram_size = 32 << 20;
					break;
				case 3:
					dev_priv->vram_size = 64 << 20;
					break;
				case 4:
					dev_priv->vram_size = 128 << 20;
					break;
				default:
					dev_priv->vram_size = 256 << 20;
					break;
				}

				ret = cn700_mem_type(dev);
			} else {
				if (size & 0x80) {
					dev_priv->vram_size = 64 << 20;
				} else {
					dev_priv->vram_size = 128 << 20;
				}

				ret = cn700_mem_type(dev);
			}
			break;
			
		/* Handle VX800/VX855/VX900 with specific ID values */
		default:
			/* Check Host Bridge Device ID to distinguish 
			   between VX800, VX855, and VX900 */
			if (bridge_fn0_dev->device == VIA_HOST_BRIDGE_VX800) {
				/* Use bridge_fn3_dev instead of gfx_dev for PCI reads */
				ret = pci_read_config_byte(bridge_fn3_dev, 0xA1, &size);
				if (ret) {
					goto error_pci_cfg_read;
				}

				switch (size & 0x07) {
				case 1:
					dev_priv->vram_size = 16 << 20;
					break;
				case 2:
					dev_priv->vram_size = 32 << 20;
					break;
				case 3:
					dev_priv->vram_size = 64 << 20;
					break;
				case 4:
					dev_priv->vram_size = 128 << 20;
					break;
				case 5:
					dev_priv->vram_size = 256 << 20;
					break;
				case 6:
					dev_priv->vram_size = 384 << 20;
					break;
				case 7:
					dev_priv->vram_size = 512 << 20;
					break;
				default:
					dev_priv->vram_size = 8 << 20;
					break;
				}

				ret = cn700_mem_type(dev);
			} else if (bridge_fn0_dev->device == VIA_HOST_BRIDGE_VX855) {
				/* Use bridge_fn3_dev instead of gfx_dev for PCI reads */
				ret = pci_read_config_byte(bridge_fn3_dev, 0xA1, &size);
				if (ret) {
					goto error_pci_cfg_read;
				}

				switch (size & 0x07) {
				case 1:
					dev_priv->vram_size = 32 << 20;
					break;
				case 2:
					dev_priv->vram_size = 64 << 20;
					break;
				case 3:
					dev_priv->vram_size = 128 << 20;
					break;
				case 4:
					dev_priv->vram_size = 256 << 20;
					break;
				case 5:
					dev_priv->vram_size = 512 << 20;
					break;
				default:
					dev_priv->vram_size = 16 << 20;
					break;
				}

				ret = cn700_mem_type(dev);
			} else if (bridge_fn0_dev->device == VIA_HOST_BRIDGE_VX900) {
				/* Use bridge_fn3_dev instead of gfx_dev for PCI reads */
				ret = pci_read_config_byte(bridge_fn3_dev, 0xA1, &size);
				if (ret) {
					goto error_pci_cfg_read;
				}

				switch (size & 0x07) {
				case 1:
					dev_priv->vram_size = 32 << 20;
					break;
				case 2:
					dev_priv->vram_size = 64 << 20;
					break;
				case 3:
					dev_priv->vram_size = 128 << 20;
					break;
				case 4:
					dev_priv->vram_size = 256 << 20;
					break;
				case 5:
					dev_priv->vram_size = 512 << 20;
					break;
				case 6:
					dev_priv->vram_size = 1024 << 20;
					break;
				case 7:
					dev_priv->vram_size = 2048 << 20;
					break;
				default:
					dev_priv->vram_size = 16 << 20;
					break;
				}

				ret = vx900_mem_type(dev);
			} else {
				ret = -ENODEV;
				drm_err(dev, "Unknown Host Bridge device: 0x%04x\n", 
					bridge_fn0_dev->device);
			}
			break;
		}
		break;

	default:
		ret = -ENODEV;
		drm_err(dev, "Unknown Host Bridge vendor: 0x%04x\n",
			bridge_fn0_dev->vendor);
		break;
	}

	if (ret) {
		goto exit;
	}

	switch (dev_priv->vram_type) {
	case VIA_MEM_SDR66:
		name = "SDR 66";
		break;
	case VIA_MEM_SDR100:
		name = "SDR 100";
		break;
	case VIA_MEM_SDR133:
		name = "SDR 133";
		break;
	case VIA_MEM_DDR200:
		name = "DDR 200";
		break;
	case VIA_MEM_DDR266:
		name = "DDR 266";
		break;
	case VIA_MEM_DDR333:
		name = "DDR 333";
		break;
	case VIA_MEM_DDR400:
		name = "DDR 400";
		break;
	case VIA_MEM_DDR2_400:
		name = "DDR2 400";
		break;
	case VIA_MEM_DDR2_533:
		name = "DDR2 533";
		break;
	case VIA_MEM_DDR2_667:
		name = "DDR2 667";
		break;
	case VIA_MEM_DDR2_800:
		name = "DDR2 800";
		break;
	case VIA_MEM_DDR2_1066:
		name = "DDR2 1066";
		break;
	case VIA_MEM_DDR3_533:
		name = "DDR3 533";
		break;
	case VIA_MEM_DDR3_667:
		name = "DDR3 667";
		break;
	case VIA_MEM_DDR3_800:
		name = "DDR3 800";
		break;
	case VIA_MEM_DDR3_1066:
		name = "DDR3 1066";
		break;
	case VIA_MEM_DDR3_1333:
		name = "DDR3 1333";
		break;
	case VIA_MEM_DDR3_1600:
		name = "DDR3 1600";
		break;
	default:
		break;
	}

	drm_dbg_driver(dev, "Found %s video RAM.\n", name);

	if (gfx_dev->device == PCI_DEVICE_ID_VIA_CHROME9_HD) {
		dev_priv->vram_start = pci_resource_start(gfx_dev, 2);
	} else {
		dev_priv->vram_start = pci_resource_start(gfx_dev, 0);
	}

	/* Add an MTRR for the video RAM. */
	dev_priv->vram_mtrr = via_add_wc_mtrr(dev_priv->vram_start,
						dev_priv->vram_size);
	goto exit;

error_pci_cfg_read:
	drm_err(dev, "PCI configuration space read error! errno: %d\n", ret);
exit:
	drm_dbg_driver(dev, "Exiting %s.\n", __func__);
	return ret;
}

static void via_vram_fini(struct drm_device *dev)
{
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);

	drm_dbg_driver(dev, "Entered %s.\n", __func__);

	if (dev_priv->vram_mtrr) {
		/* Remove MTRR for the video RAM. */
		via_free_wc_mtrr(dev_priv->vram_mtrr);
		dev_priv->vram_mtrr = 0;
	}

	drm_dbg_driver(dev, "Exiting %s.\n", __func__);
}

static int via_mmio_init(struct drm_device *dev)
{
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
	struct pci_dev *pdev = to_pci_dev(dev->dev);
	int ret;

	/* Add safety check for NULL dev_priv */
	if (!dev_priv) {
		drm_err(dev, "NULL dev_priv in via_mmio_init\n");
		return -EINVAL;
	}

	drm_dbg_driver(dev, "Entered %s.\n", __func__);

	dev_priv->mmio_base = pci_resource_start(pdev, 1);
	dev_priv->mmio_size = pci_resource_len(pdev, 1);

	if (!dev_priv->mmio_base || !dev_priv->mmio_size) {
		drm_err(dev, "Invalid PCI BAR 1 (MMIO) configuration.\n");
		ret = -ENXIO;
		goto exit;
	}

	dev_priv->mmio = ioremap(dev_priv->mmio_base,
					dev_priv->mmio_size);
	if (!dev_priv->mmio) {
		drm_err(dev, "Failed to map MMIO region.\n");
		ret = -ENOMEM;
		goto exit;
	}

exit:
	drm_dbg_driver(dev, "Exiting %s.\n", __func__);
	return ret;
}

static void via_mmio_fini(struct drm_device *dev)
{
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);

	drm_dbg_driver(dev, "Entered %s.\n", __func__);

	if (dev_priv->mmio) {
		iounmap(dev_priv->mmio);
		dev_priv->mmio = NULL;
	}

	drm_dbg_driver(dev, "Exiting %s.\n", __func__);
}

static void via_graphics_unlock(struct drm_device *dev)
{
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
	uint8_t temp;

	drm_dbg_driver(dev, "Entered %s.\n", __func__);

	/*
	 * Enable VGA subsystem.
	 */
	temp = vga_io_r(0x03c3);
	vga_io_w(0x03c3, temp | 0x01);
	svga_wmisc_mask(VGABASE, BIT(0), BIT(0));

	/*
	 * Unlock VIA Technologies Chrome IGP extended
	 * registers.
	 */
	svga_wseq_mask(VGABASE, 0x10, BIT(0), BIT(0));

	/*
	 * Unlock VIA Technologies Chrome IGP extended
	 * graphics functionality.
	 */
	svga_wseq_mask(VGABASE, 0x1a, BIT(3), BIT(3));

	drm_dbg_driver(dev, "Exiting %s.\n", __func__);
}

static void via_chip_revision_info(struct drm_device *dev)
{
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
	struct pci_dev *pdev = to_pci_dev(dev->dev);
	u8 tmp;

	drm_dbg_driver(dev, "Entered %s.\n", __func__);

	switch (pdev->device) {
	/* CLE266 Chipset */
	case PCI_DEVICE_ID_VIA_CLE266_GFX:
		/* CR4F only defined in CLE266.CX chipset. */
		tmp = vga_rcrt(VGABASE, 0x4f);
		vga_wcrt(VGABASE, 0x4f, 0x55);
		if (vga_rcrt(VGABASE, 0x4f) != 0x55) {
			dev_priv->revision = CLE266_REVISION_AX;
		} else {
			dev_priv->revision = CLE266_REVISION_CX;
		}
		/* Restore original CR4F value. */
		vga_wcrt(VGABASE, 0x4f, tmp);
		break;
	/* CX700 / VX700 Chipset */
	case PCI_DEVICE_ID_VIA_UNICHROME_PRO_II:
		tmp = vga_rseq(VGABASE, 0x43);
		if (tmp & 0x02) {
			dev_priv->revision = CX700_REVISION_700M2;
		} else if (tmp & 0x40) {
			dev_priv->revision = CX700_REVISION_700M;
		} else {
			dev_priv->revision = CX700_REVISION_700;
		}
		break;
	/* VX800 / VX820 Chipset */
	case PCI_DEVICE_ID_VIA_CHROME9_HC3:
		break;
	/* VX855 / VX875 Chipset */
	case PCI_DEVICE_ID_VIA_CHROME9_HCM:
	/* VX900 Chipset */
	case PCI_DEVICE_ID_VIA_CHROME9_HD:
		dev_priv->revision = vga_rseq(VGABASE, 0x3b);
		break;
	default:
		break;
	}

	drm_dbg_driver(dev, "Exiting %s.\n", __func__);
}

/* Remove the redundant forward declaration since the function is defined right after it */
int via_device_init(struct drm_device *dev)
{
	int ret;

	drm_dbg_driver(dev, "Entered %s.\n", __func__);

	/* Validate device */
	if (!dev) {
		DRM_ERROR("NULL device in via_device_init\n");
		return -EINVAL;
	}

	/* Ensure dev_priv is properly allocated before calling via_quirks_init */
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
	if (!dev_priv) {
		drm_err(dev, "Failed to get device private data\n");
		return -ENODEV;
	}

	/* Print device information for debugging */
	struct pci_dev *pdev = to_pci_dev(dev->dev);
	if (pdev) {
		drm_info(dev, "Initializing VIA device: %04x:%04x (rev %02x)\n",
			pdev->vendor, pdev->device, pdev->revision);
	}

	via_quirks_init(dev);

	/* Initialize video RAM */
	ret = via_vram_init(dev);
	if (ret) {
		drm_err(dev, "Failed to initialize video RAM: %d\n", ret);
		goto exit;
	}

	ret = via_mmio_init(dev);
	if (ret) {
		drm_err(dev, "Failed to initialize MMIO: %d\n", ret);
		goto error_mmio_init;
	}

	via_graphics_unlock(dev);
	goto exit;
error_mmio_init:
	via_vram_fini(dev);
exit:
	drm_dbg_driver(dev, "Exiting %s.\n", __func__);
	return ret;
}

/* Fix this function to be non-static to match its declaration in via_drv.h */
void via_device_fini(struct drm_device *dev)
{
	drm_dbg_driver(dev, "Entered %s.\n", __func__);

	via_mmio_fini(dev);
	via_vram_fini(dev);

	drm_dbg_driver(dev, "Exiting %s.\n", __func__);
}

static const struct drm_mode_config_funcs via_drm_mode_config_funcs = {
	.fb_create		= drm_gem_fb_create,
	.atomic_check		= drm_atomic_helper_check,
	.atomic_commit		= drm_atomic_helper_commit,
};

static int via_modeset_init(struct drm_device *dev)
{
	struct pci_dev *pdev = to_pci_dev(dev->dev);
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
	uint32_t i;
	int ret = 0;

	drm_dbg_driver(dev, "Entered %s.\n", __func__);

	/* Initialize the number of display connectors. */
	dev_priv->number_fp = 0;
	dev_priv->number_dvi = 0;

	dev->mode_config.min_width = 0;
	dev->mode_config.min_height = 0;
	dev->mode_config.max_width = 2044;
	dev->mode_config.max_height = 4096;

	dev->mode_config.funcs = &via_drm_mode_config_funcs;

	dev->mode_config.preferred_depth = 24;

	dev->mode_config.cursor_width = VIA_CURSOR_SIZE;
	dev->mode_config.cursor_height = VIA_CURSOR_SIZE;

	ret = drmm_mode_config_init(dev);
	if (ret) {
		drm_err(dev, "Failed to initialize mode setting "
				"configuration!\n");
		goto exit;
	}

	via_i2c_reg_init(dev_priv);
	ret = via_i2c_init(dev);
	if (ret) {
		drm_err(dev, "Failed to initialize I2C bus!\n");
		goto exit;
	}

	for (i = 0; i < VIA_MAX_CRTC; i++) {
		ret = via_crtc_init(dev_priv, i);
		if (ret) {
			drm_err(dev, "Failed to initialize CRTC %u!\n", i + 1);
			goto error_crtc_init;
		}
	}

	via_ext_dvi_probe(dev);
	via_tmds_probe(dev);

	via_lvds_probe(dev);

	via_dac_probe(dev);


	via_ext_dvi_init(dev);
	via_tmds_init(dev);

	via_dac_init(dev);

	via_lvds_init(dev);

	if (pdev->device == PCI_DEVICE_ID_VIA_VX900 ||
	    pdev->device == PCI_DEVICE_ID_VIA_CHROME9_HD ||
	    pdev->device == PCI_DEVICE_ID_VIA_CHROME9_HCM) {
	    via_hdmi_init(dev, VIA_DI_PORT_NONE);
	}

	drm_mode_config_reset(dev);

	drm_kms_helper_poll_init(dev);
	goto exit;
error_crtc_init:
	via_i2c_exit();
exit:
	return ret;
}

static void via_modeset_fini(struct drm_device *dev)
{
	drm_kms_helper_poll_fini(dev);

	drm_helper_force_disable_all(dev);

	via_i2c_exit();
}

/* Implementation with the correct signature */
int via_drm_init(struct drm_device *dev, unsigned long flags)
{
	int ret = 0;
	/* Remove the unused pdev variable declaration */

	drm_dbg_driver(dev, "Entered %s.\n", __func__);

	ret = via_device_init(dev);
	if (ret) {
		drm_err(dev, "Failed to initialize device: %d\n", ret);
		goto exit;
	}

	ret = via_mm_init(dev);
	if (ret) {
		drm_err(dev, "Failed to initialize memory manager: %d\n", ret);
		goto error_mm_init;
	}

	via_chip_revision_info(dev);

	/* Only initialize modeset if explicitly enabled, to avoid 
	 * potential deadlock issues during initialization */
	if (via_modeset) {
		/* Set a safe timeout for initialization operations */
		unsigned long timeout = jiffies + msecs_to_jiffies(5000); /* 5 second timeout */
		
		ret = via_modeset_init(dev);
		if (ret || time_after(jiffies, timeout)) {
			drm_err(dev, "Modeset initialization failed or timed out: %d\n", ret);
			goto error_modeset_init;
		}
	}

	/* IRQ handling has been removed since drm_irq.h is not available */

	goto exit;
error_modeset_init:
	via_mm_fini(dev);
error_mm_init:
	via_device_fini(dev);
exit:
	drm_dbg_driver(dev, "Exiting %s.\n", __func__);
	return ret;
}

void via_drm_fini(struct drm_device *dev)
{
	drm_dbg_driver(dev, "Entered %s.\n", __func__);

	via_modeset_fini(dev);
	via_mm_fini(dev);
	via_device_fini(dev);

	drm_dbg_driver(dev, "Exiting %s.\n", __func__);
}

[File Ends] drivers/gpu/drm/via/via_init.c

[File Begins] drivers/gpu/drm/via/via_init.h
/*
 * Copyright 2023 The OpenChrome Project
 * [via_init.h]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHOR(S) OR COPYRIGHT HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#ifndef __VIA_INIT_H__
#define __VIA_INIT_H__

#include <drm/drm_drv.h>

/* Forward declarations for initialization functions */
extern int via_drm_init(struct drm_device *dev, unsigned long flags);
extern void via_drm_fini(struct drm_device *dev);

#endif /* __VIA_INIT_H__ */

[File Ends] drivers/gpu/drm/via/via_init.h

[File Begins] drivers/gpu/drm/via/via_ioctl.c
/*
 * Copyright © 2019 Kevin Brace.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHOR(S) OR COPYRIGHT HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * Author(s):
 * Kevin Brace <kevinbrace@bracecomputerlab.com>
 */

#include <linux/stat.h>

#include <drm/drm_file.h>

#include <uapi/drm/via_drm.h>

#include "via_drv.h"
#include "via_drv_main.h"
#include "via_object.h"
#include "via_ioctl.h"

int via_gem_alloc_ioctl(struct drm_device *dev, void *data,
			      struct drm_file *file_priv)
{
	struct drm_via_gem_alloc *args = data;
	struct via_bo *bo;
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
	struct ttm_buffer_object *ttm_bo;
	int ret;

	/* Allocate buffer object - using bdev instead of ttm.bdev */
	ret = via_bo_create(dev, &dev_priv->bdev, args->size,
				ttm_bo_type_device, args->initial_domain, false, &bo);
	if (ret)
		return ret;

	/* bo doesn't have base field, ttm_bo is returned directly from via_bo_create */
	ttm_bo = &bo->ttm_bo;  /* Access the ttm_bo member of the via_bo structure */

	/* Create mapping */
	ret = via_dumb_create_mapping(file_priv, dev, bo, &args->handle);
	if (ret)
		goto err_unref;

	ret = ttm_bo_reserve(ttm_bo, true, false, NULL);
	if (unlikely(ret))
		goto err;

	ttm_bo_unreserve(ttm_bo);

	args->handle    = args->handle;
	args->size      = ttm_bo->resource->size;
	args->initial_domain = ttm_bo->resource->placement;
	args->alignment = PAGE_SIZE;
	return 0;

err:
	drm_gem_handle_delete(file_priv, args->handle);
err_unref:
	/* Fix the kref_put call to use the proper type */
	ttm_bo_put(ttm_bo);
	return ret;
}

int via_gem_mmap_ioctl(struct drm_device *dev, void *data,
			     struct drm_file *file_priv)
{
	struct drm_gem_object *gem;
	struct ttm_buffer_object *ttm_bo;
	struct drm_via_gem_mmap *args = data;
	int ret = 0;

	gem = drm_gem_object_lookup(file_priv, args->handle);
	if (!gem) {
		ret = -EINVAL;
		drm_err(dev, "%s: Failed to find GEM object.\n", __func__);
		goto exit;
	}

	ttm_bo = container_of(gem, struct ttm_buffer_object, base);
	args->offset = drm_vma_node_offset_addr(&ttm_bo->base.vma_node);
	drm_gem_object_put(gem);

exit:
	return ret;
}

int via_driver_dumb_map_offset(struct drm_file *file_priv,
                        struct drm_device *dev,
                        uint32_t handle,
                        uint64_t *offset)
{
    struct drm_gem_object *gem;
    struct ttm_buffer_object *ttm_bo;
    int ret = 0;

    drm_dbg_driver(dev, "Entered %s.\n", __func__);

    gem = drm_gem_object_lookup(file_priv, handle);
    if (!gem) {
        drm_err(dev, "%s: Failed to find GEM object.\n", __func__);
        return -ENOENT; // Fix: Added proper error return for gem lookup failure
    }

    ttm_bo = container_of(gem, struct ttm_buffer_object, base);
    *offset = drm_vma_node_offset_addr(&ttm_bo->base.vma_node);

    drm_gem_object_put(gem);
    drm_dbg_driver(dev, "Exiting %s.\n", __func__);
    return ret;
}
EXPORT_SYMBOL_GPL(via_driver_dumb_map_offset);

[File Ends] drivers/gpu/drm/via/via_ioctl.c

[File Begins] drivers/gpu/drm/via/via_ioctl.h
/*
 * Copyright 2023 The OpenChrome Project
 * [via_ioctl.h]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHOR(S) OR COPYRIGHT HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#ifndef __VIA_IOCTL_H__
#define __VIA_IOCTL_H__

#include <drm/drm_gem.h>
#include <drm/drm_ioctl.h>
#include <drm/drm_file.h>

/* Forward declarations for IOCTL functions */
int via_gem_alloc_ioctl(struct drm_device *dev, void *data, struct drm_file *file_priv);
int via_gem_mmap_ioctl(struct drm_device *dev, void *data, struct drm_file *file_priv);
int via_driver_dumb_map_offset(struct drm_file *file_priv,
                              struct drm_device *dev,
                              uint32_t handle,
                              uint64_t *offset);

#endif /* __VIA_IOCTL_H__ */

[File Ends] drivers/gpu/drm/via/via_ioctl.h

[File Begins] drivers/gpu/drm/via/via_irq.c
/*
 * Copyright 2023 The OpenChrome Project
 * [via_irq.c]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

/*
 * IRQ handling functionality for VIA/OpenChrome DRM driver
 * This is a stub implementation to satisfy module build requirements
 */

#include <linux/irq.h>
#include <linux/interrupt.h>
#include <linux/pci.h>
#include <linux/module.h>
#include "via_drv.h"

/* Initialize IRQ functionality */
int via_irq_init(struct drm_device *dev)
{
    drm_dbg_driver(dev, "Entered %s.\n", __func__);
    
    /* No IRQ handling in this stub implementation */
    drm_dbg_driver(dev, "IRQ handling disabled in this build\n");
    
    drm_dbg_driver(dev, "Exiting %s.\n", __func__);
    return 0;
}

/* Clean up IRQ resources */
void via_irq_fini(struct drm_device *dev)
{
    drm_dbg_driver(dev, "Entered %s.\n", __func__);
    /* No resources to clean up in this stub */
    drm_dbg_driver(dev, "Exiting %s.\n", __func__);
}

/* These callbacks would handle the actual interrupts */
irqreturn_t via_irq_handler(int irq, void *arg)
{
    struct drm_device *dev = (struct drm_device *)arg;
    
    /* Just log that we received an interrupt but don't handle it */
    if (dev)
        drm_dbg_driver(dev, "IRQ received but not handled\n");
    
    return IRQ_NONE; /* No interrupts handled in stub implementation */
}

[File Ends] drivers/gpu/drm/via/via_irq.c

[File Begins] drivers/gpu/drm/via/via_lvds.c
/*
 * Copyright 2016-2023 The OpenChrome Project
 * [via_lvds.c]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHOR(S) OR COPYRIGHT HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <linux/delay.h>
#include <linux/pci.h>

#include <drm/drm_atomic_helper.h>
#include <drm/drm_connector.h>
#include <drm/drm_crtc_helper.h>
#include <drm/drm_edid.h>
#include <drm/drm_modeset_helper_vtables.h>
#include <drm/drm_probe_helper.h>

#include "via_drv.h"
#include "via_dac_regs.h"
#include "via_connector.h" // Include the new header

static int via_lvds_get_modes(struct drm_connector *connector)
{
    struct via_connector *con = to_via_connector(connector);
    struct i2c_adapter *i2c_bus;
    struct edid *edid;
    int count = 0;

    if (con->i2c_bus) {
        i2c_bus = via_find_ddc_bus(0x2c);
        if (i2c_bus) {
            edid = drm_get_edid(&con->base, i2c_bus);
            if (edid) {
                if (edid->input & DRM_EDID_INPUT_DIGITAL) {
                    drm_connector_update_edid_property(connector, edid);
                    count = drm_add_edid_modes(connector, edid);
                }
                kfree(edid);
                return count;
            }
        }
    }
    return 0;
}

/* Remove static keyword to match extern declaration in via_connector.h */
enum drm_connector_status via_lvds_detect(struct drm_connector *connector, bool force)
{
    struct drm_device *dev = connector->dev;
    enum drm_connector_status ret = connector_status_disconnected;

    drm_dbg_kms(dev, "Entered %s.\n", __func__);

    /* For now, always report as connected */
    ret = connector_status_connected;

    drm_dbg_kms(dev, "Exiting %s.\n", __func__);
    return ret;
}

/* Remove static keyword to match extern declaration in via_connector.h */
const struct drm_connector_funcs via_lvds_connector_funcs = {
    .dpms = drm_helper_connector_dpms,
    .detect = via_lvds_detect,
    .fill_modes = drm_helper_probe_single_connector_modes,
    .destroy = via_connector_destroy,
    .reset = drm_atomic_helper_connector_reset,
    .atomic_duplicate_state =
            drm_atomic_helper_connector_duplicate_state,
    .atomic_destroy_state =
            drm_atomic_helper_connector_destroy_state,
};

/* 
 * Fix the declaration of via_lvds_connector_helper_funcs
 * Remove the static keyword since it's declared as external in via_connector.h
 */
const struct drm_connector_helper_funcs via_lvds_connector_helper_funcs = {
    .get_modes = via_lvds_get_modes,
};

/* Declare this as void to match the prototype in header */
void via_lvds_init(struct drm_device *dev)
{
    /* Implementation will be added later */
    drm_dbg_kms(dev, "LVDS init stub\n");
    return;
}

/* Probe LVDS panel presence */
void via_lvds_probe(struct drm_device *dev)
{
    struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
    
    /* For now, stub implementation - assume LVDS exists */
    dev_priv->mapped_i2c_bus |= VIA_I2C_BUS3;
    
    drm_dbg_kms(dev, "LVDS probe stub\n");
    return;
}

int via_lvds_power_on(struct drm_device *dev)
{
    /* Stub implementation */
    drm_dbg_kms(dev, "LVDS power on stub\n");
    return 0;
}

int via_lvds_power_off(struct drm_device *dev)
{
    /* Stub implementation */
    drm_dbg_kms(dev, "LVDS power off stub\n");
    return 0;
}

int via_lvds_set_mode(struct drm_device *dev, struct drm_display_mode *mode)
{
    /* Stub implementation */
    drm_dbg_kms(dev, "LVDS set mode stub\n");
    return 0;
}

/* Add prototype to reduce warnings */
void via_lvds_init_old(struct drm_device *dev);

/* Legacy initialization function - renamed to avoid conflicts */
void via_lvds_init_old(struct drm_device *dev)
{
    struct via_connector *con;
    struct via_encoder *enc;
    struct via_drm_priv *dev_priv = to_via_drm_priv(dev);

    /* Allocate enough memory for encoder and connector */
    enc = kzalloc(sizeof(*enc) + sizeof(*con), GFP_KERNEL);
    if (!enc) {
        drm_err(dev, "Failed to allocate encoder for LVDS\n");
        return;
    }
    
    /* The 'con' field is defined in via_encoder struct */
    con = &enc->con;
    INIT_LIST_HEAD(&con->props);

    /* Initialize connector */
    via_connector_init(&con->base, &via_lvds_connector_funcs, DRM_MODE_CONNECTOR_LVDS);
    drm_connector_helper_add(&con->base, &via_lvds_connector_helper_funcs);
    drm_connector_register(&con->base);
    
    /* Set I2C bus information */
    con->i2c_bus = VIA_I2C_BUS3;
    
    con->base.doublescan_allowed = false;
    con->base.interlace_allowed = false;

    /* Initialize encoder */
    drm_encoder_init(dev, &enc->base, &via_crtc_encoder_funcs,
                    DRM_MODE_ENCODER_LVDS, NULL);
    drm_encoder_helper_add(&enc->base, &via_crtc_helper_funcs);
    
    enc->base.possible_crtcs = BIT(1);
    enc->base.possible_clones = 0;
    enc->encoder_type = VIA_ENCODER_LVDS;
    
    drm_connector_attach_encoder(&con->base, &enc->base);
    
    /* Store LVDS encoder in dev_priv */
    dev_priv->lvds = enc;
}

/* LVDS encoder DPMS control */
static void via_lvds_dpms(struct drm_encoder *encoder, int mode)
{
    struct drm_device *dev = encoder->dev;
    
    drm_dbg_kms(dev, "LVDS encoder DPMS mode: %d\n", mode);
    
    switch (mode) {
    case DRM_MODE_DPMS_ON:
        via_lvds_power_on(dev);
        break;
    case DRM_MODE_DPMS_STANDBY:
    case DRM_MODE_DPMS_SUSPEND:
    case DRM_MODE_DPMS_OFF:
        via_lvds_power_off(dev);
        break;
    }
}

/* LVDS encoder mode fixup */
static bool via_lvds_mode_fixup(struct drm_encoder *encoder,
                             const struct drm_display_mode *mode,
                             struct drm_display_mode *adjusted_mode)
{
    /* For LVDS, we typically need to use the panel's fixed mode */
    /* This is just a stub for now */
    return true;
}

/* LVDS encoder prepare */
static void via_lvds_prepare(struct drm_encoder *encoder)
{
    struct drm_device *dev = encoder->dev;
    
    drm_dbg_kms(dev, "Preparing LVDS encoder\n");
    
    /* Turn off LVDS before mode setting */
    via_lvds_dpms(encoder, DRM_MODE_DPMS_OFF);
}

/* LVDS encoder commit */
static void via_lvds_commit(struct drm_encoder *encoder)
{
    struct drm_device *dev = encoder->dev;
    
    drm_dbg_kms(dev, "Committing LVDS encoder\n");
    
    /* Turn on LVDS after mode setting */
    via_lvds_dpms(encoder, DRM_MODE_DPMS_ON);
}

/* LVDS encoder mode set */
static void via_lvds_mode_set(struct drm_encoder *encoder,
                           struct drm_display_mode *mode,
                           struct drm_display_mode *adjusted_mode)
{
    struct drm_device *dev = encoder->dev;
    
    drm_dbg_kms(dev, "LVDS encoder mode set\n");
    
    /* Configure LVDS for the requested mode */
    via_lvds_set_mode(dev, adjusted_mode);
}

/* LVDS encoder disable */
static void via_lvds_disable(struct drm_encoder *encoder)
{
    struct drm_device *dev = encoder->dev;
    
    drm_dbg_kms(dev, "Disabling LVDS encoder\n");
    
    /* Turn off LVDS */
    via_lvds_dpms(encoder, DRM_MODE_DPMS_OFF);
}

/* LVDS encoder helper functions - fixed the previously undefined symbol issue */
const struct drm_encoder_helper_funcs via_lvds_encoder_helper_funcs = {
    .dpms = via_lvds_dpms,
    .mode_fixup = via_lvds_mode_fixup,
    .prepare = via_lvds_prepare,
    .commit = via_lvds_commit,
    .mode_set = via_lvds_mode_set,
    .disable = via_lvds_disable
};

[File Ends] drivers/gpu/drm/via/via_lvds.c

[File Begins] drivers/gpu/drm/via/via_mm.c
/*
 * Copyright 2023 The OpenChrome Project
 * [via_mm.c]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <linux/module.h>
#include <drm/drm_managed.h>
#include <drm/drm_vma_manager.h>
/* Add TTM includes */
#include <drm/ttm/ttm_device.h>
#include <drm/ttm/ttm_range_manager.h>
#include <drm/ttm/ttm_placement.h>

#include "via_drv.h"
#include "via_mm.h"
#include "via_ttm_mod.h"

/* External TTM driver structure declaration */
extern struct ttm_device_funcs via_bo_driver;

/* Implementation of TTM memory manager initialization */
int via_mm_init(struct drm_device *dev)
{
    struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
    int ret;

    drm_dbg_driver(dev, "Entered %s.\n", __func__);

    /* Safety check for dev_priv */
    if (!dev_priv) {
        drm_err(dev, "NULL dev_priv in via_mm_init\n");
        return -EINVAL;
    }

    /* No TTM yet */
    dev_priv->ttm_initialized = false;

    /* Initialize VMA manager */
    drm_vma_offset_manager_init(&dev_priv->vma_manager, 0, 0);
    dev->vma_offset_manager = &dev_priv->vma_manager;

    /* Add resource manager for VRAM */
    ret = ttm_range_man_init(&dev_priv->bdev, TTM_PL_VRAM, false,
                 dev_priv->vram_size >> PAGE_SHIFT);
    if (ret) {
        drm_err(dev, "Failed to initialize VRAM memory manager: %d\n", ret);
        goto error_ttm_vram_mgr;
    }

    /* Add resource manager for System RAM */
    ret = ttm_range_man_init(&dev_priv->bdev, TTM_PL_SYSTEM, true, 0);
    if (ret) {
        drm_err(dev, "Failed to initialize System memory manager: %d\n", ret);
        goto error_ttm_system_mgr;
    }

    /* Initialize TTM device with proper parameters for kernel 6.12+ */
    ret = ttm_device_init(&dev_priv->bdev, &via_bo_driver, dev->dev,
                  dev->anon_inode->i_mapping,
                  dev->vma_offset_manager,
                  true, /* Enable swiotlb for 32-bit devices */
                  true);
    if (ret) {
        drm_err(dev, "Failed initializing buffer object driver: %d\n", ret);
        goto error_ttm_init;
    }

    dev_priv->ttm_initialized = true;
    drm_dbg_driver(dev, "TTM memory management initialized successfully\n");
    drm_dbg_driver(dev, "Exiting %s.\n", __func__);
    return 0;

error_ttm_init:
    ttm_range_man_fini(&dev_priv->bdev, TTM_PL_SYSTEM);
error_ttm_system_mgr:
    ttm_range_man_fini(&dev_priv->bdev, TTM_PL_VRAM);
error_ttm_vram_mgr:
    drm_vma_offset_manager_destroy(&dev_priv->vma_manager);
    drm_dbg_driver(dev, "Exiting %s with error: %d\n", __func__, ret);
    return ret;
}

void via_mm_fini(struct drm_device *dev)
{
    struct via_drm_priv *dev_priv = to_via_drm_priv(dev);

    drm_dbg_driver(dev, "Entered %s.\n", __func__);

    if (!dev_priv->ttm_initialized)
        goto exit;

    ttm_range_man_fini(&dev_priv->bdev, TTM_PL_VRAM);
    ttm_range_man_fini(&dev_priv->bdev, TTM_PL_SYSTEM);

    /* Clean up global TTM resources */
    if (dev_priv->ttm_initialized) {
        ttm_device_fini(&dev_priv->bdev);
        dev_priv->ttm_initialized = false;
    }

    /* Cleanup VMA manager */
    drm_vma_offset_manager_destroy(&dev_priv->vma_manager);

exit:
    drm_dbg_driver(dev, "Exiting %s.\n", __func__);
}

[File Ends] drivers/gpu/drm/via/via_mm.c

[File Begins] drivers/gpu/drm/via/via_mm.h
/*
 * Copyright 2023 The OpenChrome Project
 * [via_mm.h]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#ifndef __VIA_MM_H__
#define __VIA_MM_H__

#include <drm/drm_device.h>

/* Memory manager function declarations - implemented in via_object.c */
int via_mm_init(struct drm_device *dev);
void via_mm_fini(struct drm_device *dev);

#endif /* __VIA_MM_H__ */

[File Ends] drivers/gpu/drm/via/via_mm.h

[File Begins] drivers/gpu/drm/via/via_modeset.c
/*
 * Copyright 2023 The OpenChrome Project
 * [via_modeset.c]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <linux/spinlock.h>
#include <linux/completion.h>
#include <linux/sched.h>
#include <linux/mutex.h>

#include <drm/drm_atomic_helper.h>
#include <drm/drm_crtc_helper.h>
#include <drm/drm_gem_framebuffer_helper.h>
#include <drm/drm_mode_config.h>
#include <drm/drm_probe_helper.h>
#include <drm/drm_vblank.h>

#include "via_drv.h"
#include "via_hdmi_regs.h"
#include "via_connector.h"
#include "via_encoder.h"     /* Add the new encoder header */
#include "via_display_port.h" /* Add for display port constants */

/* Define the via_drm_mode_config_funcs which was missing */
static const struct drm_mode_config_funcs via_drm_mode_config_funcs = {
    .fb_create = drm_gem_fb_create,
    .atomic_check = drm_atomic_helper_check,
    .atomic_commit = drm_atomic_helper_commit,
};

/* Helper function to safely initialize hardware components with timeout */
static int via_hw_init_with_timeout(struct drm_device *dev, 
                                   int (*init_func)(struct drm_device *dev), 
                                   const char *component_name)
{
    int ret = 0;
    unsigned long timeout = jiffies + msecs_to_jiffies(1000); /* 1 second timeout */
    
    drm_dbg_kms(dev, "Starting %s initialization\n", component_name);
    
    /* Initialize with timeout check to avoid soft locks */
    ret = init_func(dev);
    if (ret) {
        drm_err(dev, "%s initialization failed: %d\n", component_name, ret);
        return ret;
    }
    
    if (time_after(jiffies, timeout)) {
        drm_warn(dev, "%s initialization took too long, may be unstable\n", component_name);
    }
    
    drm_dbg_kms(dev, "%s initialization completed\n", component_name);
    return 0;
}

/* This function is extracted from via_modeset_init in via_init.c to provide better
 * control over the initialization sequence with proper timeouts and error handling */
int via_modeset_init_safe(struct drm_device *dev)
{
    struct pci_dev *pdev = to_pci_dev(dev->dev);
    struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
    struct via_connector *con = NULL;
    struct via_encoder *enc = NULL;
    int ret = 0;
    unsigned int i;

    drm_dbg_kms(dev, "Starting safe modeset initialization\n");

    /* Safety check for dev_priv */
    if (!dev_priv) {
        drm_err(dev, "NULL dev_priv in via_modeset_init_safe\n");
        return -EINVAL;
    }

    /* Initialize the number of display connectors. */
    dev_priv->number_fp = 0;
    dev_priv->number_dvi = 0;

    dev->mode_config.min_width = 0;
    dev->mode_config.min_height = 0;
    dev->mode_config.max_width = 2044;
    dev->mode_config.max_height = 4096;
    dev->mode_config.preferred_depth = 24;
    dev->mode_config.cursor_width = VIA_CURSOR_SIZE;
    dev->mode_config.cursor_height = VIA_CURSOR_SIZE;

    dev->mode_config.funcs = &via_drm_mode_config_funcs;

    ret = drmm_mode_config_init(dev);
    if (ret) {
        drm_err(dev, "drmm_mode_config_init failed: %d\n", ret);
        return ret;
    }

    /* I2C bus initialization needs to come before any output probe */
    via_i2c_reg_init(dev_priv);
    ret = via_i2c_init(dev);
    if (ret) {
        drm_err(dev, "Failed to initialize I2C: %d\n", ret);
        goto exit;
    }

    /* Initialize CRTCs with timeout protection */
    for (i = 0; i < VIA_MAX_CRTC; i++) {
        ret = via_hw_init_with_timeout(dev, 
                                      (i == 0) ? via_crtc1_init : via_crtc2_init, 
                                      (i == 0) ? "CRTC1" : "CRTC2");
        if (ret) {
            drm_err(dev, "Failed to initialize %s\n", (i == 0) ? "CRTC1" : "CRTC2");
            goto error_crtc_init;
        }
    }

    /*
     * Allocate and initialize connectors and encoders.
     * Do this for all potential connectors (VGA, DVI, LVDS, HDMI),
     * even if we don't detect the hardware. The `detect` functions
     * will handle reporting whether a display is actually connected.
     */

    /* DAC (VGA) */
    enc = kzalloc(sizeof(*enc) + sizeof(*con), GFP_KERNEL);
    if (!enc) {
        drm_err(dev, "Failed to allocate DAC encoder\n");
        ret = -ENOMEM;
        goto error_crtc_init;
    }
    con = &enc->con;
    INIT_LIST_HEAD(&con->props);
    drm_connector_init(dev, &con->base, &via_dac_connector_funcs, DRM_MODE_CONNECTOR_VGA);
    drm_connector_helper_add(&con->base, &via_dac_connector_helper_funcs);
    drm_connector_register(&con->base);
    con->i2c_bus = dev_priv->dac_i2c_bus;
    con->base.doublescan_allowed = false;
    con->base.interlace_allowed = true;
    dev_priv->dac = enc; // Store encoder in dev_priv

    /* TMDS (DVI) */
    enc = kzalloc(sizeof(*enc) + sizeof(*con), GFP_KERNEL);
    if (!enc) {
        drm_err(dev, "Failed to allocate TMDS encoder\n");
        ret = -ENOMEM;
        goto error_alloc;
    }
    con = &enc->con;
    INIT_LIST_HEAD(&con->props);
    drm_connector_init(dev, &con->base, &via_dvi_connector_funcs, DRM_MODE_CONNECTOR_DVID);
    drm_connector_helper_add(&con->base, &via_tmds_connector_helper_funcs);
    drm_connector_register(&con->base);
    con->i2c_bus = dev_priv->ext_tmds_i2c_bus; /* Will be updated after probing */
    con->base.doublescan_allowed = false;
    con->base.interlace_allowed = false;
    dev_priv->tmds = enc; // Store encoder in dev_priv

    /* LVDS (Laptop Display) */
    enc = kzalloc(sizeof(*enc) + sizeof(*con), GFP_KERNEL);
    if (!enc) {
        drm_err(dev, "Failed to allocate LVDS encoder\n");
        ret = -ENOMEM;
        goto error_alloc;
    }
    con = &enc->con;
    INIT_LIST_HEAD(&con->props);
    drm_connector_init(dev, &con->base, &via_lvds_connector_funcs, DRM_MODE_CONNECTOR_LVDS);
    drm_connector_helper_add(&con->base, &via_lvds_connector_helper_funcs);
    drm_connector_register(&con->base);
    con->i2c_bus = VIA_I2C_NONE; /* Will be updated after probing */
    con->base.doublescan_allowed = false;
    con->base.interlace_allowed = false;
    dev_priv->lvds = enc; // Store encoder in dev_priv

    /* Now probe for hardware */
    via_dac_probe(dev);
    via_ext_dvi_probe(dev);
    via_tmds_probe(dev);
    via_lvds_probe(dev);

    /* Initialize encoders and attach them to the connectors */
    if (dev_priv->dac_presence) {
        /* Initialize DAC encoder */
        drm_encoder_init(dev, &dev_priv->dac->base, &via_crtc_encoder_funcs,
                DRM_MODE_ENCODER_DAC, NULL);
        drm_encoder_helper_add(&dev_priv->dac->base, &via_dac_encoder_helper_funcs);
        dev_priv->dac->base.possible_crtcs = 0x1; /* Can use CRTC1 */
        dev_priv->dac->base.possible_clones = 0;
        dev_priv->dac->encoder_type = VIA_ENCODER_DAC;
        drm_connector_attach_encoder(&dev_priv->dac->con.base, &dev_priv->dac->base);
    }

    if (dev_priv->ext_tmds_presence) {
        /* Initialize TMDS encoder */
        drm_encoder_init(dev, &dev_priv->tmds->base, &via_crtc_encoder_funcs,
                DRM_MODE_ENCODER_TMDS, NULL);
        drm_encoder_helper_add(&dev_priv->tmds->base, &via_tmds_encoder_helper_funcs);
        dev_priv->tmds->base.possible_crtcs = 0x3; /* Can use either CRTC */
        dev_priv->tmds->base.possible_clones = 0;
        dev_priv->tmds->encoder_type = VIA_ENCODER_TMDS;
        drm_connector_attach_encoder(&dev_priv->tmds->con.base, &dev_priv->tmds->base);
    }

    if (dev_priv->int_lvds_presence) {
        /* Initialize LVDS encoder */
        drm_encoder_init(dev, &dev_priv->lvds->base, &via_crtc_encoder_funcs,
                DRM_MODE_ENCODER_LVDS, NULL);
        drm_encoder_helper_add(&dev_priv->lvds->base, &via_lvds_encoder_helper_funcs);
        dev_priv->lvds->base.possible_crtcs = 0x3; /* Can use either CRTC */
        dev_priv->lvds->base.possible_clones = 0;
        dev_priv->lvds->encoder_type = VIA_ENCODER_LVDS;
        drm_connector_attach_encoder(&dev_priv->lvds->con.base, &dev_priv->lvds->base);
    }

    /* VX900 specific initialization for HDMI */
    if (pdev && (pdev->device == PCI_DEVICE_ID_VIA_CHROME9_HD ||
                 pdev->device == PCI_DEVICE_ID_VIA_CHROME9_HCM ||
                 pdev->device == PCI_DEVICE_ID_VIA_VX900)) {
        via_hdmi_init(dev, VIA_DI_PORT_NONE);
    }

    drm_mode_config_reset(dev);
    drm_kms_helper_poll_init(dev);

    drm_dbg_kms(dev, "Safe modeset initialization completed\n");
    return 0;

error_alloc:
    /* Clean up allocated encoders/connectors here */
error_crtc_init:
    via_i2c_exit();
exit:
    return ret;
}

/* This function provides a safe way to shutdown modeset if needed */
void via_modeset_fini_safe(struct drm_device *dev)
{
    drm_dbg_kms(dev, "Entered %s.\n", __func__);

    /* Shutdown in reverse order of initialization */
    drm_kms_helper_poll_fini(dev);
    drm_helper_force_disable_all(dev);
    via_i2c_exit();

    drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}

[File Ends] drivers/gpu/drm/via/via_modeset.c

[File Begins] drivers/gpu/drm/via/via_object.c
/*
 * Copyright © 2018-2019 Kevin Brace.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHOR(S) OR COPYRIGHT HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * Author(s):
 * Kevin Brace <kevinbrace@bracecomputerlab.com>
 */
/*
 * via_object.c
 *
 * Manages Buffer Objects (BO) via TTM.
 * Part of the TTM memory allocator.
 *
 */

#include <drm/drm_file.h>
#include <drm/drm_gem.h>
#include <drm/drm_gem_ttm_helper.h>

#include <drm/ttm/ttm_bo.h>
#include <drm/ttm/ttm_range_manager.h>

#include "via_drv.h"


static void via_gem_free(struct drm_gem_object *obj)
{
	struct ttm_buffer_object *ttm_bo = container_of(obj,
				struct ttm_buffer_object, base);
	struct drm_device *dev = ttm_bo->base.dev;

	drm_dbg_driver(dev, "Entered %s.\n", __func__);

	ttm_bo_put(ttm_bo);

	drm_dbg_driver(dev, "Exiting %s.\n", __func__);
}

static const struct vm_operations_struct via_ttm_bo_vm_ops = {
	.fault = ttm_bo_vm_fault,
	.open = ttm_bo_vm_open,
	.close = ttm_bo_vm_close,
	.access = ttm_bo_vm_access
};

static const struct drm_gem_object_funcs via_gem_object_funcs = {
	.free = via_gem_free,
	.vmap = drm_gem_ttm_vmap,
	.vunmap = drm_gem_ttm_vunmap,
	.mmap = drm_gem_ttm_mmap,
	.vm_ops = &via_ttm_bo_vm_ops,
};

/* Keep these as the canonical TTM domain placement functions */
int via_ttm_domain_to_placement(struct via_bo *bo, uint32_t domain)
{
	struct ttm_buffer_object *ttm_bo = &bo->ttm_bo;
	struct drm_device *dev = ttm_bo->base.dev;
	unsigned i = 0;

	drm_dbg_driver(dev, "Entered %s.\n", __func__);

	bo->placement.placement = bo->placements;

	if (domain == TTM_PL_SYSTEM) {
		bo->placements[i].fpfn = 0;
		bo->placements[i].lpfn = 0;
		bo->placements[i].mem_type = TTM_PL_SYSTEM;
		bo->placements[i].flags = 0;
		i++;
	}

	if (domain == TTM_PL_TT) {
		bo->placements[i].fpfn = 0;
		bo->placements[i].lpfn = 0;
		bo->placements[i].mem_type = TTM_PL_TT;
		bo->placements[i].flags = 0;
		i++;
	}

	if (domain == TTM_PL_VRAM) {
		bo->placements[i].fpfn = 0;
		bo->placements[i].lpfn = 0;
		bo->placements[i].mem_type = TTM_PL_VRAM;
		bo->placements[i].flags = 0;
		i++;
	}

	bo->placement.num_placement = i;

	drm_dbg_driver(dev, "Exiting %s.\n", __func__);
	return 0;  /* Return int value to match declaration */
}

/* Add proper prototype to avoid warning */
void via_ttm_bo_destroy(struct ttm_buffer_object *tbo);

void via_ttm_bo_destroy(struct ttm_buffer_object *tbo)
{
	struct via_bo *bo;
	struct drm_device *dev = tbo->base.dev;

	drm_dbg_driver(dev, "Entered %s.\n", __func__);

	/* Fix: use to_via_bo instead of to_ttm_bo */
	bo = to_via_bo(tbo);

	drm_gem_object_release(&tbo->base);
	kfree(bo);

	drm_dbg_driver(dev, "Exiting %s.\n", __func__);
}

/* Fix parameter type to match the declaration (uint32_t -> int) */
int via_bo_pin(struct via_bo *bo, int ttm_domain)
{
	struct ttm_buffer_object *ttm_bo = &bo->ttm_bo;
	struct drm_device *dev = ttm_bo->base.dev;
	struct ttm_operation_ctx ctx = {false, false};
	int ret = 0;

	drm_dbg_driver(dev, "Entered %s.\n", __func__);

	if (ttm_bo->pin_count) {
		goto pin;
	}

	via_ttm_domain_to_placement(bo, ttm_domain);
	ret = ttm_bo_validate(ttm_bo, &bo->placement, &ctx);
	if (ret) {
		goto exit;
	}

pin:
	ttm_bo_pin(ttm_bo);
exit:

	drm_dbg_driver(dev, "Exiting %s.\n", __func__);
	return ret;
}

void via_bo_unpin(struct via_bo *bo)
{
	struct ttm_buffer_object *ttm_bo = &bo->ttm_bo;
	struct drm_device *dev = ttm_bo->base.dev;

	drm_dbg_driver(dev, "Entered %s.\n", __func__);

	ttm_bo_unpin(ttm_bo);

	drm_dbg_driver(dev, "Exiting %s.\n", __func__);
}

/* Fix parameter type to match the declaration (uint64_t -> size_t) */
int via_bo_create(struct drm_device *dev,
			struct ttm_device *bdev,
			size_t size,
			enum ttm_bo_type type,
			uint32_t ttm_domain,
			bool kmap,
			struct via_bo **bo_ptr)
{
	struct ttm_buffer_object *ttm_bo;
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
	struct via_bo *bo;
	int ret;

	drm_dbg_driver(dev, "Entered %s.\n", __func__);

	bo = kzalloc(sizeof(*bo), GFP_KERNEL);
	if (!bo) {
		drm_err(dev, "Cannot allocate a TTM buffer object!\n");
		ret = -ENOMEM;
		goto exit;
	}

	ttm_bo = &bo->ttm_bo;

	/*
	 * It is an imperative to page align the requested buffer size
	 * prior to a memory allocation request, or various memory
	 * allocation related system instabilities may occur.
	 */
	size = ALIGN(size, PAGE_SIZE);

	ret = drm_gem_object_init(dev, &ttm_bo->base, size);
	if (ret) {
		drm_err(dev, "Cannot initialize a GEM object!\n");
		goto error;
	}

	ttm_bo->base.funcs = &via_gem_object_funcs;

	via_ttm_domain_to_placement(bo, ttm_domain);
	ret = ttm_bo_init_validate(&dev_priv->bdev, ttm_bo,
				type, &bo->placement,
				PAGE_SIZE >> PAGE_SHIFT, false,
				NULL, NULL, via_ttm_bo_destroy);
	if (ret) {
		drm_err(dev, "Cannot initialize a TTM object!\n");
		goto error;  /* Changed from exit to error for proper cleanup */
	}

	if (kmap) {
		ret = ttm_bo_reserve(ttm_bo, true, false, NULL);
		if (ret) {
			ttm_bo_put(ttm_bo);
			goto exit;
		}

		ret = via_bo_pin(bo, ttm_domain);
		ttm_bo_unreserve(ttm_bo);
		if (ret) {
			ttm_bo_put(ttm_bo);
			goto exit;
		}

		ret = ttm_bo_kmap(ttm_bo, 0, PFN_UP(ttm_bo->resource->size),
					&bo->kmap);
		if (ret) {
			ttm_bo_put(ttm_bo);
			goto exit;
		}
	}

	*bo_ptr = bo;
	goto exit;
error:
	kfree(bo);
exit:
	drm_dbg_driver(dev, "Exiting %s.\n", __func__);
	return ret;
}

void via_bo_destroy(struct via_bo *bo, bool kmap)
{
	struct ttm_buffer_object *ttm_bo = &bo->ttm_bo;
	struct drm_device *dev = ttm_bo->base.dev;
	int ret;

	drm_dbg_driver(dev, "Entered %s.\n", __func__);

	if (kmap) {
		ttm_bo_kunmap(&bo->kmap);

		ret = ttm_bo_reserve(ttm_bo, true, false, NULL);
		if (ret) {
			goto exit;
		}

		via_bo_unpin(bo);
		ttm_bo_unreserve(ttm_bo);
		if (ret) {
			goto exit;
		}
	}

	ttm_bo_put(ttm_bo);
exit:
	drm_dbg_driver(dev, "Exiting %s.\n", __func__);
}

/* Add declaration for via_bo_driver - use extern to reference the actual declaration in via_ttm.c */
extern struct ttm_device_funcs via_bo_driver;

/* Add declaration for via_ttm_debugfs_init */
void via_ttm_debugfs_init(struct drm_device *dev);

/* 
 * Remove the implementations of via_mm_init and via_mm_fini
 * They are now defined in via_mm.c
 * Keep only the external declarations here
 */
extern int via_mm_init(struct drm_device *dev);
extern void via_mm_fini(struct drm_device *dev);

[File Ends] drivers/gpu/drm/via/via_object.c

[File Begins] drivers/gpu/drm/via/via_object.h
/*
 * Copyright 2023 The OpenChrome Project
 * [via_object.h]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHOR(S) OR COPYRIGHT HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#ifndef __VIA_OBJECT_H__
#define __VIA_OBJECT_H__

#include <drm/drm_gem.h>
#include "via_drv.h"

/* Buffer object functions - updated signatures to match implementations */
extern int via_ttm_domain_to_placement(struct via_bo *bo, uint32_t domain);
extern int via_bo_create(struct drm_device *dev, struct ttm_device *bdev, 
                        size_t size, enum ttm_bo_type bo_type, 
                        uint32_t flags, bool interruptible, 
                        struct via_bo **pvbo);
extern void via_bo_destroy(struct via_bo *bo, bool force);
extern int via_bo_pin(struct via_bo *bo, int domain);
extern void via_bo_unpin(struct via_bo *bo);
extern void via_ttm_bo_destroy(struct ttm_buffer_object *bo);

#endif /* __VIA_OBJECT_H__ */

[File Ends] drivers/gpu/drm/via/via_object.h

[File Begins] drivers/gpu/drm/via/via_pcie.c
/*
 * Copyright 2023 The OpenChrome Project
 * [via_pcie.c]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

/*
 * PCIe interface functionality for VIA/OpenChrome DRM driver
 * This is a stub implementation to satisfy module build requirements
 */

#include <linux/pci.h>
#include <linux/module.h>
#include "via_drv.h"

/* 
 * Initialize PCIe functionality
 * This is a stub implementation
 */
int via_pcie_init(struct drm_device *dev)
{
    struct pci_dev *pdev = to_pci_dev(dev->dev);
    
    drm_dbg_driver(dev, "Entered %s.\n", __func__);
    
    /* Check if the device supports PCIe */
    if (pci_is_pcie(pdev)) {
        drm_dbg_driver(dev, "PCIe device detected\n");
    } else {
        drm_dbg_driver(dev, "Non-PCIe device detected\n");
    }
    
    drm_dbg_driver(dev, "Exiting %s.\n", __func__);
    return 0;
}

/*
 * Cleanup PCIe resources
 * This is a stub implementation
 */
void via_pcie_fini(struct drm_device *dev)
{
    drm_dbg_driver(dev, "Entered %s.\n", __func__);
    /* No resources to clean up in this stub */
    drm_dbg_driver(dev, "Exiting %s.\n", __func__);
}

[File Ends] drivers/gpu/drm/via/via_pcie.c

[File Begins] drivers/gpu/drm/via/via_pll.c
/*
 * Copyright 2012 James Simmons. All Rights Reserved.
 * Copyright 1998-2009 VIA Technologies, Inc. All Rights Reserved.
 * Copyright 2001-2009 S3 Graphics, Inc. All Rights Reserved.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation;
 * either version 2, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTIES OR REPRESENTATIONS; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR
 * A PARTICULAR PURPOSE.See the GNU General Public License
 * for more details.
 *
 * Author(s):
 * James Simmons <jsimmons@infradead.org>
 */

#include <linux/delay.h>
#include <linux/pci.h>
#include <linux/pci_ids.h>

#include "via_drv.h"
#include "via_pll.h"


#define CSR_VCO_UP	600000000
#define CSR_VCO_DOWN	300000000

#define PLL_DTZ_DEFAULT		(BIT(0) | BIT(1))

#define VIA_CLK_REFERENCE	14318180

struct pll_mrn_value {
	u32 pll_m;
	u32 pll_r;
	u32 pll_n;
	u32 diff_clk;
	u32 pll_fout;
};

/*
 * This function first gets the best frequency M, R, N value
 * to program the PLL according to the supplied frequence
 * passed in. After we get the MRN values the results are
 * formatted to fit properly into the PLL clock registers.
 *
 * PLL registers M, R, N value
 * [31:16]  DM[7:0]
 * [15:8 ]  DR[2:0]
 * [7 :0 ]  DN[6:0]
 */
u32 via_get_clk_value(struct drm_device *dev, u32 freq)
{
	struct pci_dev *pdev = to_pci_dev(dev->dev);
	u32 best_pll_n = 2, best_pll_r = 0, best_pll_m = 2, best_clk_diff = freq;
	u32 pll_fout, pll_fvco, pll_mrn = 0;
	u32 pll_n, pll_r, pll_m, clk_diff;
	struct pll_mrn_value pll_tmp[5] = {
		{ 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0 } };
	int count;

	if ((pdev->device != PCI_DEVICE_ID_VIA_CLE266_GFX) &&
		(pdev->device != PCI_DEVICE_ID_VIA_KM400_GFX)) {
		/* DN[6:0] */
		for (pll_n = 2; pll_n < 6; pll_n++) {
			/* DR[2:0] */
			for (pll_r = 0; pll_r < 6; pll_r++) {
				/* DM[9:0] */
				for (pll_m = 2; pll_m < 512; pll_m++) {
					/* first divide pll_n then multiply
					 * pll_m. We have to reduce pll_m
					 * to 512 to get rid of the overflow */
					pll_fvco = (VIA_CLK_REFERENCE / pll_n) * pll_m;
					if ((pll_fvco >= CSR_VCO_DOWN) && (pll_fvco <= CSR_VCO_UP)) {
						pll_fout = pll_fvco >> pll_r;
						if (pll_fout < freq)
							clk_diff = freq - pll_fout;
						else
							clk_diff = pll_fout - freq;

						/* if frequency (which is the PLL we want
						 * to set) > 150MHz, the MRN value we
						 * write in register must < frequency, and
						 * get MRN value whose M is the largeset */
						if (freq >= 150000000) {
							if ((clk_diff <= pll_tmp[0].diff_clk) || pll_tmp[0].pll_fout == 0) {
								for (count = ARRAY_SIZE(pll_tmp) - 1; count >= 1; count--)
									pll_tmp[count] = pll_tmp[count - 1];

								pll_tmp[0].pll_m = pll_m;
								pll_tmp[0].pll_r = pll_r;
								pll_tmp[0].pll_n = pll_n;
								pll_tmp[0].diff_clk = clk_diff;
								pll_tmp[0].pll_fout = pll_fout;
							}
						}

						if (clk_diff < best_clk_diff) {
							best_clk_diff = clk_diff;
							best_pll_m = pll_m;
							best_pll_n = pll_n;
							best_pll_r = pll_r;
						}
					} /* if pll_fvco in VCO range */
				} /* for PLL M */
			} /* for PLL R */
		} /* for PLL N */

		/* if frequency(which is the PLL we want to set) > 150MHz,
		 * the MRN value we write in register must < frequency,
		 * and get MRN value whose M is the largeset */
		if (freq > 150000000) {
			best_pll_m = pll_tmp[0].pll_m;
			best_pll_r = pll_tmp[0].pll_r;
			best_pll_n = pll_tmp[0].pll_n;
		}
	/* UniChrome IGP (CLE266, KM400(A), KN400, and P4M800 chipsets)
	 * requires a different formula for calculating the PLL parameters.
	 * The code was borrowed from OpenChrome DDX device driver UMS
	 * (User Mode Setting) section, but was modified to not use float type
	 * variables. */
	} else {
		for (pll_r = 0; pll_r < 4; ++pll_r) {
			for (pll_n = (pll_r == 0) ? 2 : 1; pll_n <= 7; ++pll_n) {
				for (pll_m = 1; pll_m <= 127; ++pll_m) {
					pll_fout = VIA_CLK_REFERENCE * pll_m;
					pll_fout /= (pll_n << pll_r);
					if (pll_fout < freq)
						clk_diff = freq - pll_fout;
					else
						clk_diff = pll_fout - freq;

					if (clk_diff < best_clk_diff) {
						best_clk_diff = clk_diff;
						best_pll_m = pll_m & 0x7F;
						best_pll_n = pll_n & 0x1F;
						best_pll_r = pll_r & 0x03;
					}
				}
			}
		}
	}

	switch (pdev->device) {
	case PCI_DEVICE_ID_VIA_CLE266_GFX:
	case PCI_DEVICE_ID_VIA_KM400_GFX:
		/* Clock Synthesizer Value 0[7:6]: DR[1:0]
		 * Clock Synthesizer Value 0[5:0]: DN[5:0] */
		pll_mrn = ((best_pll_r & 0x3) << 14 |
				(best_pll_n & 0x1F) << 8);
		/* Clock Synthesizer Value 1[6:0]: DM[6:0] */
		pll_mrn |= (best_pll_m & 0x7F);
		break;
	case PCI_DEVICE_ID_VIA_CHROME9_HCM:
	case PCI_DEVICE_ID_VIA_CHROME9_HD:
		/* Clock Synthesizer Value 0 : DM[7:0] */
		pll_mrn = (best_pll_m & 0xFF) << 16;
		/* Clock Synthesizer Value 1[1:0] : DM[9:8]
		 * Clock Synthesizer Value 1[4:2] : DR[2:0]
		 * Clock Synthesizer Value 1[7] : DTZ[0] */
		pll_mrn |= (((PLL_DTZ_DEFAULT & 0x1) << 7) |
				((best_pll_r & 0x7) << 2) |
				(((best_pll_m) >> 8) & 0x3)) << 8;
		/* Clock Synthesizer Value 2[6:0] : DN[6:0]
		 * Clock Synthesizer Value 2[7] : DTZ[1] */
		pll_mrn |= (((PLL_DTZ_DEFAULT >> 1) & 0x1) << 7) |
				((best_pll_n) & 0x7F);
		break;
	default:
		/* Clock Synthesizer Value 0 : DM[7:0] */
		pll_mrn = ((best_pll_m - 2) & 0xFF) << 16;
		/* Clock Synthesizer Value 1[1:0] : DM[9:8]
		 * Clock Synthesizer Value 1[4:2] : DR[2:0]
		 * Clock Synthesizer Value 1[7] : DTZ[0] */
		pll_mrn |= (((PLL_DTZ_DEFAULT & 0x1) << 7) |
				((best_pll_r & 0x7) << 2) |
				(((best_pll_m - 2) >> 8) & 0x3)) << 8;
		/* Clock Synthesizer Value 2[6:0] : DN[6:0]
		 * Clock Synthesizer Value 2[7] : DTZ[1] */
		pll_mrn |= (((PLL_DTZ_DEFAULT >> 1) & 0x1) << 7) |
				((best_pll_n - 2) & 0x7F);
		break;
	}
	return pll_mrn;
}

/* Set VCLK */
void via_set_vclock(struct drm_crtc *crtc, u32 clk)
{
	struct via_crtc *iga = container_of(crtc, struct via_crtc, base);
	struct drm_device *dev = crtc->dev;
	struct pci_dev *pdev = to_pci_dev(dev->dev);
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
	unsigned long max_loop = 50, i = 0;

	if (!iga->index) {
		/* IGA1 HW Reset Enable */
		svga_wcrt_mask(VGABASE, 0x17, 0x00, BIT(7));

		/* set clk */
		if ((pdev->device == PCI_DEVICE_ID_VIA_CLE266_GFX) ||
			(pdev->device == PCI_DEVICE_ID_VIA_KM400_GFX)) {
			vga_wseq(VGABASE, 0x46, (clk & 0xFF00) >> 8);	/* rshift + divisor */
			vga_wseq(VGABASE, 0x47, (clk & 0x00FF));	/* multiplier */
		} else {
			vga_wseq(VGABASE, 0x44, (clk & 0xFF0000) >> 16);
			vga_wseq(VGABASE, 0x45, (clk & 0x00FF00) >> 8);
			vga_wseq(VGABASE, 0x46, (clk & 0x0000FF));
		}
		/* Fire */
		svga_wmisc_mask(VGABASE, BIT(3) | BIT(2), BIT(3) | BIT(2));

		/* reset pll */
		svga_wseq_mask(VGABASE, 0x40, 0x02, 0x02);
		svga_wseq_mask(VGABASE, 0x40, 0x00, 0x02);

		/* exit hw reset */
		while ((vga_rseq(VGABASE, 0x3C) & BIT(3)) == 0 && i++ < max_loop)
			udelay(20);

		/* IGA1 HW Reset Disable */
		svga_wcrt_mask(VGABASE, 0x17, BIT(7), BIT(7));
	} else {
		/* IGA2 HW Reset Enable */
		svga_wcrt_mask(VGABASE, 0x6A, 0x00, BIT(6));

		/* set clk */
		if ((pdev->device == PCI_DEVICE_ID_VIA_CLE266_GFX) ||
			(pdev->device == PCI_DEVICE_ID_VIA_KM400_GFX)) {
			vga_wseq(VGABASE, 0x44, (clk & 0xFF00) >> 8);
			vga_wseq(VGABASE, 0x45, (clk & 0x00FF));
		} else {
			vga_wseq(VGABASE, 0x4A, (clk & 0xFF0000) >> 16);
			vga_wseq(VGABASE, 0x4B, (clk & 0x00FF00) >> 8);
			vga_wseq(VGABASE, 0x4C, (clk & 0x0000FF));
		}

		/* reset pll */
		svga_wseq_mask(VGABASE, 0x40, 0x04, 0x04);
		svga_wseq_mask(VGABASE, 0x40, 0x00, 0x04);

		/* exit hw reset */
		while ((vga_rseq(VGABASE, 0x3C) & BIT(2)) == 0 && i++ < max_loop)
			udelay(20);

		/* IGA2 HW Reset Disble, CR6A[6] = 1 */
		svga_wcrt_mask(VGABASE, 0x6A, BIT(6), BIT(6));
	}
}

[File Ends] drivers/gpu/drm/via/via_pll.c

[File Begins] drivers/gpu/drm/via/via_pll.h
/*
 * Copyright 2023 The OpenChrome Project
 * [via_pll.h]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHOR(S) OR COPYRIGHT HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#ifndef __VIA_PLL_H__
#define __VIA_PLL_H__

/* VIA PLL limits */
#define VIA_MIN_CHIP_CLOCK      25000   /* kHz */
#define VIA_MAX_CHIP_CLOCK      1000000 /* kHz */

/* VIA PLL calculation evaluation targets */
#define VIA_VCLK_OK             2000 /* kHz */
#define VIA_VCLK_FAIL           2500 /* kHz */

/* Function prototypes */
u32 via_get_clk_value(struct drm_device *dev, u32 freq);
void via_set_vclock(struct drm_crtc *crtc, u32 clk);

#endif /* __VIA_PLL_H__ */

[File Ends] drivers/gpu/drm/via/via_pll.h

[File Begins] drivers/gpu/drm/via/via_pm.c
/*
 * Copyright © 2017-2020 Kevin Brace.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHOR(S) OR COPYRIGHT HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * Author(s):
 * Kevin Brace <kevinbrace@bracecomputerlab.com>
 */


#include <linux/console.h>
#include <linux/pci.h>

#include <drm/drm_modeset_helper.h>

#include "via_drv.h"


int via_dev_pm_ops_suspend(struct device *dev)
{
	struct pci_dev *pdev = to_pci_dev(dev);
	struct drm_device *drm_dev = pci_get_drvdata(pdev);
	struct via_drm_priv *dev_priv = to_via_drm_priv(drm_dev);
	int ret = 0;

	drm_dbg_driver(drm_dev, "Entered %s.\n", __func__);

	console_lock();

	/*
	 * Frame Buffer Size Control register (SR14) and GTI registers
	 * (SR66 through SR6F) need to be saved and restored upon standby
	 * resume or can lead to a display corruption issue. These registers
	 * are only available on VX800, VX855, and VX900 chipsets. This bug
	 * was observed on VIA Embedded EPIA-M830 mainboard.
	 */
	if ((pdev->device == PCI_DEVICE_ID_VIA_CHROME9_HC3) ||
		(pdev->device == PCI_DEVICE_ID_VIA_CHROME9_HCM) ||
		(pdev->device == PCI_DEVICE_ID_VIA_CHROME9_HD)) {
		dev_priv->saved_sr14 = vga_rseq(VGABASE, 0x14);

		dev_priv->saved_sr66 = vga_rseq(VGABASE, 0x66);
		dev_priv->saved_sr67 = vga_rseq(VGABASE, 0x67);
		dev_priv->saved_sr68 = vga_rseq(VGABASE, 0x68);
		dev_priv->saved_sr69 = vga_rseq(VGABASE, 0x69);
		dev_priv->saved_sr6a = vga_rseq(VGABASE, 0x6a);
		dev_priv->saved_sr6b = vga_rseq(VGABASE, 0x6b);
		dev_priv->saved_sr6c = vga_rseq(VGABASE, 0x6c);
		dev_priv->saved_sr6d = vga_rseq(VGABASE, 0x6d);
		dev_priv->saved_sr6e = vga_rseq(VGABASE, 0x6e);
		dev_priv->saved_sr6f = vga_rseq(VGABASE, 0x6f);
	}

	/*
	 * 3X5.3B through 3X5.3F are scratch pad registers.
	 * They are important for FP detection.
	 * Their values need to be saved because they get lost
	 * when resuming from standby.
	 */
	dev_priv->saved_cr3b = vga_rcrt(VGABASE, 0x3b);
	dev_priv->saved_cr3c = vga_rcrt(VGABASE, 0x3c);
	dev_priv->saved_cr3d = vga_rcrt(VGABASE, 0x3d);
	dev_priv->saved_cr3e = vga_rcrt(VGABASE, 0x3e);
	dev_priv->saved_cr3f = vga_rcrt(VGABASE, 0x3f);

	console_unlock();

	ret = drm_mode_config_helper_suspend(drm_dev);
	if (ret) {
		drm_err(drm_dev, "Failed to prepare for suspend!\n");
		goto exit;
	}

	pci_save_state(pdev);
	pci_disable_device(pdev);
exit:
	drm_dbg_driver(drm_dev, "Exiting %s.\n", __func__);
	return ret;
}

int via_dev_pm_ops_resume(struct device *dev)
{
	struct pci_dev *pdev = to_pci_dev(dev);
	struct drm_device *drm_dev = pci_get_drvdata(pdev);
	struct via_drm_priv *dev_priv = to_via_drm_priv(drm_dev);
	void __iomem *regs = ioport_map(0x3c0, 100);
	u8 val;
	int ret = 0;

	drm_dbg_driver(drm_dev, "Entered %s.\n", __func__);

	if (pci_enable_device(pdev)) {
		drm_err(drm_dev, "Failed to reinitialize a PCI device "
					"after resume!\n");
		ret = -EIO;
		goto exit;
	}

	console_lock();

	val = ioread8(regs + 0x03);
	iowrite8(val | 0x1, regs + 0x03);
	val = ioread8(regs + 0x0C);
	iowrite8(val | 0x1, regs + 0x02);

	/*
	 * Unlock Extended IO Space.
	 */
	iowrite8(0x10, regs + 0x04);
	iowrite8(0x01, regs + 0x05);

	/*
	 * Unlock CRTC register protect.
	 */
	iowrite8(0x47, regs + 0x14);

	/*
	 * Enable MMIO.
	 */
	iowrite8(0x1a, regs + 0x04);
	val = ioread8(regs + 0x05);
	iowrite8(val | 0x38, regs + 0x05);

	/*
	 * Frame Buffer Size Control register (SR14) and GTI registers
	 * (SR66 through SR6F) need to be saved and restored upon standby
	 * resume or can lead to a display corruption issue. These registers
	 * are only available on VX800, VX855, and VX900 chipsets. This bug
	 * was observed on VIA Embedded EPIA-M830 mainboard.
	 */
	if ((pdev->device == PCI_DEVICE_ID_VIA_CHROME9_HC3) ||
		(pdev->device == PCI_DEVICE_ID_VIA_CHROME9_HCM) ||
		(pdev->device == PCI_DEVICE_ID_VIA_CHROME9_HD)) {
		vga_wseq(VGABASE, 0x14, dev_priv->saved_sr14);

		vga_wseq(VGABASE, 0x66, dev_priv->saved_sr66);
		vga_wseq(VGABASE, 0x67, dev_priv->saved_sr67);
		vga_wseq(VGABASE, 0x68, dev_priv->saved_sr68);
		vga_wseq(VGABASE, 0x69, dev_priv->saved_sr69);
		vga_wseq(VGABASE, 0x6a, dev_priv->saved_sr6a);
		vga_wseq(VGABASE, 0x6b, dev_priv->saved_sr6b);
		vga_wseq(VGABASE, 0x6c, dev_priv->saved_sr6c);
		vga_wseq(VGABASE, 0x6d, dev_priv->saved_sr6d);
		vga_wseq(VGABASE, 0x6e, dev_priv->saved_sr6e);
		vga_wseq(VGABASE, 0x6f, dev_priv->saved_sr6f);
	}

	/*
	 * 3X5.3B through 3X5.3F are scratch pad registers.
	 * They are important for FP detection.
	 * Their values need to be restored because they are undefined
	 * after resuming from standby.
	 */
	vga_wcrt(VGABASE, 0x3b, dev_priv->saved_cr3b);
	vga_wcrt(VGABASE, 0x3c, dev_priv->saved_cr3c);
	vga_wcrt(VGABASE, 0x3d, dev_priv->saved_cr3d);
	vga_wcrt(VGABASE, 0x3e, dev_priv->saved_cr3e);
	vga_wcrt(VGABASE, 0x3f, dev_priv->saved_cr3f);

	console_unlock();

	ret = drm_mode_config_helper_resume(drm_dev);
	if (ret) {
		drm_err(drm_dev, "Failed to perform a mode setting "
					"after resume!\n");
		goto exit;
	}

exit:
	drm_dbg_driver(drm_dev, "Exiting %s.\n", __func__);
	return ret;
}

[File Ends] drivers/gpu/drm/via/via_pm.c

[File Begins] drivers/gpu/drm/via/via_pm.h
/*
 * Copyright 2023 The OpenChrome Project
 * [via_pm.h]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHOR(S) OR COPYRIGHT HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#ifndef __VIA_PM_H__
#define __VIA_PM_H__

#include <linux/device.h>

int via_dev_pm_ops_suspend(struct device *dev);
int via_dev_pm_ops_resume(struct device *dev);

#endif /* __VIA_PM_H__ */

[File Ends] drivers/gpu/drm/via/via_pm.h

[File Begins] drivers/gpu/drm/via/via_regs.h
/*
 * Copyright 2023 The OpenChrome Project
 * [via_regs.h]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHOR(S) OR COPYRIGHT HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#ifndef __VIA_REGS_H__
#define __VIA_REGS_H__

/* Memory mapped register defines */
#define VIA_REG_INTERRUPT         0x0200
#define VIA_REG_STATUS            0x0204
#define VIA_REG_CONTROL           0x0208

/* Interrupt control bits */
#define VIA_IRQ_VBLANK_ENABLE     0x00000001
#define VIA_IRQ_VBLANK_STATUS     0x00000100

#endif /* __VIA_REGS_H__ */

[File Ends] drivers/gpu/drm/via/via_regs.h

[File Begins] drivers/gpu/drm/via/via_regset.c
/*
 * Copyright 2016 Kevin Brace
 * Copyright 2016 The OpenChrome Project
 * [via_regset.c]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include "via_drv.h"
#include "via_regset.h"

#include <drm/drm_print.h>
#include <linux/module.h>

/* Static array for vpit_table to reference */
static const struct vga_regset vpit_regs[] = {
    { VIA_PORT_SEQ, 0x00, 0x00, 0x00 }
};

/* VGA Initialization Table */
struct vga_registers vpit_table[] = {
    { 1, vpit_regs },
    { 0, NULL } /* Terminate with a 0 count entry */
};
EXPORT_SYMBOL_GPL(vpit_table);

/* Define register sets with at least one element */
/* Use extern for symbols already defined in via_crtc_hw.c */
extern const struct vga_regset iga1_cle266_fifo_depth_select[];
extern const struct vga_regset iga1_k8m800_fifo_depth_select[];
extern const struct vga_regset iga2_cle266_fifo_depth_select[];
extern const struct vga_regset iga2_k8m800_fifo_depth_select[];

/* Define minimum implementations for all required arrays */
const struct vga_regset lcd_hor_scaling[] = {
    { VIA_PORT_CRT, 0xA2, 0, 7 }
};
EXPORT_SYMBOL_GPL(lcd_hor_scaling);

const struct vga_regset lcd_ver_scaling[] = {
    { VIA_PORT_CRT, 0xA2, 0, 3 }
};
EXPORT_SYMBOL_GPL(lcd_ver_scaling);

const struct vga_regset iga1_hor_total[] = {
    { VIA_PORT_CRT, 0x00, 0, 7 }
};
EXPORT_SYMBOL_GPL(iga1_hor_total);

const struct vga_regset iga1_hor_addr[] = {
    { VIA_PORT_CRT, 0x01, 0, 7 }
};
EXPORT_SYMBOL_GPL(iga1_hor_addr);

const struct vga_regset iga1_hor_blank_start[] = {
    { VIA_PORT_CRT, 0x02, 0, 7 }
};
EXPORT_SYMBOL_GPL(iga1_hor_blank_start);

const struct vga_regset iga1_hor_blank_end[] = {
    { VIA_PORT_CRT, 0x03, 0, 7 }
};
EXPORT_SYMBOL_GPL(iga1_hor_blank_end);

const struct vga_regset iga1_hor_sync_start[] = {
    { VIA_PORT_CRT, 0x04, 0, 7 }
};
EXPORT_SYMBOL_GPL(iga1_hor_sync_start);

const struct vga_regset iga1_hor_sync_end[] = {
    { VIA_PORT_CRT, 0x05, 0, 7 }
};
EXPORT_SYMBOL_GPL(iga1_hor_sync_end);

const struct vga_regset iga1_ver_total[] = {
    { VIA_PORT_CRT, 0x06, 0, 7 }
};
EXPORT_SYMBOL_GPL(iga1_ver_total);

const struct vga_regset iga1_ver_addr[] = {
    { VIA_PORT_CRT, 0x12, 0, 7 }
};
EXPORT_SYMBOL_GPL(iga1_ver_addr);

const struct vga_regset iga1_ver_blank_start[] = {
    { VIA_PORT_CRT, 0x15, 0, 7 }
};
EXPORT_SYMBOL_GPL(iga1_ver_blank_start);

const struct vga_regset iga1_ver_blank_end[] = {
    { VIA_PORT_CRT, 0x16, 0, 7 }
};
EXPORT_SYMBOL_GPL(iga1_ver_blank_end);

const struct vga_regset iga1_ver_sync_start[] = {
    { VIA_PORT_CRT, 0x10, 0, 7 }
};
EXPORT_SYMBOL_GPL(iga1_ver_sync_start);

const struct vga_regset iga1_ver_sync_end[] = {
    { VIA_PORT_CRT, 0x11, 0, 7 }
};
EXPORT_SYMBOL_GPL(iga1_ver_sync_end);

const struct vga_regset iga1_fetch_count[] = {
    { VIA_PORT_CRT, 0x1C, 0, 7 }
};
EXPORT_SYMBOL_GPL(iga1_fetch_count);

const struct vga_regset iga1_offset[] = {
    { VIA_PORT_CRT, 0x13, 0, 7 }
};
EXPORT_SYMBOL_GPL(iga1_offset);

const struct vga_regset iga2_hor_total[] = {
    { VIA_PORT_CRT, 0x50, 0, 7 }
};
EXPORT_SYMBOL_GPL(iga2_hor_total);

const struct vga_regset iga2_hor_addr[] = {
    { VIA_PORT_CRT, 0x51, 0, 7 }
};
EXPORT_SYMBOL_GPL(iga2_hor_addr);

const struct vga_regset iga2_hor_blank_start[] = {
    { VIA_PORT_CRT, 0x52, 0, 7 }
};
EXPORT_SYMBOL_GPL(iga2_hor_blank_start);

const struct vga_regset iga2_hor_blank_end[] = {
    { VIA_PORT_CRT, 0x53, 0, 7 }
};
EXPORT_SYMBOL_GPL(iga2_hor_blank_end);

const struct vga_regset iga2_hor_sync_start[] = {
    { VIA_PORT_CRT, 0x54, 0, 7 }
};
EXPORT_SYMBOL_GPL(iga2_hor_sync_start);

const struct vga_regset iga2_hor_sync_end[] = {
    { VIA_PORT_CRT, 0x55, 0, 7 }
};
EXPORT_SYMBOL_GPL(iga2_hor_sync_end);

const struct vga_regset iga2_ver_total[] = {
    { VIA_PORT_CRT, 0x56, 0, 7 }
};
EXPORT_SYMBOL_GPL(iga2_ver_total);

const struct vga_regset iga2_ver_addr[] = {
    { VIA_PORT_CRT, 0x57, 0, 7 }
};
EXPORT_SYMBOL_GPL(iga2_ver_addr);

const struct vga_regset iga2_ver_blank_start[] = {
    { VIA_PORT_CRT, 0x58, 0, 7 }
};
EXPORT_SYMBOL_GPL(iga2_ver_blank_start);

const struct vga_regset iga2_ver_blank_end[] = {
    { VIA_PORT_CRT, 0x59, 0, 7 }
};
EXPORT_SYMBOL_GPL(iga2_ver_blank_end);

const struct vga_regset iga2_ver_sync_start[] = {
    { VIA_PORT_CRT, 0x5A, 0, 7 }
};
EXPORT_SYMBOL_GPL(iga2_ver_sync_start);

const struct vga_regset iga2_ver_sync_end[] = {
    { VIA_PORT_CRT, 0x5B, 0, 7 }
};
EXPORT_SYMBOL_GPL(iga2_ver_sync_end);

const struct vga_regset iga2_fetch_count[] = {
    { VIA_PORT_CRT, 0x65, 0, 7 }
};
EXPORT_SYMBOL_GPL(iga2_fetch_count);

const struct vga_regset iga2_offset[] = {
    { VIA_PORT_CRT, 0x66, 0, 7 }
};
EXPORT_SYMBOL_GPL(iga2_offset);

/* Define remaining required arrays with at least one element - use extern for already defined symbols */
extern const struct vga_regset iga1_cle266_fifo_threshold_select[];
extern const struct vga_regset iga1_k8m800_fifo_threshold_select[];
extern const struct vga_regset iga2_cle266_fifo_threshold_select[];
extern const struct vga_regset iga2_k8m800_fifo_threshold_select[];
extern const struct vga_regset iga1_cle266_fifo_high_threshold_select[];
extern const struct vga_regset iga1_k8m800_fifo_high_threshold_select[];
extern const struct vga_regset iga2_fifo_high_threshold_select[];
extern const struct vga_regset iga1_cle266_display_queue_expire_num[];
extern const struct vga_regset iga1_k8m800_display_queue_expire_num[];
extern const struct vga_regset iga2_display_queue_expire_num[];

/* These functions are already defined in via_vgahw.c - use extern declarations */
extern void load_value_to_registers(void __iomem *regbase, const struct vga_registers *regs, unsigned int value);
extern void load_register_tables(void __iomem *regbase, struct vga_registers *table);

/* Adapter function to handle different struct types */
void via_load_regset(void __iomem *regbase, struct vga_registers *regs, unsigned int value)
{
    /* Call the original function - structure should be compatible now */
    load_value_to_registers(regbase, regs, value);
}
EXPORT_SYMBOL_GPL(via_load_regset);
[File Ends] drivers/gpu/drm/via/via_regset.c

[File Begins] drivers/gpu/drm/via/via_regset.h
/*
 * Copyright 2023 The OpenChrome Project
 * [via_regset.h]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHOR(S) OR COPYRIGHT HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#ifndef __VIA_REGSET_H__
#define __VIA_REGSET_H__

#include <linux/io.h>
#include <video/vga.h>
#include "via_drv.h" 

/* Array sizes for all register sets */
#define VIA_LCD_HOR_SCALING_SIZE 1
#define VIA_LCD_VER_SCALING_SIZE 1
#define VIA_IGA1_HOR_TOTAL_SIZE 1
#define VIA_IGA1_HOR_ADDR_SIZE 1
#define VIA_IGA1_HOR_BLANK_START_SIZE 1
#define VIA_IGA1_HOR_BLANK_END_SIZE 1
#define VIA_IGA1_HOR_SYNC_START_SIZE 1
#define VIA_IGA1_HOR_SYNC_END_SIZE 1
#define VIA_IGA1_VER_TOTAL_SIZE 1
#define VIA_IGA1_VER_ADDR_SIZE 1
#define VIA_IGA1_VER_BLANK_START_SIZE 1
#define VIA_IGA1_VER_BLANK_END_SIZE 1
#define VIA_IGA1_VER_SYNC_START_SIZE 1
#define VIA_IGA1_VER_SYNC_END_SIZE 1
#define VIA_IGA1_FETCH_COUNT_SIZE 1
#define VIA_IGA1_OFFSET_SIZE 1

#define VIA_IGA2_HOR_TOTAL_SIZE 1
#define VIA_IGA2_HOR_ADDR_SIZE 1
#define VIA_IGA2_HOR_BLANK_START_SIZE 1
#define VIA_IGA2_HOR_BLANK_END_SIZE 1
#define VIA_IGA2_HOR_SYNC_START_SIZE 1
#define VIA_IGA2_HOR_SYNC_END_SIZE 1
#define VIA_IGA2_VER_TOTAL_SIZE 1
#define VIA_IGA2_VER_ADDR_SIZE 1
#define VIA_IGA2_VER_BLANK_START_SIZE 1
#define VIA_IGA2_VER_BLANK_END_SIZE 1
#define VIA_IGA2_VER_SYNC_START_SIZE 1
#define VIA_IGA2_VER_SYNC_END_SIZE 1
#define VIA_IGA2_FETCH_COUNT_SIZE 1
#define VIA_IGA2_OFFSET_SIZE 2

#define VIA_IGA1_CLE266_FIFO_DEPTH_SIZE 1
#define VIA_IGA1_K8M800_FIFO_DEPTH_SIZE 1
#define VIA_IGA2_CLE266_FIFO_DEPTH_SIZE 1
#define VIA_IGA2_K8M800_FIFO_DEPTH_SIZE 1
#define VIA_IGA1_CLE266_FIFO_THRESHOLD_SIZE 1
#define VIA_IGA1_K8M800_FIFO_THRESHOLD_SIZE 1
#define VIA_IGA2_CLE266_FIFO_THRESHOLD_SIZE 1
#define VIA_IGA2_K8M800_FIFO_THRESHOLD_SIZE 1
#define VIA_IGA1_CLE266_FIFO_HIGH_THRESHOLD_SIZE 1
#define VIA_IGA1_K8M800_FIFO_HIGH_THRESHOLD_SIZE 1
#define VIA_IGA2_FIFO_HIGH_THRESHOLD_SIZE 1
#define VIA_IGA1_CLE266_DISPLAY_QUEUE_SIZE 1
#define VIA_IGA1_K8M800_DISPLAY_QUEUE_SIZE 1
#define VIA_IGA2_DISPLAY_QUEUE_SIZE 1

/* 
 * IMPORTANT: Do NOT redefine struct vga_regset here!
 * It's already defined in via_drv.h
 */

/* External register definitions */
extern const struct vga_regset iga1_cle266_fifo_depth_select[];
extern const struct vga_regset iga1_k8m800_fifo_depth_select[];
extern const struct vga_regset iga2_cle266_fifo_depth_select[];
extern const struct vga_regset iga2_k8m800_fifo_depth_select[];
extern const struct vga_regset iga1_cle266_fifo_threshold_select[];
extern const struct vga_regset iga1_k8m800_fifo_threshold_select[];
extern const struct vga_regset iga2_cle266_fifo_threshold_select[];
extern const struct vga_regset iga2_k8m800_fifo_threshold_select[];
extern const struct vga_regset iga1_cle266_fifo_high_threshold_select[];
extern const struct vga_regset iga1_k8m800_fifo_high_threshold_select[];
extern const struct vga_regset iga2_fifo_high_threshold_select[];
extern const struct vga_regset iga1_cle266_display_queue_expire_num[];
extern const struct vga_regset iga1_k8m800_display_queue_expire_num[];
extern const struct vga_regset iga2_display_queue_expire_num[];
extern const struct vga_regset lcd_hor_scaling[];
extern const struct vga_regset lcd_ver_scaling[];
extern const struct vga_regset iga1_hor_total[];
extern const struct vga_regset iga1_hor_addr[];
extern const struct vga_regset iga1_hor_blank_start[];
extern const struct vga_regset iga1_hor_blank_end[];
extern const struct vga_regset iga1_hor_sync_start[];
extern const struct vga_regset iga1_hor_sync_end[];
extern const struct vga_regset iga1_ver_total[];
extern const struct vga_regset iga1_ver_addr[];
extern const struct vga_regset iga1_ver_blank_start[];
extern const struct vga_regset iga1_ver_blank_end[];
extern const struct vga_regset iga1_ver_sync_start[];
extern const struct vga_regset iga1_ver_sync_end[];
extern const struct vga_regset iga1_fetch_count[];
extern const struct vga_regset iga1_offset[];
extern const struct vga_regset iga2_hor_total[];
extern const struct vga_regset iga2_hor_addr[];
extern const struct vga_regset iga2_hor_blank_start[];
extern const struct vga_regset iga2_hor_blank_end[];
extern const struct vga_regset iga2_hor_sync_start[];
extern const struct vga_regset iga2_hor_sync_end[];
extern const struct vga_regset iga2_ver_total[];
extern const struct vga_regset iga2_ver_addr[];
extern const struct vga_regset iga2_ver_blank_start[];
extern const struct vga_regset iga2_ver_blank_end[];
extern const struct vga_regset iga2_ver_sync_start[];
extern const struct vga_regset iga2_ver_sync_end[];
extern const struct vga_regset iga2_fetch_count[];
extern const struct vga_regset iga2_offset[];

/* VGA Init Table */
extern struct vga_registers vpit_table[];

/* Function prototypes for register operations */
void load_value_to_registers(void __iomem *regbase, const struct vga_registers *regs, 
                         unsigned int value);
void load_register_tables(void __iomem *regbase, struct vga_registers *table);

/* Adapter function for compatibility */
void via_load_regset(void __iomem *regbase, struct vga_registers *regs, unsigned int value);

#endif /* __VIA_REGSET_H__ */

[File Ends] drivers/gpu/drm/via/via_regset.h

[File Begins] drivers/gpu/drm/via/via_sii164.c
/*
 * Copyright © 2016-2018 Kevin Brace.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the next
 * paragraph) shall be included in all copies or substantial portions of the
 * Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * Author(s):
 * Kevin Brace <kevinbrace@bracecomputerlab.com>
 */

#include <linux/pci.h>

#include <drm/drm_atomic_state_helper.h>
#include <drm/drm_connector.h>
#include <drm/drm_crtc_helper.h>
#include <drm/drm_edid.h>
#include <drm/drm_modeset_helper_vtables.h>
#include <drm/drm_probe_helper.h>

#include "via_drv.h"
#include "via_tmds_regs.h" // Include the new header file


#define SII164_VEN		BIT(5)
#define SII164_HEN		BIT(4)
#define SII164_DSEL		BIT(3)
#define SII164_BSEL		BIT(2)
#define SII164_EDGE		BIT(1)
#define SII164_PDB		BIT(0)


static void via_sii164_power(struct drm_device *dev,
				struct i2c_adapter *i2c_bus,
				bool power_state)
{
	u8 buf;
	u8 power_bit;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	via_i2c_readbytes(i2c_bus, 0x38, 0x08, &buf, 1);
	power_bit = power_state ? SII164_PDB : 0x00;
	buf &= ~power_bit;
	buf |= power_bit;
	via_i2c_writebytes(i2c_bus, 0x38, 0x08, &buf, 1);
	drm_dbg_kms(dev, "SiI 164 (DVI) Power: %s\n",
			power_state ? "On" : "Off");

	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}


static bool via_sii164_sense(struct drm_device *dev,
				struct i2c_adapter *i2c_bus)
{
	u8 buf;
	bool rx_detected = false;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	via_i2c_readbytes(i2c_bus, 0x38, 0x09, &buf, 1);
	if (buf & BIT(2)) {
		rx_detected = true;
	}

	drm_dbg_kms(dev, "SiI 164 (DVI) Connector Sense: %s\n",
			rx_detected ? "Connected" : "Not Connected");

	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
	return rx_detected;
}

static void via_sii164_display_registers(struct drm_device *dev,
					struct i2c_adapter *i2c_bus)
{
	uint8_t i;
	u8 buf;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	drm_dbg_kms(dev, "SiI 164 Registers:\n");
	for (i = 0; i < 0x10; i++) {
		via_i2c_readbytes(i2c_bus, 0x38, i, &buf, 1);
		drm_dbg_kms(dev, "0x%02x: 0x%02x\n", i, buf);
	}

	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}

static void via_sii164_init_registers(struct drm_device *dev,
					struct i2c_adapter *i2c_bus)
{
	u8 buf;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	buf = SII164_VEN | SII164_HEN |
		SII164_DSEL |
		SII164_EDGE | SII164_PDB;
	via_i2c_writebytes(i2c_bus, 0x38, 0x08, &buf, 1);

	/*
	 * Route receiver detect bit (Offset 0x09[2]) as the output
	 * of MSEN pin.
	 */
	buf = BIT(5);
	via_i2c_writebytes(i2c_bus, 0x38, 0x09, &buf, 1);

	buf = 0x90;
	via_i2c_writebytes(i2c_bus, 0x38, 0x0a, &buf, 1);

	buf = 0x89;
	via_i2c_writebytes(i2c_bus, 0x38, 0x0c, &buf, 1);

	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}


static const struct drm_encoder_funcs via_sii164_drm_encoder_funcs = {
	.destroy = via_encoder_destroy,
};

static void via_sii164_dpms(struct drm_encoder *encoder, int mode)
{
	struct via_encoder *enc = container_of(encoder,
					struct via_encoder, base);
	struct drm_device *dev = encoder->dev;
	struct i2c_adapter *i2c_bus;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	if (enc->i2c_bus & VIA_I2C_BUS1) {
		i2c_bus = via_find_ddc_bus(0x26);
	} else if (enc->i2c_bus & VIA_I2C_BUS2) {
		i2c_bus = via_find_ddc_bus(0x31);
	} else if (enc->i2c_bus & VIA_I2C_BUS3) {
		i2c_bus = via_find_ddc_bus(0x25);
	} else if (enc->i2c_bus & VIA_I2C_BUS4) {
		i2c_bus = via_find_ddc_bus(0x2c);
	} else if (enc->i2c_bus & VIA_I2C_BUS5) {
		i2c_bus = via_find_ddc_bus(0x3d);
	} else {
		i2c_bus = NULL;
		goto exit;
	}

	via_sii164_display_registers(dev, i2c_bus);
	switch (mode) {
	case DRM_MODE_DPMS_ON:
		via_sii164_power(dev, i2c_bus, true);
		via_transmitter_io_pad_state(dev, enc->di_port, true);
		break;
	case DRM_MODE_DPMS_STANDBY:
	case DRM_MODE_DPMS_SUSPEND:
	case DRM_MODE_DPMS_OFF:
		via_sii164_power(dev, i2c_bus, false);
		via_transmitter_io_pad_state(dev, enc->di_port, false);
		break;
	default:
		drm_err(dev, "Bad DPMS mode.");
		break;
	}

exit:
	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}

static bool via_sii164_mode_fixup(struct drm_encoder *encoder,
				const struct drm_display_mode *mode,
				struct drm_display_mode *adjusted_mode)
{
	struct drm_device *dev = encoder->dev;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	drm_mode_set_crtcinfo(adjusted_mode, 0);

	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
	return true;
}

static void via_sii164_mode_set(struct drm_encoder *encoder,
				struct drm_display_mode *mode,
				struct drm_display_mode *adjusted_mode)
{
	struct via_crtc *iga = container_of(encoder->crtc, struct via_crtc, base);
	struct via_encoder *enc = container_of(encoder,
					struct via_encoder, base);
	struct drm_device *dev = encoder->dev;
	struct pci_dev *pdev = to_pci_dev(dev->dev);
	struct i2c_adapter *i2c_bus;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	if (enc->i2c_bus & VIA_I2C_BUS1) {
		i2c_bus = via_find_ddc_bus(0x26);
	} else if (enc->i2c_bus & VIA_I2C_BUS2) {
		i2c_bus = via_find_ddc_bus(0x31);
	} else if (enc->i2c_bus & VIA_I2C_BUS3) {
		i2c_bus = via_find_ddc_bus(0x25);
	} else if (enc->i2c_bus & VIA_I2C_BUS4) {
		i2c_bus = via_find_ddc_bus(0x2c);
	} else if (enc->i2c_bus & VIA_I2C_BUS5) {
		i2c_bus = via_find_ddc_bus(0x3d);
	} else {
		i2c_bus = NULL;
		goto exit;
	}

	via_transmitter_clock_drive_strength(dev, enc->di_port, 0x03);
	via_transmitter_data_drive_strength(dev, enc->di_port, 0x03);
	via_transmitter_io_pad_state(dev, enc->di_port, true);
	if (pdev->device == PCI_DEVICE_ID_VIA_CLE266_GFX) {
		via_clock_source(dev, enc->di_port, true);
	}

	via_sii164_display_registers(dev, i2c_bus);
	via_sii164_init_registers(dev, i2c_bus);
	via_sii164_display_registers(dev, i2c_bus);

	via_transmitter_display_source(dev, enc->di_port, iga->index);
exit:

	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}

static void via_sii164_prepare(struct drm_encoder *encoder)
{
	struct via_encoder *enc = container_of(encoder,
					struct via_encoder, base);
	struct drm_device *dev = encoder->dev;
	struct pci_dev *pdev = to_pci_dev(dev->dev);
	struct i2c_adapter *i2c_bus;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	if (enc->i2c_bus & VIA_I2C_BUS1) {
		i2c_bus = via_find_ddc_bus(0x26);
	} else if (enc->i2c_bus & VIA_I2C_BUS2) {
		i2c_bus = via_find_ddc_bus(0x31);
	} else if (enc->i2c_bus & VIA_I2C_BUS3) {
		i2c_bus = via_find_ddc_bus(0x25);
	} else if (enc->i2c_bus & VIA_I2C_BUS4) {
		i2c_bus = via_find_ddc_bus(0x2c);
	} else if (enc->i2c_bus & VIA_I2C_BUS5) {
		i2c_bus = via_find_ddc_bus(0x3d);
	} else {
		i2c_bus = NULL;
		goto exit;
	}

	via_sii164_power(dev, i2c_bus, false);
	via_transmitter_io_pad_state(dev, enc->di_port, false);
	if (pdev->device == PCI_DEVICE_ID_VIA_CLE266_GFX) {
		via_output_enable(dev, enc->di_port, false);
	}

exit:
	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}

static void via_sii164_commit(struct drm_encoder *encoder)
{
	struct via_encoder *enc = container_of(encoder,
					struct via_encoder, base);
	struct drm_device *dev = encoder->dev;
	struct pci_dev *pdev = to_pci_dev(dev->dev);
	struct i2c_adapter *i2c_bus;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	if (enc->i2c_bus & VIA_I2C_BUS1) {
		i2c_bus = via_find_ddc_bus(0x26);
	} else if (enc->i2c_bus & VIA_I2C_BUS2) {
		i2c_bus = via_find_ddc_bus(0x31);
	} else if (enc->i2c_bus & VIA_I2C_BUS3) {
		i2c_bus = via_find_ddc_bus(0x25);
	} else if (enc->i2c_bus & VIA_I2C_BUS4) {
		i2c_bus = via_find_ddc_bus(0x2c);
	} else if (enc->i2c_bus & VIA_I2C_BUS5) {
		i2c_bus = via_find_ddc_bus(0x3d);
	} else {
		i2c_bus = NULL;
		goto exit;
	}

	via_sii164_power(dev, i2c_bus, true);
	via_transmitter_io_pad_state(dev, enc->di_port, true);
	if (pdev->device == PCI_DEVICE_ID_VIA_CLE266_GFX) {
		via_output_enable(dev, enc->di_port, true);
	}

exit:
	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}

static void via_sii164_disable(struct drm_encoder *encoder)
{
	struct via_encoder *enc = container_of(encoder,
					struct via_encoder, base);
	struct drm_device *dev = encoder->dev;
	struct i2c_adapter *i2c_bus;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	if (enc->i2c_bus & VIA_I2C_BUS1) {
		i2c_bus = via_find_ddc_bus(0x26);
	} else if (enc->i2c_bus & VIA_I2C_BUS2) {
		i2c_bus = via_find_ddc_bus(0x31);
	} else if (enc->i2c_bus & VIA_I2C_BUS3) {
		i2c_bus = via_find_ddc_bus(0x25);
	} else if (enc->i2c_bus & VIA_I2C_BUS4) {
		i2c_bus = via_find_ddc_bus(0x2c);
	} else if (enc->i2c_bus & VIA_I2C_BUS5) {
		i2c_bus = via_find_ddc_bus(0x3d);
	} else {
		i2c_bus = NULL;
		goto exit;
	}

	via_sii164_power(dev, i2c_bus, false);
	via_transmitter_io_pad_state(dev, enc->di_port, false);
exit:
	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}


static const struct drm_encoder_helper_funcs
via_sii164_drm_encoder_helper_funcs = {
	.dpms = via_sii164_dpms,
	.mode_fixup = via_sii164_mode_fixup,
	.mode_set = via_sii164_mode_set,
	.prepare = via_sii164_prepare,
	.commit = via_sii164_commit,
	.disable = via_sii164_disable,
};


static enum drm_connector_status via_sii164_detect(
					struct drm_connector *connector,
					bool force)
{
	struct drm_device *dev = connector->dev;
	struct via_connector *con = container_of(connector,
					struct via_connector, base);
	struct i2c_adapter *i2c_bus;
	enum drm_connector_status ret = connector_status_disconnected;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	if (con->i2c_bus & VIA_I2C_BUS1) {
		i2c_bus = via_find_ddc_bus(0x26);
	} else if (con->i2c_bus & VIA_I2C_BUS2) {
		i2c_bus = via_find_ddc_bus(0x31);
	} else if (con->i2c_bus & VIA_I2C_BUS3) {
		i2c_bus = via_find_ddc_bus(0x25);
	} else if (con->i2c_bus & VIA_I2C_BUS4) {
		i2c_bus = via_find_ddc_bus(0x2c);
	} else if (con->i2c_bus & VIA_I2C_BUS5) {
		i2c_bus = via_find_ddc_bus(0x3d);
	} else {
		i2c_bus = NULL;
		goto exit;
	}

	if (via_sii164_sense(dev, i2c_bus)) {
		ret = connector_status_connected;
		drm_dbg_kms(dev, "DVI detected.\n");
	}

exit:
	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
	return ret;
}

static const struct drm_connector_funcs via_sii164_drm_connector_funcs = {
	.dpms = drm_helper_connector_dpms,
	.detect = via_sii164_detect,
	.fill_modes = drm_helper_probe_single_connector_modes,
	.destroy = via_connector_destroy,
	.reset = drm_atomic_helper_connector_reset,
	.atomic_duplicate_state =
			drm_atomic_helper_connector_duplicate_state,
	.atomic_destroy_state =
			drm_atomic_helper_connector_destroy_state,
};


static int via_sii164_mode_valid(struct drm_connector *connector,
					struct drm_display_mode *mode)
{
	struct drm_device *dev = connector->dev;
	struct via_connector *con = container_of(connector,
					struct via_connector, base);
	struct i2c_adapter *i2c_bus;
	u8 buf;
	uint32_t low_freq_limit, high_freq_limit;
	int ret;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	if (con->i2c_bus & VIA_I2C_BUS1) {
		i2c_bus = via_find_ddc_bus(0x26);
	} else if (con->i2c_bus & VIA_I2C_BUS2) {
		i2c_bus = via_find_ddc_bus(0x31);
	} else if (con->i2c_bus & VIA_I2C_BUS3) {
		i2c_bus = via_find_ddc_bus(0x25);
	} else if (con->i2c_bus & VIA_I2C_BUS4) {
		i2c_bus = via_find_ddc_bus(0x2c);
	} else if (con->i2c_bus & VIA_I2C_BUS5) {
		i2c_bus = via_find_ddc_bus(0x3d);
	} else {
		i2c_bus = NULL;
		ret = MODE_ERROR;
		goto exit;
	}

	via_i2c_readbytes(i2c_bus, 0x38, 0x06, &buf, 1);
	low_freq_limit = buf * 1000;
	via_i2c_readbytes(i2c_bus, 0x38, 0x07, &buf, 1);
	high_freq_limit = (buf + 65) * 1000;
	drm_dbg_kms(dev, "Low Frequency Limit: %u KHz\n", low_freq_limit);
	drm_dbg_kms(dev, "High Frequency Limit: %u KHz\n", high_freq_limit);

	if (mode->clock < low_freq_limit) {
		ret = MODE_CLOCK_LOW;
		goto exit;
	}

	if (mode->clock > high_freq_limit) {
		ret = MODE_CLOCK_HIGH;
		goto exit;
	}

	ret = MODE_OK;
exit:
	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
	return ret;
}

static int via_sii164_get_modes(struct drm_connector *connector)
{
	struct drm_device *dev = connector->dev;
	struct via_connector *con = container_of(connector,
					struct via_connector, base);
	int count = 0;
	struct i2c_adapter *i2c_bus;
	struct edid *edid = NULL;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	if (con->i2c_bus & VIA_I2C_BUS1) {
		i2c_bus = via_find_ddc_bus(0x26);
	} else if (con->i2c_bus & VIA_I2C_BUS2) {
		i2c_bus = via_find_ddc_bus(0x31);
	} else if (con->i2c_bus & VIA_I2C_BUS3) {
		i2c_bus = via_find_ddc_bus(0x25);
	} else if (con->i2c_bus & VIA_I2C_BUS4) {
		i2c_bus = via_find_ddc_bus(0x2c);
	} else if (con->i2c_bus & VIA_I2C_BUS5) {
		i2c_bus = via_find_ddc_bus(0x3d);
	} else {
		i2c_bus = NULL;
		goto exit;
	}

	edid = drm_get_edid(&con->base, i2c_bus);
	if (edid) {
		if (edid->input & DRM_EDID_INPUT_DIGITAL) {
			drm_connector_update_edid_property(connector, edid);
			count = drm_add_edid_modes(connector, edid);
			drm_dbg_kms(dev, "DVI EDID information was obtained.\n");
		}

		kfree(edid);
	}

exit:
	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
	return count;
}

static const struct drm_connector_helper_funcs
via_sii164_drm_connector_helper_funcs = {
	.mode_valid = via_sii164_mode_valid,
	.get_modes = via_sii164_get_modes,
};

// Fix the function signature to match the header declaration
bool via_sii164_probe(struct drm_device *dev, u32 i2c_bus_id, u32 di_port)
{
    struct i2c_adapter *i2c_bus = NULL;
    u8 buf;
    u16 vendor_id, device_id, revision;
    bool device_detected = false;

    drm_dbg_kms(dev, "Entered %s.\n", __func__);

    // Convert i2c_bus_id to an actual i2c_adapter
    if (i2c_bus_id == VIA_I2C_BUS1) {
        i2c_bus = via_find_ddc_bus(0x26);
    } else if (i2c_bus_id == VIA_I2C_BUS2) {
        i2c_bus = via_find_ddc_bus(0x31);
    } else if (i2c_bus_id == VIA_I2C_BUS3) {
        i2c_bus = via_find_ddc_bus(0x25);
    } else if (i2c_bus_id == VIA_I2C_BUS4) {
        i2c_bus = via_find_ddc_bus(0x2c);
    } else if (i2c_bus_id == VIA_I2C_BUS5) {
        i2c_bus = via_find_ddc_bus(0x3d);
    }

    if (!i2c_bus) {
        goto exit;
    }

    via_i2c_readbytes(i2c_bus, 0x38, 0x00, &buf, 1);
    vendor_id = buf;
    via_i2c_readbytes(i2c_bus, 0x38, 0x01, &buf, 1);
    vendor_id |= (buf << 8);
    drm_dbg_kms(dev, "Vendor ID: %x\n", vendor_id);
    via_i2c_readbytes(i2c_bus, 0x38, 0x02, &buf, 1);
    device_id = buf;
    via_i2c_readbytes(i2c_bus, 0x38, 0x03, &buf, 1);
    device_id |= (buf << 8);
    drm_dbg_kms(dev, "Device ID: %x\n", device_id);
    via_i2c_readbytes(i2c_bus, 0x38, 0x04, &buf, 1);
    revision = buf;
    drm_dbg_kms(dev, "Revision: %x\n", revision);

    if ((vendor_id != 0x0001) || (device_id != 0x0006)) {
        goto exit;
    }

    device_detected = true;
exit:
    drm_dbg_kms(dev, "Exiting %s.\n", __func__);
    return device_detected;
}

void via_sii164_init(struct drm_device *dev)
{
    struct via_connector *con;
    struct via_encoder *enc;
    struct via_drm_priv *dev_priv = to_via_drm_priv(dev);

    if (!dev_priv->ext_tmds_presence) {
        drm_dbg_kms(dev, "No External DVI (SiI164) detected.\n");
        return;
    }

    /* Allocate encoder and connector */
    enc = kzalloc(sizeof(*enc) + sizeof(*con), GFP_KERNEL);
    if (!enc) {
        drm_err(dev, "Failed to allocate encoder for SiI164\n");
        return;
    }

    /* Setup the encoder - use correct variable names */
    drm_encoder_init(dev, &enc->base, &via_sii164_drm_encoder_funcs,
                    DRM_MODE_ENCODER_TMDS, NULL);
    drm_encoder_helper_add(&enc->base, &via_sii164_drm_encoder_helper_funcs);

    enc->i2c_bus = dev_priv->ext_tmds_i2c_bus;
    enc->di_port = dev_priv->ext_tmds_di_port;
    enc->base.possible_crtcs = BIT(0) | BIT(1);
    enc->base.possible_clones = 0;

    /* Fix: Use con instead of cons[0] */
    con = &enc->con;
    INIT_LIST_HEAD(&con->props);

    via_connector_init(&con->base, &via_sii164_drm_connector_funcs,
                        DRM_MODE_CONNECTOR_DVID);

    drm_connector_helper_add(&con->base, &via_sii164_drm_connector_helper_funcs);
    drm_connector_register(&con->base);

    con->i2c_bus = dev_priv->ext_tmds_i2c_bus;
    con->base.doublescan_allowed = false;
    con->base.interlace_allowed = true;

    drm_connector_attach_encoder(&con->base, &enc->base);

    dev_priv->ext_tmds_encoder = enc;
}

[File Ends] drivers/gpu/drm/via/via_sii164.c

[File Begins] drivers/gpu/drm/via/via_tmds.c
/*
 * Copyright 2023 The OpenChrome Project
 * [via_tmds.c]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include "via_drv.h"
#include "via_i2c.h"
#include "via_connector.h"
#include "via_display_port.h"  /* Add this include for display port definitions */

#include <drm/drm_atomic_helper.h>
#include <drm/drm_edid.h>
#include <drm/drm_probe_helper.h>

/* Forward declarations for functions needed by structures */
int via_tmds_get_modes(struct drm_connector *connector);
enum drm_mode_status via_tmds_mode_valid(struct drm_connector *connector,
                                       struct drm_display_mode *mode);

/* TMDS (DVI) connector helper functions */
const struct drm_connector_helper_funcs via_tmds_connector_helper_funcs = {
    .get_modes = via_tmds_get_modes,
    .mode_valid = via_tmds_mode_valid
};

/* TMDS (DVI) detection implementation with proper I2C EDID reading */
enum drm_connector_status 
via_tmds_detect(struct drm_connector *connector, bool force)
{
    struct drm_device *dev = connector->dev;
    struct via_connector *con = to_via_connector(connector);
    struct i2c_adapter *i2c_bus = NULL;
    struct edid *edid = NULL;
    enum drm_connector_status status = connector_status_disconnected;
    
    drm_dbg_kms(dev, "Detecting TMDS (DVI) connector\n");
    
    /* Try to find an I2C bus for this connector */
    if (con->i2c_bus & VIA_I2C_BUS2) {
        i2c_bus = via_find_ddc_bus(VIA_I2C_PORT_1);
    } else if (con->i2c_bus & VIA_I2C_BUS1) {
        i2c_bus = via_find_ddc_bus(VIA_I2C_PORT_0);
    }
    
    if (!i2c_bus) {
        drm_dbg_kms(dev, "No I2C bus found for TMDS connector\n");
        return connector_status_unknown;
    }
    
    /* Try to read EDID from the display */
    edid = drm_get_edid(connector, i2c_bus);
    if (edid) {
        if (edid->input & DRM_EDID_INPUT_DIGITAL) {
            drm_dbg_kms(dev, "TMDS (DVI) connector detected via EDID\n");
            status = connector_status_connected;
        }
        kfree(edid);
    }
    
    return status;
}

/* TMDS encoder DPMS control */
static void via_tmds_dpms(struct drm_encoder *encoder, int mode)
{
    struct drm_device *dev = encoder->dev;
    
    drm_dbg_kms(dev, "TMDS encoder DPMS mode: %d\n", mode);
    
    /* Stub implementation */
    switch (mode) {
    case DRM_MODE_DPMS_ON:
        /* Power on the TMDS encoder */
        break;
    case DRM_MODE_DPMS_STANDBY:
    case DRM_MODE_DPMS_SUSPEND:
    case DRM_MODE_DPMS_OFF:
        /* Power off the TMDS encoder */
        break;
    }
}

/* TMDS encoder mode fixup */
static bool via_tmds_mode_fixup(struct drm_encoder *encoder,
                              const struct drm_display_mode *mode,
                              struct drm_display_mode *adjusted_mode)
{
    /* No adjustments needed for now */
    return true;
}

/* TMDS encoder prepare */
static void via_tmds_prepare(struct drm_encoder *encoder)
{
    struct drm_device *dev = encoder->dev;
    
    drm_dbg_kms(dev, "Preparing TMDS encoder\n");
    
    /* Turn off TMDS encoder before mode setting */
    via_tmds_dpms(encoder, DRM_MODE_DPMS_OFF);
}

/* TMDS encoder commit */
static void via_tmds_commit(struct drm_encoder *encoder)
{
    struct drm_device *dev = encoder->dev;
    
    drm_dbg_kms(dev, "Committing TMDS encoder\n");
    
    /* Turn on TMDS encoder after mode setting */
    via_tmds_dpms(encoder, DRM_MODE_DPMS_ON);
}

/* TMDS encoder mode set */
static void via_tmds_mode_set(struct drm_encoder *encoder,
                            struct drm_display_mode *mode,
                            struct drm_display_mode *adjusted_mode)
{
    struct drm_device *dev = encoder->dev;
    
    drm_dbg_kms(dev, "TMDS encoder mode set\n");
    
    /* Configure TMDS encoder for the requested mode */
}

/* TMDS encoder disable */
static void via_tmds_disable(struct drm_encoder *encoder)
{
    struct drm_device *dev = encoder->dev;
    
    drm_dbg_kms(dev, "Disabling TMDS encoder\n");
    
    /* Turn off TMDS encoder */
    via_tmds_dpms(encoder, DRM_MODE_DPMS_OFF);
}

/* TMDS encoder helper functions */
const struct drm_encoder_helper_funcs via_tmds_encoder_helper_funcs = {
    .dpms = via_tmds_dpms,
    .mode_fixup = via_tmds_mode_fixup,
    .prepare = via_tmds_prepare,
    .commit = via_tmds_commit,
    .mode_set = via_tmds_mode_set,
    .disable = via_tmds_disable
};

/* TMDS get modes function - moved up and made non-static */
int via_tmds_get_modes(struct drm_connector *connector)
{
    struct drm_device *dev = connector->dev;
    struct via_connector *con = to_via_connector(connector);
    struct i2c_adapter *i2c_bus = NULL;
    struct edid *edid = NULL;
    int count = 0;
    
    drm_dbg_kms(dev, "Getting modes for TMDS connector\n");
    
    /* Try to find I2C bus */
    if (con->i2c_bus & VIA_I2C_BUS2) {
        i2c_bus = via_find_ddc_bus(VIA_I2C_PORT_1);
    } else if (con->i2c_bus & VIA_I2C_BUS1) {
        i2c_bus = via_find_ddc_bus(VIA_I2C_PORT_0);
    }
    
    /* Try to read EDID */
    if (i2c_bus) {
        edid = drm_get_edid(connector, i2c_bus);
        if (edid) {
            drm_connector_update_edid_property(connector, edid);
            count = drm_add_edid_modes(connector, edid);
            kfree(edid);
        }
    }
    
    /* If no EDID, add some default modes */
    if (count == 0) {
        count = drm_add_modes_noedid(connector, 1920, 1200);
        drm_set_preferred_mode(connector, 1024, 768);
    }
    
    return count;
}

/* TMDS mode valid function - moved up and made non-static */
enum drm_mode_status via_tmds_mode_valid(struct drm_connector *connector,
                                        struct drm_display_mode *mode)
{
    /* Basic validation for DVI output */
    if (mode->clock > 165000)
        return MODE_CLOCK_HIGH;
        
    if (mode->hdisplay > 1920 || mode->vdisplay > 1200)
        return MODE_BAD_WIDTH;
        
    return MODE_OK;
}

/* Probe for external TMDS (DVI) encoders */
void via_tmds_probe(struct drm_device *dev)
{
    struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
    struct pci_dev *pdev = to_pci_dev(dev->dev);
    
    drm_dbg_kms(dev, "Probing for TMDS (DVI) encoders\n");
    
    /* CX700/VX700 has integrated TMDS */
    if (pdev->device == PCI_DEVICE_ID_VIA_UNICHROME_PRO_II) {
        dev_priv->ext_tmds_presence = true;
        dev_priv->ext_tmds_i2c_bus = VIA_I2C_BUS2;
        dev_priv->ext_tmds_di_port = VIA_DI_PORT_DFPLOW;
        drm_info(dev, "Detected integrated TMDS on CX700/VX700\n");
    }
    /* VT3364 (P4M900) has integrated TMDS */
    else if (pdev->device == PCI_DEVICE_ID_VIA_CHROME9_HC) {
        dev_priv->ext_tmds_presence = true;
        dev_priv->ext_tmds_i2c_bus = VIA_I2C_BUS5;
        dev_priv->ext_tmds_di_port = VIA_DI_PORT_DFPLOW;
        drm_info(dev, "Detected integrated TMDS on P4M900\n");
    }
    else {
        dev_priv->ext_tmds_presence = false;
    }
}

/* Initialize TMDS encoder - this is just a stub for now */
void via_tmds_init(struct drm_device *dev)
{
    drm_dbg_kms(dev, "Initializing TMDS encoder\n");
    /* Full implementation will check ext_tmds_presence and set up the encoder */
}

/* 
 * Probe for external DVI encoders - we will look for
 * specific DVI encoder chips in via_vt1632.c and via_sii164.c
 * so this is just a stub
 */
void via_ext_dvi_probe(struct drm_device *dev)
{
    drm_dbg_kms(dev, "Probing for external DVI encoders\n");
    /* This will be implemented in via_vt1632.c and via_sii164.c */
}

/* Initialize external DVI encoder - this is just a stub for now */
void via_ext_dvi_init(struct drm_device *dev)
{
    drm_dbg_kms(dev, "Initializing external DVI encoder\n");
    /* This will be implemented in via_vt1632.c and via_sii164.c */
}

[File Ends] drivers/gpu/drm/via/via_tmds.c

[File Begins] drivers/gpu/drm/via/via_tmds.h
/*
 * Copyright 2023 The OpenChrome Project
 * [via_tmds.h]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHOR(S) OR COPYRIGHT HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#ifndef __VIA_TMDS_H__
#define __VIA_TMDS_H__

#include "via_drv.h"

/* Function prototypes for digital video interface functions */
void via_tmds_probe(struct drm_device *dev);
void via_tmds_init(struct drm_device *dev);
void via_ext_dvi_probe(struct drm_device *dev);
void via_ext_dvi_init(struct drm_device *dev);

#endif /* __VIA_TMDS_H__ */

[File Ends] drivers/gpu/drm/via/via_tmds.h

[File Begins] drivers/gpu/drm/via/via_tmds_regs.h
/*
 * Copyright 2023 The OpenChrome Project
 * [via_tmds_regs.h]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHOR(S) OR COPYRIGHT HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#ifndef __VIA_TMDS_REGS_H__
#define __VIA_TMDS_REGS_H__

#include <linux/types.h>
#include <drm/drm_device.h>
#include <linux/i2c.h>

/* TMDS transmitter types */
#define VIA_TMDS_SII164      0x01
#define VIA_TMDS_VT1632      0x02

/* Digital Interface port types */
#define VIA_DI_PORT_NONE     0x00
#define VIA_DI_PORT_DVP0     0x01
#define VIA_DI_PORT_DVP1     0x02
#define VIA_DI_PORT_DFPLOW   0x03
#define VIA_DI_PORT_DFPHIGH  0x04

/* Function prototypes for TMDS transmitter functions */
void via_transmitter_io_pad_state(struct drm_device *dev, u32 di_port, bool enable);
void via_transmitter_clock_drive_strength(struct drm_device *dev, u32 di_port, u8 strength);
void via_transmitter_data_drive_strength(struct drm_device *dev, u32 di_port, u8 strength);
void via_transmitter_display_source(struct drm_device *dev, u32 di_port, int index);
void via_clock_source(struct drm_device *dev, u32 di_port, bool enable);
void via_output_enable(struct drm_device *dev, u32 di_port, bool enable);

bool via_vt1632_probe(struct drm_device *dev, struct i2c_adapter *i2c_bus);
void via_vt1632_init(struct drm_device *dev);
bool via_sii164_probe(struct drm_device *dev, u32 i2c_bus_id, u32 di_port);
void via_sii164_init(struct drm_device *dev);

#endif /* __VIA_TMDS_REGS_H__ */

[File Ends] drivers/gpu/drm/via/via_tmds_regs.h

[File Begins] drivers/gpu/drm/via/via_ttm.c
/*
 * Copyright © 2021 Kevin Brace.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHOR(S) OR COPYRIGHT HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * Author(s):
 * Kevin Brace <kevinbrace@bracecomputerlab.com>
 */
/*
 * via_ttm.c
 *
 * TTM code as part of the TTM memory allocator.
 * Currently a basic implementation with no DMA support.
 *
 */

#include <linux/dcache.h>
#include <linux/pci.h>

#include <drm/drm_debugfs.h>
#include <drm/drm_file.h>
#include <drm/drm_print.h>

#include <drm/ttm/ttm_bo.h>
#include <drm/ttm/ttm_tt.h>
#include <drm/ttm/ttm_device.h>
#include <drm/ttm/ttm_placement.h>
/* Remove the page_alloc.h include as it doesn't exist in kernel 6.12 */

#include "via_drv.h"
#include "via_object.h"
#include "via_ttm_mod.h"

static void via_bo_move_notify(struct ttm_buffer_object *bo, bool evict,
				struct ttm_resource *new_mem)
{
	struct drm_device *dev = bo->base.dev;

	drm_dbg_driver(dev, "Entered %s.\n", __func__);

	drm_dbg_driver(dev, "Exiting %s.\n", __func__);
	return;
}

static struct ttm_tt *via_ttm_tt_create(struct ttm_buffer_object *bo,
					uint32_t page_flags)
{
	struct ttm_tt *tt;
	int ret;

	tt = kzalloc(sizeof(*tt), GFP_KERNEL);
	if (!tt)
		return NULL;

	ret = ttm_tt_init(tt, bo, page_flags, ttm_cached, 0);
	if (ret < 0)
		goto err_ttm_tt_init;

	return tt;

err_ttm_tt_init:
	kfree(tt);
	return NULL;
}

static void via_ttm_tt_destroy(struct ttm_device *bdev, struct ttm_tt *tt)
{
	ttm_tt_fini(tt);
	kfree(tt);
}

static void via_bo_evict_flags(struct ttm_buffer_object *bo,
				struct ttm_placement *placement)
{
	struct drm_device *dev = bo->base.dev;
	struct via_bo *driver_bo = to_via_bo(bo);

	drm_dbg_driver(dev, "Entered %s.\n", __func__);

	if (bo->destroy == &via_ttm_bo_destroy) {
		goto exit;
	}

	switch (bo->resource->mem_type) {
	case TTM_PL_VRAM:
		via_ttm_domain_to_placement(driver_bo, TTM_PL_VRAM);
		break;
	default:
		via_ttm_domain_to_placement(driver_bo, TTM_PL_SYSTEM);
		break;
	}

	*placement = driver_bo->placement;
exit:
	drm_dbg_driver(dev, "Exiting %s.\n", __func__);
}

static int via_bo_move(struct ttm_buffer_object *bo, bool evict,
			struct ttm_operation_ctx *ctx,
			struct ttm_resource *new_mem,
			struct ttm_place *hop)
{
	int ret;

	if (!bo->resource) {
		if (new_mem->mem_type != TTM_PL_SYSTEM) {
			hop->mem_type = TTM_PL_SYSTEM;
			hop->flags = TTM_PL_FLAG_TEMPORARY;
			return -EMULTIHOP;
		}

		ttm_bo_move_null(bo, new_mem);
		return 0;
	}

	via_bo_move_notify(bo, evict, new_mem);
	ret = ttm_bo_move_memcpy(bo, ctx, new_mem);
	if (ret) {
		swap(*new_mem, *bo->resource);
		via_bo_move_notify(bo, false, new_mem);
		swap(*new_mem, *bo->resource);
	}

	return ret;
}

static void via_bo_delete_mem_notify(struct ttm_buffer_object *bo)
{
	struct drm_device *dev = bo->base.dev;

	drm_dbg_driver(dev, "Entered %s.\n", __func__);

	via_bo_move_notify(bo, false, NULL);

	drm_dbg_driver(dev, "Exiting %s.\n", __func__);
	return;
}

static int via_bo_io_mem_reserve(struct ttm_device *bdev,
					struct ttm_resource *mem)
{
	struct via_drm_priv *dev_priv = container_of(bdev,
						struct via_drm_priv, bdev);
	struct drm_device *dev = &dev_priv->dev;
	int ret = 0;

	drm_dbg_driver(dev, "Entered %s.\n", __func__);

	switch (mem->mem_type) {
	case TTM_PL_SYSTEM:
		break;
	case TTM_PL_VRAM:
		mem->bus.offset = dev_priv->vram_start +
					(mem->start << PAGE_SHIFT);
		mem->bus.is_iomem = true;
		break;
	default:
		ret = -EINVAL;
		break;
	}

	drm_dbg_driver(dev, "Exiting %s.\n", __func__);
	return ret;
}

struct ttm_device_funcs via_bo_driver = {
	.ttm_tt_create = via_ttm_tt_create,
	.ttm_tt_destroy = via_ttm_tt_destroy,
	.eviction_valuable = ttm_bo_eviction_valuable,
	.evict_flags = via_bo_evict_flags,
	.move = via_bo_move,
	.delete_mem_notify = via_bo_delete_mem_notify,
	.io_mem_reserve = via_bo_io_mem_reserve,
};

void via_ttm_debugfs_init(struct drm_device *dev)
{
#if defined(CONFIG_DEBUG_FS)
	struct drm_minor *minor = dev->primary;
	struct dentry *debugfs_root = minor->debugfs_root;
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);

	ttm_resource_manager_create_debugfs(ttm_manager_type(&dev_priv->bdev,
								TTM_PL_VRAM),
						debugfs_root,
						"via_ttm_rman_vram");
#endif
}

/* Remove the conflicting drm_gem_ttm_mmap implementation - use the one from drm_gem_ttm_helper.h instead */

[File Ends] drivers/gpu/drm/via/via_ttm.c

[File Begins] drivers/gpu/drm/via/via_ttm_mod.h
/*
 * Copyright 2023 The OpenChrome Project
 * [via_ttm_mod.h]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#ifndef __VIA_TTM_MOD_H__
#define __VIA_TTM_MOD_H__

#include <linux/module.h>
#include <drm/drm_gem_ttm_helper.h>

/* Use the native drm_gem_ttm_mmap from DRM helper instead of defining our own */

#endif /* __VIA_TTM_MOD_H__ */

[File Ends] drivers/gpu/drm/via/via_ttm_mod.h

[File Begins] drivers/gpu/drm/via/via_ttm_stubs.c
/*
 * Copyright 2023 The OpenChrome Project
 * [via_ttm_stubs.c]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <drm/drm_gem.h>
#include <drm/drm_gem_ttm_helper.h>
#include <linux/module.h>
#include <linux/io.h>

/* 
 * Implementation stubs for GEM TTM functions for compatibility with
 * newer kernel interfaces that use iosys_map
 */

/**
 * drm_gem_ttm_mmap - TTM mmap support for GEM objects
 * @gem_obj: The GEM object to map
 * @vma: the VMA to contain the mapping
 * 
 * Provides compatibility with newer kernel interfaces
 */
int drm_gem_ttm_mmap(struct drm_gem_object *gem_obj, struct vm_area_struct *vma)
{
    struct drm_device *dev = gem_obj->dev;
    int ret;
    
    /* Use drm_gem_mmap_obj which takes a GEM object directly */
    ret = drm_gem_mmap_obj(gem_obj, gem_obj->size, vma);
    if (ret < 0) {
        drm_dbg(dev, "failed to mmap GEM object: %d\n", ret);
    }
    
    return ret;
}
EXPORT_SYMBOL_GPL(drm_gem_ttm_mmap);

/**
 * drm_gem_ttm_vmap - Map a GEM object using TTM helpers
 * @gem_obj: The GEM object to map
 * @map: iosys_map structure to store the mapping information
 * 
 * Compatibility layer for modern kernel interfaces.
 */
int drm_gem_ttm_vmap(struct drm_gem_object *gem_obj, struct iosys_map *map)
{
    struct ttm_buffer_object *bo = container_of(gem_obj, struct ttm_buffer_object, base);
    
    /* Call the ttm_bo_vmap function with the proper parameters */
    return ttm_bo_vmap(bo, map);
}
EXPORT_SYMBOL_GPL(drm_gem_ttm_vmap);

/**
 * drm_gem_ttm_vunmap - Unmap a previously mapped GEM object
 * @gem_obj: The GEM object to unmap
 * @map: iosys_map structure containing mapping information
 */
void drm_gem_ttm_vunmap(struct drm_gem_object *gem_obj, struct iosys_map *map)
{
    struct ttm_buffer_object *bo = container_of(gem_obj, struct ttm_buffer_object, base);
    
    /* Call the ttm_bo_vunmap function with the proper parameters */
    ttm_bo_vunmap(bo, map);
}
EXPORT_SYMBOL_GPL(drm_gem_ttm_vunmap);

[File Ends] drivers/gpu/drm/via/via_ttm_stubs.c

[File Begins] drivers/gpu/drm/via/via_tx.c
/*
 * Copyright 2023 The OpenChrome Project
 * [via_tx.c]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHOR(S) OR COPYRIGHT HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <linux/delay.h>

#include "via_drv.h"
#include "via_tx_regs.h"

void via_transmitter_io_pad_state(struct drm_device *dev,
                              u32 di_port, bool enable)
{
    struct via_drm_priv *dev_priv = to_via_drm_priv(dev);

    drm_dbg_kms(dev, "Entered %s.\n", __func__);

    switch (di_port) {
        case VIA_DI_PORT_DIP0:
                via_dip0_set_io_pad_state(VGABASE,
                                     enable);
                break;
        case VIA_DI_PORT_DIP1:
                via_dip1_set_io_pad_state(VGABASE,
                                     enable);
                break;
        case VIA_DI_PORT_DVP0:
                via_dvp0_set_io_pad_state(VGABASE,
                                     enable);
                break;
        case VIA_DI_PORT_DVP1:
                via_dvp1_set_io_pad_state(VGABASE,
                                     enable);
                break;
        case VIA_DI_PORT_FPDPLOW:
                via_fpdp_low_set_io_pad_state(VGABASE,
                                         enable);
                break;
        case VIA_DI_PORT_FPDPHIGH:
                via_fpdp_high_set_io_pad_state(VGABASE,
                                          enable);
                break;
        case VIA_DI_PORT_DFPLOW:
        case VIA_DI_PORT_DFPHIGH:
                /* Do nothing */
                break;
        case VIA_DI_PORT_LVDS1:
                via_lvds1_set_io_pad_setting(VGABASE,
                                        enable);
                break;
        case VIA_DI_PORT_LVDS2:
                via_lvds2_set_io_pad_setting(VGABASE,
                                        enable);
                break;
        default:
                break;
    }

    drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}

void via_output_enable(struct drm_device *dev,
                   u32 di_port, bool output_enable)
{
    struct via_drm_priv *dev_priv = to_via_drm_priv(dev);

    drm_dbg_kms(dev, "Entered %s.\n", __func__);

    switch (di_port) {
        case VIA_DI_PORT_DIP0:
                via_dip0_set_output_enable(VGABASE, output_enable);
                break;
        case VIA_DI_PORT_DIP1:
                via_dip1_set_output_enable(VGABASE, output_enable);
                break;
        default:
                break;
    }

    drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}

void via_clock_source(struct drm_device *dev,
                  u32 di_port, bool clock_source)
{
    struct via_drm_priv *dev_priv = to_via_drm_priv(dev);

    drm_dbg_kms(dev, "Entered %s.\n", __func__);

    switch (di_port) {
        case VIA_DI_PORT_DIP0:
                via_dip0_set_clock_source(VGABASE, clock_source);
                break;
        case VIA_DI_PORT_DIP1:
                via_dip1_set_clock_source(VGABASE, clock_source);
                break;
        default:
                break;
    }

    drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}

void via_transmitter_clock_drive_strength(struct drm_device *dev,
                                      u32 di_port,
                                      u8 clock_drive_strength)
{
    struct via_drm_priv *dev_priv = to_via_drm_priv(dev);

    drm_dbg_kms(dev, "Entered %s.\n", __func__);

    switch (di_port) {
        case VIA_DI_PORT_DVP0:
                via_dvp0_set_clock_drive_strength(VGABASE,
                                             clock_drive_strength);
                break;
        case VIA_DI_PORT_DVP1:
                via_dvp1_set_clock_drive_strength(VGABASE,
                                             clock_drive_strength);
                break;
        default:
                break;
    }

    drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}

void via_transmitter_data_drive_strength(struct drm_device *dev,
                                     u32 di_port, u8 data_drive_strength)
{
    struct via_drm_priv *dev_priv = to_via_drm_priv(dev);

    drm_dbg_kms(dev, "Entered %s.\n", __func__);

    switch (di_port) {
        case VIA_DI_PORT_DVP0:
                via_dvp0_set_data_drive_strength(VGABASE,
                                            data_drive_strength);
                break;
        case VIA_DI_PORT_DVP1:
                via_dvp1_set_data_drive_strength(VGABASE,
                                            data_drive_strength);
                break;
        default:
                break;
    }

    drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}

void via_transmitter_display_source(struct drm_device *dev,
                                u32 di_port, int display_source)
{
    struct via_drm_priv *dev_priv = to_via_drm_priv(dev);
    
    drm_dbg_kms(dev, "Entered %s.\n", __func__);

    switch (di_port) {
        case VIA_DI_PORT_DIP0:
                via_dip0_set_display_source(VGABASE, display_source);
                break;
        case VIA_DI_PORT_DIP1:
                via_dip1_set_display_source(VGABASE, display_source);
                break;
        case VIA_DI_PORT_DVP0:
                via_dvp0_set_display_source(VGABASE, display_source);
                break;
        case VIA_DI_PORT_DVP1:
                via_dvp1_set_display_source(VGABASE, display_source);
                break;
        case VIA_DI_PORT_FPDPLOW:
                via_fpdp_low_set_display_source(VGABASE, display_source);
                break;

        case VIA_DI_PORT_FPDPHIGH:
                via_fpdp_high_set_display_source(VGABASE, display_source);
                break;
        case VIA_DI_PORT_DFPLOW:
        case VIA_DI_PORT_DFPHIGH:
                /* Do nothing */
                break;

        case VIA_DI_PORT_LVDS1:
                via_lvds1_set_display_source(VGABASE, display_source);
                break;
        case VIA_DI_PORT_LVDS2:
                via_lvds2_set_display_source(VGABASE, display_source);
                break;
        default:
                break;
    }

    drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}

/* Stub implementations of low-level functions */

/* DIP port functions */
void via_dip0_set_io_pad_state(void __iomem *base, bool enable) {}
void via_dip1_set_io_pad_state(void __iomem *base, bool enable) {}
void via_dip0_set_output_enable(void __iomem *base, bool enable) {}
void via_dip1_set_output_enable(void __iomem *base, bool enable) {}
void via_dip0_set_clock_source(void __iomem *base, bool enable) {}
void via_dip1_set_clock_source(void __iomem *base, bool enable) {}
void via_dip0_set_display_source(void __iomem *base, int source) {}
void via_dip1_set_display_source(void __iomem *base, int source) {}

/* DVP port functions */
void via_dvp0_set_io_pad_state(void __iomem *base, bool enable) {}
void via_dvp1_set_io_pad_state(void __iomem *base, bool enable) {}
void via_dvp0_set_clock_drive_strength(void __iomem *base, u8 strength) {}
void via_dvp1_set_clock_drive_strength(void __iomem *base, u8 strength) {}
void via_dvp0_set_data_drive_strength(void __iomem *base, u8 strength) {}
void via_dvp1_set_data_drive_strength(void __iomem *base, u8 strength) {}
void via_dvp0_set_display_source(void __iomem *base, int source) {}
void via_dvp1_set_display_source(void __iomem *base, int source) {}

/* FPDP port functions */
void via_fpdp_low_set_io_pad_state(void __iomem *base, bool enable) {}
void via_fpdp_high_set_io_pad_state(void __iomem *base, bool enable) {}
void via_fpdp_low_set_display_source(void __iomem *base, int source) {}
void via_fpdp_high_set_display_source(void __iomem *base, int source) {}

/* LVDS port functions */
void via_lvds1_set_io_pad_setting(void __iomem *base, bool enable) {}
void via_lvds2_set_io_pad_setting(void __iomem *base, bool enable) {}
void via_lvds1_set_display_source(void __iomem *base, int source) {}
void via_lvds2_set_display_source(void __iomem *base, int source) {}

[File Ends] drivers/gpu/drm/via/via_tx.c

[File Begins] drivers/gpu/drm/via/via_tx_regs.h
/*
 * Copyright 2023 The OpenChrome Project
 * [via_tx_regs.h]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHOR(S) OR COPYRIGHT HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#ifndef __VIA_TX_REGS_H__
#define __VIA_TX_REGS_H__

/* Extended Digital Interface port types */
#define VIA_DI_PORT_NONE       0x00
#define VIA_DI_PORT_DIP0       0x05
#define VIA_DI_PORT_DIP1       0x06
#define VIA_DI_PORT_DVP0       0x07
#define VIA_DI_PORT_DVP1       0x08
#define VIA_DI_PORT_FPDPLOW    0x09
#define VIA_DI_PORT_FPDPHIGH   0x0A
#define VIA_DI_PORT_LVDS1      0x0B
#define VIA_DI_PORT_LVDS2      0x0C
/* Add the constants from via_tmds_regs.h for compatibility */
#define VIA_DI_PORT_DFPLOW     0x03
#define VIA_DI_PORT_DFPHIGH    0x04

/* Function prototypes for DIP port functions */
void via_dip0_set_io_pad_state(void __iomem *base, bool enable);
void via_dip1_set_io_pad_state(void __iomem *base, bool enable);
void via_dip0_set_output_enable(void __iomem *base, bool enable);
void via_dip1_set_output_enable(void __iomem *base, bool enable);
void via_dip0_set_clock_source(void __iomem *base, bool enable);
void via_dip1_set_clock_source(void __iomem *base, bool enable);
void via_dip0_set_display_source(void __iomem *base, int source);
void via_dip1_set_display_source(void __iomem *base, int source);

/* Function prototypes for DVP port functions */
void via_dvp0_set_io_pad_state(void __iomem *base, bool enable);
void via_dvp1_set_io_pad_state(void __iomem *base, bool enable);
void via_dvp0_set_clock_drive_strength(void __iomem *base, u8 strength);
void via_dvp1_set_clock_drive_strength(void __iomem *base, u8 strength);
void via_dvp0_set_data_drive_strength(void __iomem *base, u8 strength);
void via_dvp1_set_data_drive_strength(void __iomem *base, u8 strength);
void via_dvp0_set_display_source(void __iomem *base, int source);
void via_dvp1_set_display_source(void __iomem *base, int source);

/* Function prototypes for FPDP port functions */
void via_fpdp_low_set_io_pad_state(void __iomem *base, bool enable);
void via_fpdp_high_set_io_pad_state(void __iomem *base, bool enable);
void via_fpdp_low_set_display_source(void __iomem *base, int source);
void via_fpdp_high_set_display_source(void __iomem *base, int source);

/* Function prototypes for LVDS port functions */
void via_lvds1_set_io_pad_setting(void __iomem *base, bool enable);
void via_lvds2_set_io_pad_setting(void __iomem *base, bool enable);
void via_lvds1_set_display_source(void __iomem *base, int source);
void via_lvds2_set_display_source(void __iomem *base, int source);

/* Exported function prototypes */
void via_transmitter_io_pad_state(struct drm_device *dev, u32 di_port, bool enable);
void via_output_enable(struct drm_device *dev, u32 di_port, bool enable);
void via_clock_source(struct drm_device *dev, u32 di_port, bool enable);
void via_transmitter_clock_drive_strength(struct drm_device *dev, u32 di_port, u8 strength);
void via_transmitter_data_drive_strength(struct drm_device *dev, u32 di_port, u8 strength);
void via_transmitter_display_source(struct drm_device *dev, u32 di_port, int index);

#endif /* __VIA_TX_REGS_H__ */

[File Ends] drivers/gpu/drm/via/via_tx_regs.h

[File Begins] drivers/gpu/drm/via/via_verifier.c
/*
 * Copyright 2023 The OpenChrome Project
 * [via_verifier.c]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

/*
 * Command verifier functionality for VIA/OpenChrome DRM driver
 * This is a stub implementation to satisfy module build requirements
 */

#include <linux/module.h>
#include "via_drv.h"

/**
 * via_verifier_init - Initialize command verifier
 * @dev: DRM device
 *
 * Stub implementation of command verifier initialization
 *
 * Returns:
 * Zero on success, negative error code on failure.
 */
int via_verifier_init(struct drm_device *dev)
{
    drm_dbg_driver(dev, "Entered %s.\n", __func__);
    
    /* Command verification disabled in this build */
    drm_dbg_driver(dev, "Command verification not implemented\n");
    
    drm_dbg_driver(dev, "Exiting %s.\n", __func__);
    return 0;
}

/**
 * via_verifier_fini - Clean up command verifier resources
 * @dev: DRM device
 *
 * Stub implementation for cleaning up command verifier resources
 */
void via_verifier_fini(struct drm_device *dev)
{
    drm_dbg_driver(dev, "Entered %s.\n", __func__);
    /* No resources to clean up in this stub */
    drm_dbg_driver(dev, "Exiting %s.\n", __func__);
}

[File Ends] drivers/gpu/drm/via/via_verifier.c

[File Begins] drivers/gpu/drm/via/via_version.h
/*
 * Copyright 2023 The OpenChrome Project
 * [via_version.h]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHOR(S) OR COPYRIGHT HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#ifndef __VIA_VERSION_H__
#define __VIA_VERSION_H__

#define DRIVER_AUTHOR "Various contributors, Kevin Brace <kevinbrace@bracecomputerlab.com>"
#define DRIVER_NAME "openchrome"
#define DRIVER_DESC "OpenChrome DRM/KMS Driver"
#define DRIVER_DATE "20231222"
#define DRIVER_MAJOR 1
#define DRIVER_MINOR 0
#define DRIVER_PATCHLEVEL 0

#endif /* __VIA_VERSION_H__ */

[File Ends] drivers/gpu/drm/via/via_version.h

[File Begins] drivers/gpu/drm/via/via_vga.h

[File Ends] drivers/gpu/drm/via/via_vga.h

[File Begins] drivers/gpu/drm/via/via_vgahw.c
/*
 * Copyright 2005 Thomas Hellström. All Rights Reserved.
 * Copyright 2020-2021 Kevin Brace. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHOR(S) OR COPYRIGHT HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * Author: Thomas Hellström 2005.
 */

#include <video/vga.h>
#include "via_vgahw.h"
#include "via_drv.h"
#include <drm/drm_gem_ttm_helper.h>
#include <linux/module.h>
#include "via_ttm_mod.h"

void
svga_wcrt_mask(void __iomem *vgabase, u8 index, u8 value, u8 mask)
{
	u8 tmp = vga_rcrt(vgabase, index) & ~mask;
	vga_wcrt(vgabase, index, tmp | (value & mask));
}

void
svga_wseq_mask(void __iomem *vgabase, u8 index, u8 value, u8 mask)
{
	u8 tmp = vga_rseq(vgabase, index) & ~mask;
	vga_wseq(vgabase, index, tmp | (value & mask));
}

void
svga_wgfx_mask(void __iomem *vgabase, u8 index, u8 value, u8 mask)
{
	u8 tmp = vga_rgfx(vgabase, index) & ~mask;
	vga_wgfx(vgabase, index, tmp | (value & mask));
}

void
svga_wmisc_mask(void __iomem *vgabase, u8 value, u8 mask)
{
	u8 tmp = vga_r(vgabase, VGA_MIS_R) & ~mask;
	vga_w(vgabase, VGA_MIS_W, tmp | (value & mask));
}

/* Helper function to load values into registers */
void 
load_value_to_registers(void __iomem *regbase, const struct vga_registers *regs, unsigned int value)
{
    int i;
    enum via_vga_port_type port_type;
    
    if (!regs || !regs->regs)
        return;
        
    for (i = 0; i < regs->count; i++) {
        /* Calculate mask based on the high and low values */
        u8 mask_bits = (1 << (regs->regs[i].high - regs->regs[i].low + 1)) - 1;
        u8 mask = mask_bits << regs->regs[i].low;
        u8 shift_right = regs->regs[i].low;
        
        /* Use type field for port selection */
        port_type = regs->regs[i].type;

        switch (port_type) {
        case VIA_PORT_SEQ:
            svga_wseq_mask(regbase, regs->regs[i].index, 
                          ((value >> shift_right) & mask_bits) << regs->regs[i].low, 
                          mask);
            break;
            
        case VIA_PORT_CRT:
            svga_wcrt_mask(regbase, regs->regs[i].index, 
                          ((value >> shift_right) & mask_bits) << regs->regs[i].low, 
                          mask);
            break;
            
        case VIA_PORT_GFX:
            svga_wgfx_mask(regbase, regs->regs[i].index, 
                          ((value >> shift_right) & mask_bits) << regs->regs[i].low, 
                          mask);
            break;
            
        default:
            /* Handle other register types if needed */
            break;
        }
    }
}
EXPORT_SYMBOL_GPL(load_value_to_registers);

/* Load a table of register values */
void load_register_tables(void __iomem *regbase, struct vga_registers *table)
{
    int i;
    enum via_vga_port_type port_type;
    
    if (!table || !table->regs)
        return;
    
    for (i = 0; i < table->count; i++) {
        /* Calculate mask based on the high and low bit positions */
        u8 mask_bits = (1 << (table->regs[i].high - table->regs[i].low + 1)) - 1;
        u8 mask = mask_bits << table->regs[i].low;
        
        /* Use type field for port selection */
        port_type = table->regs[i].type;

        switch (port_type) {
        case VIA_PORT_SEQ:
            svga_wseq_mask(regbase, table->regs[i].index, 
                          (table->regs[i].low << 0) & mask,
                          mask);
            break;
            
        case VIA_PORT_CRT:
            svga_wcrt_mask(regbase, table->regs[i].index, 
                          (table->regs[i].low << 0) & mask,
                          mask);
            break;
            
        /* Add cases for other port types as needed */
        
        default:
            break;
        }
    }
}
EXPORT_SYMBOL_GPL(load_register_tables);

[File Ends] drivers/gpu/drm/via/via_vgahw.c

[File Begins] drivers/gpu/drm/via/via_vgahw.h
/*
 * Copyright 2023 The OpenChrome Project
 * [via_vgahw.h]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHOR(S) OR COPYRIGHT HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#ifndef __VIA_VGAHW_H__
#define __VIA_VGAHW_H__

#include <video/vga.h>
#include "via_drv.h"

/* Function declarations (prototypes) instead of implementations */
void svga_wcrt_mask(void __iomem *vgabase, u8 index, u8 value, u8 mask);
void svga_wseq_mask(void __iomem *vgabase, u8 index, u8 value, u8 mask);
void svga_wgfx_mask(void __iomem *vgabase, u8 index, u8 value, u8 mask);
void svga_wmisc_mask(void __iomem *vgabase, u8 value, u8 mask);

/* Helper function to load values into registers */
void load_value_to_registers(void __iomem *regbase, const struct vga_registers *regs, unsigned int value);
void load_register_tables(void __iomem *regbase, struct vga_registers *table);

#endif /* __VIA_VGAHW_H__ */

[File Ends] drivers/gpu/drm/via/via_vgahw.h

[File Begins] drivers/gpu/drm/via/via_vt1632.c
/*
 * Copyright © 2016-2018 Kevin Brace.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the next
 * paragraph) shall be included in all copies or substantial portions of the
 * Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * Author(s):
 * Kevin Brace <kevinbrace@bracecomputerlab.com>
 */

#include <linux/pci.h>

#include <drm/drm_atomic_state_helper.h>
#include <drm/drm_connector.h>
#include <drm/drm_crtc_helper.h>
#include <drm/drm_edid.h>
#include <drm/drm_modeset_helper_vtables.h>
#include <drm/drm_probe_helper.h>

#include "via_drv.h"
#include "via_tmds_regs.h" /* Include the header with transmitter function declarations */
#include "via_tmds.h"


#define VIA_VT1632_VEN		BIT(5)
#define VIA_VT1632_HEN		BIT(4)
#define VIA_VT1632_DSEL		BIT(3)
#define VIA_VT1632_BSEL		BIT(2)
#define VIA_VT1632_EDGE		BIT(1)
#define VIA_VT1632_PDB		BIT(0)


static void via_vt1632_power(struct drm_device *dev,
				struct i2c_adapter *i2c_bus,
				bool power_state)
{
	u8 buf;
	u8 power_bit;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	via_i2c_readbytes(i2c_bus, 0x08, 0x08, &buf, 1);
	power_bit = power_state ? VIA_VT1632_PDB : 0x00;
	buf &= ~power_bit;
	buf |= power_bit;
	via_i2c_writebytes(i2c_bus, 0x08, 0x08, &buf, 1);
	drm_dbg_kms(dev, "VT1632 (DVI) Power: %s\n",
			power_state ? "On" : "Off");

	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}


static bool via_vt1632_sense(struct drm_device *dev,
				struct i2c_adapter *i2c_bus)
{
	u8 buf;
	bool rx_detected = false;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	via_i2c_readbytes(i2c_bus, 0x08, 0x09, &buf, 1);
	if (buf & BIT(2)) {
		rx_detected = true;
	}

	drm_dbg_kms(dev, "VT1632 (DVI) Connector Sense: %s\n",
			rx_detected ? "Connected" : "Not Connected");

	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
	return rx_detected;
}

static void via_vt1632_display_registers(struct drm_device *dev,
					struct i2c_adapter *i2c_bus)
{
	uint8_t i;
	u8 buf;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	drm_dbg_kms(dev, "VT1632(A) Registers:\n");
	for (i = 0; i < 0x10; i++) {
		via_i2c_readbytes(i2c_bus, 0x08, i, &buf, 1);
		drm_dbg_kms(dev, "0x%02x: 0x%02x\n", i, buf);
	}

	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}

static void via_vt1632_init_registers(struct drm_device *dev,
					struct i2c_adapter *i2c_bus)
{
	u8 buf;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	/*
	 * For Wyse Cx0 thin client VX855 chipset DVP1 (Digital Video
	 * Port 1), use 12-bit mode with dual edge transfer, along
	 * with rising edge data capture first mode. This is likely
	 * true for CX700, VX700, VX800, and VX900 chipsets as well.
	 */
	buf = VIA_VT1632_VEN | VIA_VT1632_HEN |
		VIA_VT1632_DSEL |
		VIA_VT1632_EDGE | VIA_VT1632_PDB;
	via_i2c_writebytes(i2c_bus, 0x08, 0x08, &buf, 1);

	/*
	 * Route receiver detect bit (Offset 0x09[2]) as the output
	 * of MSEN pin.
	 */
	buf = BIT(5);
	via_i2c_writebytes(i2c_bus, 0x08, 0x09, &buf, 1);

	/*
	 * Turning on deskew feature caused screen display issues.
	 * This was observed with Wyse Cx0.
	 */
	buf = 0x00;
	via_i2c_writebytes(i2c_bus, 0x08, 0x0a, &buf, 1);

	/*
	 * While VIA Technologies VT1632A datasheet insists on setting
	 * this register to 0x89 as the recommended setting, in
	 * practice, this leads to a blank screen on the display with
	 * Wyse Cx0. According to Silicon Image SiI 164 datasheet
	 * (VT1632(A) is a pin and mostly register compatible chip),
	 * offset 0x0C is for PLL filter enable, PLL filter setting,
	 * and continuous SYNC enable bits. All of these are turned
	 * off for proper operation.
	 */
	buf = 0x00;
	via_i2c_writebytes(i2c_bus, 0x08, 0x0c, &buf, 1);

	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}


static const struct drm_encoder_funcs via_vt1632_drm_encoder_funcs = {
	.destroy = via_encoder_destroy,
};

static void via_vt1632_dpms(struct drm_encoder *encoder, int mode)
{
	struct via_encoder *enc = container_of(encoder,
					struct via_encoder, base);
	struct drm_device *dev = encoder->dev;
	struct i2c_adapter *i2c_bus;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	if (enc->i2c_bus & VIA_I2C_BUS1) {
		i2c_bus = via_find_ddc_bus(0x26);
	} else if (enc->i2c_bus & VIA_I2C_BUS2) {
		i2c_bus = via_find_ddc_bus(0x31);
	} else if (enc->i2c_bus & VIA_I2C_BUS3) {
		i2c_bus = via_find_ddc_bus(0x25);
	} else if (enc->i2c_bus & VIA_I2C_BUS4) {
		i2c_bus = via_find_ddc_bus(0x2c);
	} else if (enc->i2c_bus & VIA_I2C_BUS5) {
		i2c_bus = via_find_ddc_bus(0x3d);
	} else {
		i2c_bus = NULL;
		goto exit;
	}

	via_vt1632_display_registers(dev, i2c_bus);
	switch (mode) {
	case DRM_MODE_DPMS_ON:
		via_vt1632_power(dev, i2c_bus, true);
		via_transmitter_io_pad_state(dev, enc->di_port, true);
		break;
	case DRM_MODE_DPMS_STANDBY:
	case DRM_MODE_DPMS_SUSPEND:
	case DRM_MODE_DPMS_OFF:
		via_vt1632_power(dev, i2c_bus, false);
		via_transmitter_io_pad_state(dev, enc->di_port, false);
		break;
	default:
		drm_err(dev, "Bad DPMS mode.");
		break;
	}

exit:
	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}

static bool via_vt1632_mode_fixup(struct drm_encoder *encoder,
				const struct drm_display_mode *mode,
				struct drm_display_mode *adjusted_mode)
{
	struct drm_device *dev = encoder->dev;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	drm_mode_set_crtcinfo(adjusted_mode, 0);

	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
	return true;
}

static void via_vt1632_mode_set(struct drm_encoder *encoder,
				struct drm_display_mode *mode,
				struct drm_display_mode *adjusted_mode)
{
	struct via_crtc *iga = container_of(encoder->crtc, struct via_crtc, base);
	struct via_encoder *enc = container_of(encoder,
					struct via_encoder, base);
	struct drm_device *dev = encoder->dev;
	struct pci_dev *pdev = to_pci_dev(dev->dev);
	struct i2c_adapter *i2c_bus;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	if (enc->i2c_bus & VIA_I2C_BUS1) {
		i2c_bus = via_find_ddc_bus(0x26);
	} else if (enc->i2c_bus & VIA_I2C_BUS2) {
		i2c_bus = via_find_ddc_bus(0x31);
	} else if (enc->i2c_bus & VIA_I2C_BUS3) {
		i2c_bus = via_find_ddc_bus(0x25);
	} else if (enc->i2c_bus & VIA_I2C_BUS4) {
		i2c_bus = via_find_ddc_bus(0x2c);
	} else if (enc->i2c_bus & VIA_I2C_BUS5) {
		i2c_bus = via_find_ddc_bus(0x3d);
	} else {
		i2c_bus = NULL;
		goto exit;
	}

	via_transmitter_clock_drive_strength(dev, enc->di_port, 0x03);
	via_transmitter_data_drive_strength(dev, enc->di_port, 0x03);
	via_transmitter_io_pad_state(dev, enc->di_port, true);
	if (pdev->device == PCI_DEVICE_ID_VIA_CLE266_GFX) {
		via_clock_source(dev, enc->di_port, true);
	}

	via_vt1632_display_registers(dev, i2c_bus);
	via_vt1632_init_registers(dev, i2c_bus);
	via_vt1632_display_registers(dev, i2c_bus);

	via_transmitter_display_source(dev, enc->di_port, iga->index);
exit:

	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}

static void via_vt1632_prepare(struct drm_encoder *encoder)
{
	struct via_encoder *enc = container_of(encoder,
					struct via_encoder, base);
	struct drm_device *dev = encoder->dev;
	struct pci_dev *pdev = to_pci_dev(dev->dev);
	struct i2c_adapter *i2c_bus;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	if (enc->i2c_bus & VIA_I2C_BUS1) {
		i2c_bus = via_find_ddc_bus(0x26);
	} else if (enc->i2c_bus & VIA_I2C_BUS2) {
		i2c_bus = via_find_ddc_bus(0x31);
	} else if (enc->i2c_bus & VIA_I2C_BUS3) {
		i2c_bus = via_find_ddc_bus(0x25);
	} else if (enc->i2c_bus & VIA_I2C_BUS4) {
		i2c_bus = via_find_ddc_bus(0x2c);
	} else if (enc->i2c_bus & VIA_I2C_BUS5) {
		i2c_bus = via_find_ddc_bus(0x3d);
	} else {
		i2c_bus = NULL;
		goto exit;
	}

	via_vt1632_power(dev, i2c_bus, false);
	via_transmitter_io_pad_state(dev, enc->di_port, false);
	if (pdev->device == PCI_DEVICE_ID_VIA_CLE266_GFX) {
		via_output_enable(dev, enc->di_port, false);
	}

exit:
	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}

static void via_vt1632_commit(struct drm_encoder *encoder)
{
	struct via_encoder *enc = container_of(encoder,
					struct via_encoder, base);
	struct drm_device *dev = encoder->dev;
	struct pci_dev *pdev = to_pci_dev(dev->dev);
	struct i2c_adapter *i2c_bus;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	if (enc->i2c_bus & VIA_I2C_BUS1) {
		i2c_bus = via_find_ddc_bus(0x26);
	} else if (enc->i2c_bus & VIA_I2C_BUS2) {
		i2c_bus = via_find_ddc_bus(0x31);
	} else if (enc->i2c_bus & VIA_I2C_BUS3) {
		i2c_bus = via_find_ddc_bus(0x25);
	} else if (enc->i2c_bus & VIA_I2C_BUS4) {
		i2c_bus = via_find_ddc_bus(0x2c);
	} else if (enc->i2c_bus & VIA_I2C_BUS5) {
		i2c_bus = via_find_ddc_bus(0x3d);
	} else {
		i2c_bus = NULL;
		goto exit;
	}

	via_vt1632_power(dev, i2c_bus, true);
	via_transmitter_io_pad_state(dev, enc->di_port, true);
	if (pdev->device == PCI_DEVICE_ID_VIA_CLE266_GFX) {
		via_output_enable(dev, enc->di_port, true);
	}

exit:
	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}

static void via_vt1632_disable(struct drm_encoder *encoder)
{
	struct via_encoder *enc = container_of(encoder,
					struct via_encoder, base);
	struct drm_device *dev = encoder->dev;
	struct i2c_adapter *i2c_bus;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	if (enc->i2c_bus & VIA_I2C_BUS1) {
		i2c_bus = via_find_ddc_bus(0x26);
	} else if (enc->i2c_bus & VIA_I2C_BUS2) {
		i2c_bus = via_find_ddc_bus(0x31);
	} else if (enc->i2c_bus & VIA_I2C_BUS3) {
		i2c_bus = via_find_ddc_bus(0x25);
	} else if (enc->i2c_bus & VIA_I2C_BUS4) {
		i2c_bus = via_find_ddc_bus(0x2c);
	} else if (enc->i2c_bus & VIA_I2C_BUS5) {
		i2c_bus = via_find_ddc_bus(0x3d);
	} else {
		i2c_bus = NULL;
		goto exit;
	}

	via_vt1632_power(dev, i2c_bus, false);
	via_transmitter_io_pad_state(dev, enc->di_port, false);
exit:
	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}


static const struct drm_encoder_helper_funcs
via_vt1632_drm_encoder_helper_funcs = {
	.dpms = via_vt1632_dpms,
	.mode_fixup = via_vt1632_mode_fixup,
	.mode_set = via_vt1632_mode_set,
	.prepare = via_vt1632_prepare,
	.commit = via_vt1632_commit,
	.disable = via_vt1632_disable,
};


static enum drm_connector_status via_vt1632_detect(
					struct drm_connector *connector,
					bool force)
{
	struct drm_device *dev = connector->dev;
	struct via_connector *con = container_of(connector,
					struct via_connector, base);
	struct i2c_adapter *i2c_bus;
	enum drm_connector_status ret = connector_status_disconnected;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	if (con->i2c_bus & VIA_I2C_BUS1) {
		i2c_bus = via_find_ddc_bus(0x26);
	} else if (con->i2c_bus & VIA_I2C_BUS2) {
		i2c_bus = via_find_ddc_bus(0x31);
	} else if (con->i2c_bus & VIA_I2C_BUS3) {
		i2c_bus = via_find_ddc_bus(0x25);
	} else if (con->i2c_bus & VIA_I2C_BUS4) {
		i2c_bus = via_find_ddc_bus(0x2c);
	} else if (con->i2c_bus & VIA_I2C_BUS5) {
		i2c_bus = via_find_ddc_bus(0x3d);
	} else {
		i2c_bus = NULL;
		goto exit;
	}

	if (via_vt1632_sense(dev, i2c_bus)) {
		ret = connector_status_connected;
		drm_dbg_kms(dev, "DVI detected.\n");
	}

exit:
	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
	return ret;
}

static const struct drm_connector_funcs via_vt1632_drm_connector_funcs = {
	.dpms = drm_helper_connector_dpms,
	.detect = via_vt1632_detect,
	.fill_modes = drm_helper_probe_single_connector_modes,
	.destroy = via_connector_destroy,
	.reset = drm_atomic_helper_connector_reset,
	.atomic_duplicate_state =
			drm_atomic_helper_connector_duplicate_state,
	.atomic_destroy_state =
			drm_atomic_helper_connector_destroy_state,
};


static int via_vt1632_mode_valid(struct drm_connector *connector,
					struct drm_display_mode *mode)
{
	struct drm_device *dev = connector->dev;
	struct via_connector *con = container_of(connector,
					struct via_connector, base);
	struct i2c_adapter *i2c_bus;
	u8 buf;
	uint32_t low_freq_limit, high_freq_limit;
	int ret;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	if (con->i2c_bus & VIA_I2C_BUS1) {
		i2c_bus = via_find_ddc_bus(0x26);
	} else if (con->i2c_bus & VIA_I2C_BUS2) {
		i2c_bus = via_find_ddc_bus(0x31);
	} else if (con->i2c_bus & VIA_I2C_BUS3) {
		i2c_bus = via_find_ddc_bus(0x25);
	} else if (con->i2c_bus & VIA_I2C_BUS4) {
		i2c_bus = via_find_ddc_bus(0x2c);
	} else if (con->i2c_bus & VIA_I2C_BUS5) {
		i2c_bus = via_find_ddc_bus(0x3d);
	} else {
		i2c_bus = NULL;
		ret = MODE_ERROR;
		goto exit;
	}

	via_i2c_readbytes(i2c_bus, 0x08, 0x06, &buf, 1);
	low_freq_limit = buf * 1000;
	via_i2c_readbytes(i2c_bus, 0x08, 0x07, &buf, 1);
	high_freq_limit = (buf + 65) * 1000;
	drm_dbg_kms(dev, "Low Frequency Limit: %u KHz\n", low_freq_limit);
	drm_dbg_kms(dev, "High Frequency Limit: %u KHz\n", high_freq_limit);

	if (mode->clock < low_freq_limit) {
		ret = MODE_CLOCK_LOW;
		goto exit;
	}

	if (mode->clock > high_freq_limit) {
		ret = MODE_CLOCK_HIGH;
		goto exit;
	}

	ret = MODE_OK;
exit:
	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
	return ret;
}

static int via_vt1632_get_modes(struct drm_connector *connector)
{
	struct drm_device *dev = connector->dev;
	struct via_connector *con = container_of(connector,
					struct via_connector, base);
	int count = 0;
	struct i2c_adapter *i2c_bus;
	struct edid *edid = NULL;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	if (con->i2c_bus & VIA_I2C_BUS1) {
		i2c_bus = via_find_ddc_bus(0x26);
	} else if (con->i2c_bus & VIA_I2C_BUS2) {
		i2c_bus = via_find_ddc_bus(0x31);
	} else if (con->i2c_bus & VIA_I2C_BUS3) {
		i2c_bus = via_find_ddc_bus(0x25);
	} else if (con->i2c_bus & VIA_I2C_BUS4) {
		i2c_bus = via_find_ddc_bus(0x2c);
	} else if (con->i2c_bus & VIA_I2C_BUS5) {
		i2c_bus = via_find_ddc_bus(0x3d);
	} else {
		i2c_bus = NULL;
		goto exit;
	}

	edid = drm_get_edid(&con->base, i2c_bus);
	if (edid) {
		if (edid->input & DRM_EDID_INPUT_DIGITAL) {
			drm_connector_update_edid_property(connector, edid);
			count = drm_add_edid_modes(connector, edid);
			drm_dbg_kms(dev, "DVI EDID information was obtained.\n");
		}

		kfree(edid);
	}

exit:
	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
	return count;
}

static const struct drm_connector_helper_funcs
via_vt1632_drm_connector_helper_funcs = {
	.mode_valid = via_vt1632_mode_valid,
	.get_modes = via_vt1632_get_modes,
};

bool via_vt1632_probe(struct drm_device *dev,
			struct i2c_adapter *i2c_bus)
{
	u8 buf;
	u16 vendor_id, device_id, revision;
	bool device_detected = false;

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	via_i2c_readbytes(i2c_bus, 0x08, 0x00, &buf, 1);
	vendor_id = buf;
	via_i2c_readbytes(i2c_bus, 0x08, 0x01, &buf, 1);
	vendor_id |= (buf << 8);
	drm_dbg_kms(dev, "Vendor ID: %x\n", vendor_id);
	via_i2c_readbytes(i2c_bus, 0x08, 0x02, &buf, 1);
	device_id = buf;
	via_i2c_readbytes(i2c_bus, 0x08, 0x03, &buf, 1);
	device_id |= (buf << 8);
	drm_dbg_kms(dev, "Device ID: %x\n", device_id);
	via_i2c_readbytes(i2c_bus, 0x08, 0x04, &buf, 1);
	revision = buf;
	drm_dbg_kms(dev, "Revision: %x\n", revision);

	if ((vendor_id != 0x1106) || (device_id != 0x3192)) {
		goto exit;
	}

	device_detected = true;
exit:
	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
	return device_detected;
}

void via_vt1632_init(struct drm_device *dev)
{
	struct via_connector *con;
	struct via_encoder *enc;
	struct via_drm_priv *dev_priv = to_via_drm_priv(dev);

	drm_dbg_kms(dev, "Entered %s.\n", __func__);

	if (!dev_priv->ext_tmds_presence) {
		goto exit;
	}

	enc = kzalloc(sizeof(*enc) + sizeof(*con), GFP_KERNEL);
	if (!enc) {
		drm_err(dev, "Failed to allocate connector "
				"and encoder.\n");
		goto exit;
	}

	drm_encoder_init(dev, &enc->base, &via_vt1632_drm_encoder_funcs,
						DRM_MODE_ENCODER_TMDS, NULL);
	drm_encoder_helper_add(&enc->base,
					&via_vt1632_drm_encoder_helper_funcs);

	enc->base.possible_crtcs = BIT(1) | BIT(0);
	enc->base.possible_clones = 0;

	enc->i2c_bus = dev_priv->ext_tmds_i2c_bus;
	enc->di_port = dev_priv->ext_tmds_di_port;

	/* Increment the number of DVI connectors. */
	dev_priv->number_dvi++;


	con = &enc->con;

	drm_connector_init(dev, &con->base, &via_vt1632_drm_connector_funcs,
				DRM_MODE_CONNECTOR_DVID);
	drm_connector_helper_add(&con->base,
				&via_vt1632_drm_connector_helper_funcs);
	drm_connector_register(&con->base);

	con->base.doublescan_allowed = false;
	con->base.interlace_allowed = false;

	con->i2c_bus = dev_priv->ext_tmds_i2c_bus;

	INIT_LIST_HEAD(&con->props);
	drm_connector_attach_encoder(&con->base, &enc->base);
exit:
	drm_dbg_kms(dev, "Exiting %s.\n", __func__);
}

[File Ends] drivers/gpu/drm/via/via_vt1632.c

[File Begins] include/uapi/drm/via_drm.h
/*
 * VIA DRM UAPI definitions
 */

#ifndef _VIA_DRM_H_
#define _VIA_DRM_H_

#include "drm.h"

#if defined(__cplusplus)
extern "C" {
#endif

/* VIA specific ioctls */
#define DRM_VIA_GEM_ALLOC   0x20
#define DRM_VIA_GEM_MMAP    0x21

#define DRM_IOCTL_VIA_GEM_ALLOC   DRM_IOWR(DRM_COMMAND_BASE + DRM_VIA_GEM_ALLOC, struct drm_via_gem_alloc)
#define DRM_IOCTL_VIA_GEM_MMAP    DRM_IOWR(DRM_COMMAND_BASE + DRM_VIA_GEM_MMAP, struct drm_via_gem_mmap)

/* Structures for VIA-specific ioctls */
struct drm_via_gem_alloc {
    uint64_t size;
    uint32_t handle;
    uint32_t alignment;
    uint32_t initial_domain;
    uint32_t pad;
};

struct drm_via_gem_mmap {
    uint32_t handle;
    uint32_t pad;
    uint64_t offset;
    uint64_t size;
    uint64_t addr_ptr;
};

#if defined(__cplusplus)
}
#endif

#endif /* _VIA_DRM_H_ */

[File Ends] include/uapi/drm/via_drm.h


<-- File Content Ends

